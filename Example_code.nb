Notebook[{

Cell[CellGroupData[{
Cell["Initialization", \
"Section",ExpressionUUID->"0231796b-6132-4fd1-9fee-40bf487c529a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "DualNumbers`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",ExpressionUUID->"db0bf3fb-3968-4b36-8211-5cb1fa482ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DualNumbers", \
"Section",ExpressionUUID->"8ee5ae86-a341-4457-8275-7b676122c998"],

Cell[CellGroupData[{

Cell["Symbols", \
"Subsubsection",ExpressionUUID->"480ee803-0653-481c-ba8a-1ac428f21399"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "Dual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ScalarQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualEpsilon"}], "\[IndentingNewLine]", 
 RowBox[{"?", "InactiveEpsilon"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Standard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "NonStandard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardAll"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualExpand"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFactor"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindRoot"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMinimum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FindDualSolution"}]}], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"3082b9ef-db93-4ab3-b0ce-e85ddbdee692"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" UpValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"UpValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "UpValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`c", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ")"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c", "+", 
                    "FunctionRepo`DualNumbers`Private`a"}], ",", 
                    "FunctionRepo`DualNumbers`Private`b"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1_"}], "]"}], "+", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2_"}], "]"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", "+", 
                    "FunctionRepo`DualNumbers`Private`a2"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b1", "+", 
                    "FunctionRepo`DualNumbers`Private`b2"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`c", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ")"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c", " ", 
                    "FunctionRepo`DualNumbers`Private`a"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c", " ", 
                    "FunctionRepo`DualNumbers`Private`b"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1_"}], "]"}], " ", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2_"}], "]"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", " ", 
                    "FunctionRepo`DualNumbers`Private`a2"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b1", " ", 
                    "FunctionRepo`DualNumbers`Private`a2"}], "+", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", " ", 
                    "FunctionRepo`DualNumbers`Private`b2"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1_"}], "]"}], "-", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2_"}], "]"}]}], "]"}], 
                    "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", "-", 
                    "FunctionRepo`DualNumbers`Private`a2"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b1", "-", 
                    "FunctionRepo`DualNumbers`Private`b2"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    FractionBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1_"}], "]"}], 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    FractionBox["FunctionRepo`DualNumbers`Private`a1", 
                    "FunctionRepo`DualNumbers`Private`a2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b1", " ", 
                    "FunctionRepo`DualNumbers`Private`a2"}], "-", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", " ", 
                    "FunctionRepo`DualNumbers`Private`b2"}]}], 
                    
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`a2", 
                    "2"]]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], "1"], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a", ",", 
                    "FunctionRepo`DualNumbers`Private`b"}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Except", "[", 
                    RowBox[{"0", "|", "0.`"}], "]"}], ",", "_"}], "]"}], "0"],
                     ":=", "1"}]},
                    {
                    RowBox[{"Dual", "/:", 
                    FractionBox["1", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}]], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    FractionBox["1", "FunctionRepo`DualNumbers`Private`a"], 
                    ",", 
                    RowBox[{"-", 
                    FractionBox["FunctionRepo`DualNumbers`Private`b", 
                    
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`a", 
                    "2"]]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Abs", "[", "FunctionRepo`DualNumbers`Private`a", "]"}], 
                    ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`b", " ", 
                    RowBox[{
                    "Sign", "[", "FunctionRepo`DualNumbers`Private`a", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Sign", "[", "FunctionRepo`DualNumbers`Private`a", 
                    "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`xmin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`xmax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}]}], "]"}],
                     ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin", ",", 
                    "FunctionRepo`DualNumbers`Private`xmax"}], "}"}]}], "]"}],
                     ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`b", " ", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin", "\[LessEqual]", 
                    "FunctionRepo`DualNumbers`Private`a", "\[LessEqual]", 
                    "FunctionRepo`DualNumbers`Private`xmax"}]}], "}"}], "}"}],
                     ",", "0"}], "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`xmin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`xmax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`ymin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`ymax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}]}], "]"}],
                     ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin", ",", 
                    "FunctionRepo`DualNumbers`Private`xmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`ymin", ",", 
                    "FunctionRepo`DualNumbers`Private`ymax"}], "}"}]}], "]"}],
                     ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`b", " ", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin", "\[LessEqual]", 
                    "FunctionRepo`DualNumbers`Private`a", "\[LessEqual]", 
                    "FunctionRepo`DualNumbers`Private`xmax"}]}], "}"}], "}"}],
                     ",", "0"}], "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin$_", ",", 
                    "FunctionRepo`DualNumbers`Private`xmax$_"}], "}"}]}], 
                    "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdargs$", "=", 
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$", ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`xmin$", "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`xmax$", "]"}]}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}], ",", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`b$", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualQ", "[", "FunctionRepo`DualNumbers`Private`xmin$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`nonstd", "[", 
                    "FunctionRepo`DualNumbers`Private`xmin$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], ",",
                     "0"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualQ", "[", "FunctionRepo`DualNumbers`Private`xmax$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`nonstd", "[", 
                    "FunctionRepo`DualNumbers`Private`xmax$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ">", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[GreaterEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], "}"}], ",", "0"}],
                     "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], ",",
                     "0"}], "]"}]}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`xmin$_", ",", 
                    "FunctionRepo`DualNumbers`Private`xmax$_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`ymin$_", ",", 
                    "FunctionRepo`DualNumbers`Private`ymax$_"}], "}"}]}], 
                    "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdargs$", "=", 
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$", ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`xmin$", "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`xmax$", "]"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`ymin$", "]"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`ymax$", "]"}]}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                     ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}], ",", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`b$", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualQ", "[", "FunctionRepo`DualNumbers`Private`ymin$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`nonstd", "[", 
                    "FunctionRepo`DualNumbers`Private`ymin$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], ",",
                     "0"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualQ", "[", "FunctionRepo`DualNumbers`Private`ymax$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`nonstd", "[", 
                    "FunctionRepo`DualNumbers`Private`ymax$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ">", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[GreaterEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], "}"}], ",", "0"}],
                     "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`stdargs$", "]"}]}], ",",
                     "0"}], "]"}]}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c_", "?", "ArrayQ"}], 
                    ".", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c", ".", 
                    "FunctionRepo`DualNumbers`Private`a"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c", ".", 
                    "FunctionRepo`DualNumbers`Private`b"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ".", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c_", "?", "ArrayQ"}]}], 
                    "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a", ".", 
                    "FunctionRepo`DualNumbers`Private`c"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b", ".", 
                    "FunctionRepo`DualNumbers`Private`c"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ".", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", ".", 
                    "FunctionRepo`DualNumbers`Private`a2"}], ",", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1", ".", 
                    "FunctionRepo`DualNumbers`Private`b2"}], "+", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b1", ".", 
                    "FunctionRepo`DualNumbers`Private`a2"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`d_Dual", "?", 
                    "DualSquareMatrixQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`n_Integer", "?", 
                    "Positive"}]}], "]"}], ":=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#2", "===", "1"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d", ".", "#1"}],
                     ",", "#1"}], "]"}], ".", "#1"}], "&"}], ",", 
                    "FunctionRepo`DualNumbers`Private`d", ",", 
                    RowBox[{"Rest", "[", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`n", ",", "2"}], 
                    "]"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`d_Dual", "?", 
                    "DualSquareMatrixQ"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`n_Integer", "?", 
                    "Negative"}]}], "]"}], ":=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d", ",", 
                    RowBox[{"-", "FunctionRepo`DualNumbers`Private`n"}]}], 
                    "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Inverse", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ")"}], 
                    "?", "DualSquareMatrixQ"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`inv", "=", 
                    RowBox[{
                    "Inverse", "[", "FunctionRepo`DualNumbers`Private`a", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`inv", ",", 
                    RowBox[{"-", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`inv", ".", 
                    "FunctionRepo`DualNumbers`Private`b", ".", 
                    "FunctionRepo`DualNumbers`Private`inv"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "MatrixQ", "[", "FunctionRepo`DualNumbers`Private`inv", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ")"}], 
                    "?", "DualSquareMatrixQ"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`ls", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a", ",", 
                    "FunctionRepo`DualNumbers`Private`opts"}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`ls", ",", 
                    "FunctionRepo`DualNumbers`Private`b"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", "FunctionRepo`DualNumbers`Private`ls", "]"}],
                     "===", "LinearSolveFunction"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ")"}], 
                    "?", "DualSquareMatrixQ"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`x", ":", 
                    RowBox[{
                    RowBox[{"_", "?", "ArrayQ"}], "|", 
                    RowBox[{"_", "?", "DualArrayQ"}]}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`ls", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a", ",", 
                    "FunctionRepo`DualNumbers`Private`opts"}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`ls", ",", 
                    "FunctionRepo`DualNumbers`Private`b"}], "]"}], "[", 
                    "FunctionRepo`DualNumbers`Private`x", "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", "FunctionRepo`DualNumbers`Private`ls", "]"}],
                     "===", "LinearSolveFunction"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NumericQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NumericQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NumberQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "IntegerQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Positive", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Positive", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Negative", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Negative", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NonPositive", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NonPositive", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NonNegative", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NonNegative", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "PossibleZeroQ", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Re", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Re", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Im", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Im", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EvenQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "EvenQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"OddQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "OddQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PrimeQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "PrimeQ", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AlgebraicIntegerQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", "_"}], "]"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{
                    "AlgebraicIntegerQ", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Total"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Mean"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Transpose"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], "\[LeftDoubleBracket]", 
                    "FunctionRepo`DualNumbers`Private`rest$___", 
                    "\[RightDoubleBracket]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", 
                    "\[LeftDoubleBracket]", 
                    "FunctionRepo`DualNumbers`Private`rest$", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", 
                    "\[LeftDoubleBracket]", 
                    "FunctionRepo`DualNumbers`Private`rest$", 
                    "\[RightDoubleBracket]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "\[LeftDoubleBracket]", 
                    "___", "\[RightDoubleBracket]"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Part"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Take"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Drop"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "MatrixQ"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "VectorQ"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArrayQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"ArrayQ", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArrayQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "ArrayQ"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Dimensions"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ")"}], 
                    "?", "DualArrayQ"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Length"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryAi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryAi", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AiryAiPrime", "[", "#1", "]"}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryAiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryAiPrime", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AiryAi", "[", "#1", "]"}], " ", "#1"}], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryBi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryBi", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AiryBiPrime", "[", "#1", "]"}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryBiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryBiPrime", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AiryBi", "[", "#1", "]"}], " ", "#1"}], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCos", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCosh", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]], " ", 
                    SqrtBox[
                    RowBox[{"1", "+", "#1"}]]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCot", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCot", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCoth", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCoth", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCsc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCsc", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCsch", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcCsch", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSec", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcSec", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSech", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcSech", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"#1", " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"1", "-", "#1"}], 
                    RowBox[{"1", "+", "#1"}]]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "#1"}], ")"}]}]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSin", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcSin", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSinh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcSinh", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcTan", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcTan", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcTanh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ArcTanh", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BarnesG", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BarnesG", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BarnesG", "[", "#1", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#1", "-", "1"}], ")"}], " ", 
                    RowBox[{"PolyGamma", "[", "#1", "]"}]}], "-", "#1", "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"2", " ", "\[Pi]"}], "]"}], "+", "1"}], ")"}]}]}],
                     ")"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BartlettHannWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BartlettHannWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{"24", "-", 
                    RowBox[{"38", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "24"}], "-", 
                    RowBox[{"38", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BartlettWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BartlettWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanHarrisWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanHarrisWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "97658"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"56512", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"7008", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "100000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanNuttallWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanNuttallWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "9783550"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"5463980", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"638466", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "10000000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "50"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"16", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BohmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BohmanWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], " ", 
                    "#1"}]}], "\[Pi]"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], " ", 
                    "#1"}]}], "\[Pi]"], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"CauchyWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "CauchyWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"72", " ", "#1"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"36", " ", 
                    SuperscriptBox["#1", "2"]}]}], ")"}], "2"]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Ceiling", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"Ceiling", "[", "#1", "]"}]}]}], "}"}], "}"}], 
                    ",", "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Clip", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", "1"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "<", "#1", "<", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", "1"}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ConnesWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ConnesWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "16"}], " ", "#1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Cos", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Cosh", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sinh", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"CosineWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "CosineWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cot", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Cot", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"Csc", "[", "#1", "]"}], "2"]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Coth", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Coth", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"Csch", "[", "#1", "]"}], "2"]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Csc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Csc", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cot", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Csc", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Csch", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Csch", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Coth", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Csch", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RadicalBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "3",
                    MultilineFunction->None,
                    SurdForm->True], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RadicalBox["FunctionRepo`DualNumbers`Private`a$", "3",
                    MultilineFunction->None,
                    SurdForm->True], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RadicalBox["#1", "3",
                    MultilineFunction->None,
                    SurdForm->True], "2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DawsonF", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DawsonF", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "#1", " ", 
                    RowBox[{"DawsonF", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DirichletWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DirichletWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "2"]}], "||", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DiscreteDelta", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DiscreteDelta", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EllipticE", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "EllipticE", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"EllipticE", "[", "#1", "]"}], "-", 
                    RowBox[{"EllipticK", "[", "#1", "]"}]}], 
                    RowBox[{"2", " ", "#1"}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EllipticK", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "EllipticK", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"EllipticE", "[", "#1", "]"}], "-", 
                    RowBox[{
                    RowBox[{"EllipticK", "[", "#1", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erf", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Erf", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox["#1", "2"]}]]}], 
                    SqrtBox["\[Pi]"]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erfc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Erfc", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox["#1", "2"]}]]}], 
                    SqrtBox["\[Pi]"]]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erfi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Erfi", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    SuperscriptBox["#1", "2"]]}], 
                    SqrtBox["\[Pi]"]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ExactBlackmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ExactBlackmanWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "9240"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"2860", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "9304"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Exp", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "#1"], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ExpIntegralEi", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", "#1"], "#1"], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "!"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$", "!"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "+", "#1"}], "]"}], " ", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "!!"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$", "!!"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"#1", "!!"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "+", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", 
                    FractionBox["#1", "2"]}]}], "]"}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Log", "[", 
                    FractionBox["2", "\[Pi]"], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Fibonacci", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Fibonacci", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
                    SqrtBox["5"]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FlatTopWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FlatTopWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "833263160"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"1109052632", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"501473682", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"55578944", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"8", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "1000000000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Floor", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    RowBox[{"Floor", "[", "#1", "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FractionalPart", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FractionalPart", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Gamma", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", "#1", "]"}], " ", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"GaussianWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "GaussianWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["100", "9"]}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"50", " ", 
                    SuperscriptBox["#1", "2"]}], "9"]}]], " ", "#1"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gudermannian", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Gudermannian", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sech", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HammingWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HammingWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["21", "23"]}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HannPoissonWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HannPoissonWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "#1"}]]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[GreaterEqual]", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HannWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HannWindow", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Haversine", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Haversine", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Sin", "[", "#1", "]"}], "2"], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HeavisideLambda", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HeavisideLambda", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", "#1"}], "]"}]}], "+", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "#1"}], "]"}]}], "&"}], ")"}],
                     "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HeavisidePi", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"DiracDelta", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "#1"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"DiracDelta", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "#1"}]}], "]"}]}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "IntegerPart", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"InverseGudermannian", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "InverseGudermannian", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sec", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"InverseHaversine", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "InverseHaversine", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}], " ", "#1"}]]], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KaiserBesselWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KaiserBesselWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "996"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"396", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"6", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "1000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KaiserWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KaiserWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"12", " ", 
                    RowBox[{"BesselI", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"3", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}]]}]}], "]"}], " ", "#1"}], 
                    RowBox[{
                    RowBox[{"BesselI", "[", 
                    RowBox[{"0", ",", "3"}], "]"}], " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}]]}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KelvinBei", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KelvinBer", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KelvinKei", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KelvinKer", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]}]},
                    "KroneckerDeltaSeq"], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`a$"}]},
                    "KroneckerDeltaSeq"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LanczosWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LanczosWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}]]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Log", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", "#1"], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log10", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Log10", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "10", "]"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log2", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Log2", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogBarnesG", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogBarnesG", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#1", "-", "1"}], ")"}], " ", 
                    RowBox[{"PolyGamma", "[", "#1", "]"}]}], "-", "#1", "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"2", " ", "\[Pi]"}], "]"}], "+", "1"}], ")"}]}]}],
                     "&"}], ")"}], "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], " ", "FunctionRepo`DualNumbers`Private`b$"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogGamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogGamma", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogIntegral", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogIntegral", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"Log", "[", "#1", "]"}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogisticSigmoid", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogisticSigmoid", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"LogisticSigmoid", "[", "#1", "]"}]}], ")"}], " ", 
                    RowBox[{"LogisticSigmoid", "[", "#1", "]"}]}], "&"}], 
                    ")"}], "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    " ", "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LucasL", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LucasL", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", "#1"], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Max", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Min", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"-", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]}], "]"}], 
                    "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"-", "FunctionRepo`DualNumbers`Private`a$"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Multinomial", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Multinomial", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NuttallWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "NuttallWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "243698"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"144232", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"18906", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "250000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ParzenWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ParzenWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "#1"}]}], ")"}], "2"]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "4"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "4"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "48"}], " ", "#1"}], "-", 
                    RowBox[{"144", " ", 
                    SuperscriptBox["#1", "2"]}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "48"}], " ", "#1"}], "+", 
                    RowBox[{"144", " ", 
                    SuperscriptBox["#1", "2"]}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "4"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "4"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "#1"}]}], ")"}], "2"]}], ",", 
                    RowBox[{
                    FractionBox["1", "4"], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PoissonWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "PoissonWindow", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"6", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"6", " ", "#1"}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "6"}], " ", "#1"}]]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "PolyGamma", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"QPochhammer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "QPochhammer", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"QPochhammer", "[", 
                    RowBox[{"#1", ",", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "#1"}], "]"}], "+", 
                    RowBox[{"QPolyGamma", "[", 
                    RowBox[{"0", ",", "1", ",", "#1"}], "]"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", "#1"}]]}], "+", 
                    RowBox[{
                    SuperscriptBox["QPochhammer", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"#1", ",", "#1"}], "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Ramp", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Ramp", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"#1", ">", "0"}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RealAbs", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RealAbs", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["#1", 
                    RowBox[{"RealAbs", "[", "#1", "]"}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RealSign", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RealSign", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[NotEqual]", "0"}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RiemannSiegelTheta", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RiemannSiegelTheta", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", "\[Pi]", "]"}], "2"]}], "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "#1"}], "2"]}]}], "]"}], 
                    "+", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "#1"}], "2"]}]}], "]"}]}], 
                    ")"}]}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RiemannSiegelZ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RiemannSiegelZ", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"RiemannSiegelTheta", "[", "#1", "]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "\[Pi]", "]"}]}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "#1"}]}], 
                    ")"}]}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "#1"}]}], 
                    ")"}]}]}], "]"}]}], ")"}], " ", 
                    RowBox[{"Zeta", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#1"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    RowBox[{
                    SuperscriptBox["Zeta", "\[Prime]",
                    MultilineFunction->None], "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#1"}]}], "]"}]}]}], 
                    ")"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Round", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "+", 
                    RowBox[{"Re", "[", "#1", "]"}]}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "+", 
                    RowBox[{"Im", "[", "#1", "]"}]}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}]}], "}"}], "}"}], ",", "Indeterminate"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ScorerGiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ScorerGiPrime", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "\[Pi]"]}], "+", 
                    RowBox[{"#1", " ", 
                    RowBox[{"ScorerGi", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ScorerHiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ScorerHiPrime", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "\[Pi]"], "+", 
                    RowBox[{"#1", " ", 
                    RowBox[{"ScorerHi", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Sec", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sec", "[", "#1", "]"}], " ", 
                    RowBox[{"Tan", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sech", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Sech", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Sech", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Tanh", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Sin", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sinc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Sinc", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Sin", "[", "#1", "]"}], 
                    SuperscriptBox["#1", "2"]]}], "+", 
                    FractionBox[
                    RowBox[{"Cos", "[", "#1", "]"}], "#1"]}], "&"}], ")"}], 
                    "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Sinh", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SqrtBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    SqrtBox["FunctionRepo`DualNumbers`Private`a$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["#1"]}]], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Tan", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "#1", "]"}], "2"], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Tanh", "[", "FunctionRepo`DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sech", "[", "#1", "]"}], "2"], "&"}], ")"}], "[",
                     "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"TukeyWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "TukeyWindow", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["3", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "6"], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["3", "2"]}], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "6"]}]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitBox", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "UnitBox", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "2"]}], "||", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitStep", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "UnitStep", "[", "FunctionRepo`DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{"#1", "\[Equal]", "0"}]}], "}"}], "}"}], ",", 
                    "0"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitTriangle", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "UnitTriangle", "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["#1", "2"]}], ")"}]}], "\[Equal]", "0"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "<", "#1", "<", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"0", "<", "#1", "<", "1"}]}], "}"}]}], "}"}], ",",
                     "0"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"WelchWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "WelchWindow", "[", "FunctionRepo`DualNumbers`Private`a$",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", "#1"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "FunctionRepo`DualNumbers`Private`a$", "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1$_"}], "]"}], 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2$_"}], "]"}]], "]"}], 
                    "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`a1$", 
                    "FunctionRepo`DualNumbers`Private`a2$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["#1", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#2"}]], " ", "#2"}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", 
                    SuperscriptBox["#1", "#2"]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], 
                    "FunctionRepo`DualNumbers`Private`c$_"], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`a$", 
                    "FunctionRepo`DualNumbers`Private`c$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["#1", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#2"}]], " ", "#2"}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`c$_", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`c$", 
                    "FunctionRepo`DualNumbers`Private`a$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", 
                    SuperscriptBox["#1", "#2"]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2$_"}], "]"}]}], "]"}],
                     "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], " ", "#1"}], "#2"]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ",", 
                    "FunctionRepo`DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], " ", "#1"}], "#2"]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2$_"}], "]"}]}], "]"}],
                     "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}]}], ")"}]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#2"}]}], "]"}]}], ")"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ",", 
                    "FunctionRepo`DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}]}], ")"}]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#2"}]}], "]"}]}], ")"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a2$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b2$_"}], "]"}]}], "]"}],
                     "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"Log", "[", "#2", "]"}]}], "+", 
                    RowBox[{"MeijerG", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", "#2"}], "]"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "#2"}]]}], " ", 
                    SuperscriptBox["#2", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a1$", ",", 
                    "FunctionRepo`DualNumbers`Private`a2$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}], ",", 
                    "FunctionRepo`DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"Log", "[", "#2", "]"}]}], "+", 
                    RowBox[{"MeijerG", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", "#2"}], "]"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$", ",", 
                    "FunctionRepo`DualNumbers`Private`c$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a$_", ",", 
                    "FunctionRepo`DualNumbers`Private`b$_"}], "]"}]}], "]"}], 
                    "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "#2"}]]}], " ", 
                    SuperscriptBox["#2", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`c$", ",", 
                    "FunctionRepo`DualNumbers`Private`a$"}], "]"}], " ", 
                    "FunctionRepo`DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$___", "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[Equal]", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"Equal", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$___", 
                    "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[NotEqual]", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"Unequal", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`first$___", ">", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], ">", "FunctionRepo`DualNumbers`Private`rest$___"}],
                     "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"Greater", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$___", 
                    "\[GreaterEqual]", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[GreaterEqual]", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"GreaterEqual", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`first$___", "<", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "<", "FunctionRepo`DualNumbers`Private`rest$___"}],
                     "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"Less", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$___", 
                    "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[LessEqual]", 
                    "FunctionRepo`DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "=", 
                    RowBox[{"LessEqual", "@@", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first$", ",", 
                    "FunctionRepo`DualNumbers`Private`d$", ",", 
                    "FunctionRepo`DualNumbers`Private`rest$"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "FunctionRepo`DualNumbers`Private`test", 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`f_Symbol", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first___", ",", 
                    "FunctionRepo`DualNumbers`Private`d_Dual", ",", 
                    "FunctionRepo`DualNumbers`Private`rest___"}], "]"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    "Attributes", "[", "FunctionRepo`DualNumbers`Private`f", 
                    "]"}], ",", "NumericFunction"}], "]"}]}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`args", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`first", ",", 
                    "FunctionRepo`DualNumbers`Private`d", ",", 
                    "FunctionRepo`DualNumbers`Private`rest"}], "}"}]}], "}"}],
                     ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`dualPos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`args", ",", 
                    RowBox[{"_Dual", "?", "DualQ"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}]}], 
                    ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`inputs", "=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`std", "[", 
                    "FunctionRepo`DualNumbers`Private`args", "]"}]}]}], "}"}],
                     ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`derrivs", "=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["FunctionRepo`DualNumbers`Private`f", 
                    TagBox[
                    RowBox[{"(", "##1", ")"}],
                    Derivative],
                    MultilineFunction->None], "&"}], ",", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{
                    "Length", "[", "FunctionRepo`DualNumbers`Private`args", 
                    "]"}], "]"}], "\[LeftDoubleBracket]", 
                    "FunctionRepo`DualNumbers`Private`dualPos", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`f", "@@", 
                    "FunctionRepo`DualNumbers`Private`inputs"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#1", "@@", "FunctionRepo`DualNumbers`Private`inputs"}], 
                    "&"}], ")"}], "/@", 
                    "FunctionRepo`DualNumbers`Private`derrivs"}], ".", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`args", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`dualPos", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`derrivs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`derivativePatt", ".."}],
                     "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", "]"}], "=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_SparseArray", "?", 
                    "ArrayQ"}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", 
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    "Dimensions", "[", "FunctionRepo`DualNumbers`Private`a", 
                    "]"}], ",", "1"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", "?", "ArrayQ"}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    "Dimensions", "[", "FunctionRepo`DualNumbers`Private`a", 
                    "]"}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "Dual", "[", "FunctionRepo`DualNumbers`Private`a_", "]"}],
                     ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", "1"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], ",", 
                    "FunctionRepo`DualNumbers`Private`c_"}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", ",", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b", "+", 
                    "FunctionRepo`DualNumbers`Private`c"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b_", ",", 
                    "FunctionRepo`DualNumbers`Private`c_"}], "]"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a", ",", 
                    "FunctionRepo`DualNumbers`Private`b"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a_", ",", "0"}],
                     "]"}], ":=", "FunctionRepo`DualNumbers`Private`a"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`Dual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  \
StyleBox[\"b\", \"TI\"]}], \"]\"}]\) represents a dual number with standard \
part \!\(\*StyleBox[\"a\", \"TI\"]\) and infinitesimal part \
\!\(\*StyleBox[\"b\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> 
    Information`InformationValueForm[
     UpValues, FunctionRepo`Dual, {FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]] + Pattern[FunctionRepo`DualNumbers`Private`c, 
          Except[
           Blank[FunctionRepo`Dual]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`c + 
         FunctionRepo`DualNumbers`Private`a, 
         FunctionRepo`DualNumbers`Private`b], FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a1, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b1, 
           Blank[]]] + FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a2, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b2, 
           Blank[]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a1 + 
         FunctionRepo`DualNumbers`Private`a2, 
         FunctionRepo`DualNumbers`Private`b1 + 
         FunctionRepo`DualNumbers`Private`b2], FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]] Pattern[FunctionRepo`DualNumbers`Private`c, 
          Except[
           Blank[FunctionRepo`Dual]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`c FunctionRepo`DualNumbers`Private`a,
          FunctionRepo`DualNumbers`Private`c 
         FunctionRepo`DualNumbers`Private`b], FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a1, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b1, 
           Blank[]]] FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a2, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b2, 
           Blank[]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a1 
         FunctionRepo`DualNumbers`Private`a2, 
         FunctionRepo`DualNumbers`Private`b1 
          FunctionRepo`DualNumbers`Private`a2 + 
         FunctionRepo`DualNumbers`Private`a1 
          FunctionRepo`DualNumbers`Private`b2], HoldPattern[
         Subtract[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1, 
            Blank[]]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Subtract[
         FunctionRepo`DualNumbers`Private`a1, 
          FunctionRepo`DualNumbers`Private`a2], 
         Subtract[
         FunctionRepo`DualNumbers`Private`b1, 
          FunctionRepo`DualNumbers`Private`b2]], HoldPattern[
         Divide[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1, 
            Blank[]]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Divide[
         FunctionRepo`DualNumbers`Private`a1, 
          FunctionRepo`DualNumbers`Private`a2], 
         Divide[
          Subtract[
          FunctionRepo`DualNumbers`Private`b1 
           FunctionRepo`DualNumbers`Private`a2, 
           FunctionRepo`DualNumbers`Private`a1 
           FunctionRepo`DualNumbers`Private`b2], 
          FunctionRepo`DualNumbers`Private`a2^2]], FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]]^1 :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a, 
         FunctionRepo`DualNumbers`Private`b], FunctionRepo`Dual[
          Except[
           Alternatives[0, 0.]], 
          Blank[]]^0 :> 1, FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]]^(-1) :> FunctionRepo`Dual[
         Divide[1, FunctionRepo`DualNumbers`Private`a], -
         Divide[FunctionRepo`DualNumbers`Private`b, 
           FunctionRepo`DualNumbers`Private`a^2]], Abs[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]]] :> FunctionRepo`Dual[
         Abs[FunctionRepo`DualNumbers`Private`a], 
         FunctionRepo`DualNumbers`Private`b 
         Sign[FunctionRepo`DualNumbers`Private`a]], Sign[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]]] :> Sign[FunctionRepo`DualNumbers`Private`a], Clip[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]], {
          Pattern[FunctionRepo`DualNumbers`Private`xmin, 
           Except[
            Blank[FunctionRepo`Dual]]], 
          Pattern[FunctionRepo`DualNumbers`Private`xmax, 
           Except[
            Blank[FunctionRepo`Dual]]]}] :> FunctionRepo`Dual[
         Clip[
         FunctionRepo`DualNumbers`Private`a, {
          FunctionRepo`DualNumbers`Private`xmin, 
           FunctionRepo`DualNumbers`Private`xmax}], 
         FunctionRepo`DualNumbers`Private`b 
         Piecewise[{{
            1, FunctionRepo`DualNumbers`Private`xmin <= 
             FunctionRepo`DualNumbers`Private`a <= 
             FunctionRepo`DualNumbers`Private`xmax}}, 0]], Clip[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]], {
          Pattern[FunctionRepo`DualNumbers`Private`xmin, 
           Except[
            Blank[FunctionRepo`Dual]]], 
          Pattern[FunctionRepo`DualNumbers`Private`xmax, 
           Except[
            Blank[FunctionRepo`Dual]]]}, {
          Pattern[FunctionRepo`DualNumbers`Private`ymin, 
           Except[
            Blank[FunctionRepo`Dual]]], 
          Pattern[FunctionRepo`DualNumbers`Private`ymax, 
           Except[
            Blank[FunctionRepo`Dual]]]}] :> FunctionRepo`Dual[
         Clip[
         FunctionRepo`DualNumbers`Private`a, {
          FunctionRepo`DualNumbers`Private`xmin, 
           FunctionRepo`DualNumbers`Private`xmax}, {
          FunctionRepo`DualNumbers`Private`ymin, 
           FunctionRepo`DualNumbers`Private`ymax}], 
         FunctionRepo`DualNumbers`Private`b 
         Piecewise[{{
            1, FunctionRepo`DualNumbers`Private`xmin <= 
             FunctionRepo`DualNumbers`Private`a <= 
             FunctionRepo`DualNumbers`Private`xmax}}, 0]], Clip[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a$, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b$, 
           Blank[]]], {
          Pattern[FunctionRepo`DualNumbers`Private`xmin$, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`xmax$, 
           Blank[]]}] :> 
       With[{FunctionRepo`DualNumbers`Private`stdargs$ = {
           FunctionRepo`DualNumbers`Private`a$, 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`xmin$], 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`xmax$]}}, 
         FunctionRepo`Dual[
          (Clip[
           Part[#, 1], 
           Part[#, {2, 3}]]& )[FunctionRepo`DualNumbers`Private`stdargs$], 
          FunctionRepo`DualNumbers`Private`b$ (
            Piecewise[{{1, Part[#, 2] <= Part[#, 1] <= Part[#, 3]}}, 0]& )[
            FunctionRepo`DualNumbers`Private`stdargs$] + If[
            FunctionRepo`DualQ[FunctionRepo`DualNumbers`Private`xmin$], 
            FunctionRepo`DualNumbers`Private`nonstd[
             FunctionRepo`DualNumbers`Private`xmin$] (
             Piecewise[{{1, Part[#, 1] < Part[#, 2]}}, 0]& )[
             FunctionRepo`DualNumbers`Private`stdargs$], 0] + If[
            FunctionRepo`DualQ[FunctionRepo`DualNumbers`Private`xmax$], 
            FunctionRepo`DualNumbers`Private`nonstd[
             FunctionRepo`DualNumbers`Private`xmax$] (Piecewise[{{1, 
                And[Part[#, 1] > Part[#, 3], Part[#, 1] >= Part[#, 2]]}}, 
              0]& )[FunctionRepo`DualNumbers`Private`stdargs$], 0]]], Clip[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a$, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b$, 
           Blank[]]], {
          Pattern[FunctionRepo`DualNumbers`Private`xmin$, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`xmax$, 
           Blank[]]}, {
          Pattern[FunctionRepo`DualNumbers`Private`ymin$, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`ymax$, 
           Blank[]]}] :> 
       With[{FunctionRepo`DualNumbers`Private`stdargs$ = {
           FunctionRepo`DualNumbers`Private`a$, 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`xmin$], 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`xmax$], 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`ymin$], 
            FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`ymax$]}}, 
         FunctionRepo`Dual[
          (Clip[
           Part[#, 1], 
           Part[#, {2, 3}], 
           Part[#, {4, 5}]]& )[FunctionRepo`DualNumbers`Private`stdargs$], 
          FunctionRepo`DualNumbers`Private`b$ (
            Piecewise[{{1, Part[#, 2] <= Part[#, 1] <= Part[#, 3]}}, 0]& )[
            FunctionRepo`DualNumbers`Private`stdargs$] + If[
            FunctionRepo`DualQ[FunctionRepo`DualNumbers`Private`ymin$], 
            FunctionRepo`DualNumbers`Private`nonstd[
             FunctionRepo`DualNumbers`Private`ymin$] (
             Piecewise[{{1, Part[#, 1] < Part[#, 2]}}, 0]& )[
             FunctionRepo`DualNumbers`Private`stdargs$], 0] + If[
            FunctionRepo`DualQ[FunctionRepo`DualNumbers`Private`ymax$], 
            FunctionRepo`DualNumbers`Private`nonstd[
             FunctionRepo`DualNumbers`Private`ymax$] (Piecewise[{{1, 
                And[Part[#, 1] > Part[#, 3], Part[#, 1] >= Part[#, 2]]}}, 
              0]& )[FunctionRepo`DualNumbers`Private`stdargs$], 0]]], Dot[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`c, 
           Blank[]], ArrayQ], 
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]], FunctionRepo`DualArrayQ]] :> FunctionRepo`Dual[
         Dot[
         FunctionRepo`DualNumbers`Private`c, 
          FunctionRepo`DualNumbers`Private`a], 
         Dot[
         FunctionRepo`DualNumbers`Private`c, 
          FunctionRepo`DualNumbers`Private`b]], Dot[
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]], FunctionRepo`DualArrayQ], 
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`c, 
           Blank[]], ArrayQ]] :> FunctionRepo`Dual[
         Dot[
         FunctionRepo`DualNumbers`Private`a, 
          FunctionRepo`DualNumbers`Private`c], 
         Dot[
         FunctionRepo`DualNumbers`Private`b, 
          FunctionRepo`DualNumbers`Private`c]], Dot[
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1, 
            Blank[]]], FunctionRepo`DualArrayQ], 
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2, 
            Blank[]]], FunctionRepo`DualArrayQ]] :> FunctionRepo`Dual[
         Dot[
         FunctionRepo`DualNumbers`Private`a1, 
          FunctionRepo`DualNumbers`Private`a2], 
         Dot[FunctionRepo`DualNumbers`Private`a1, 
           FunctionRepo`DualNumbers`Private`b2] + 
         Dot[FunctionRepo`DualNumbers`Private`b1, 
           FunctionRepo`DualNumbers`Private`a2]], MatrixPower[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`d, 
           Blank[FunctionRepo`Dual]], FunctionRepo`DualSquareMatrixQ], 
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> Fold[Dot[
          If[#2 === 1, 
           Dot[FunctionRepo`DualNumbers`Private`d, #], #], #]& , 
         FunctionRepo`DualNumbers`Private`d, 
         Rest[
          IntegerDigits[FunctionRepo`DualNumbers`Private`n, 2]]], MatrixPower[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`d, 
           Blank[FunctionRepo`Dual]], FunctionRepo`DualSquareMatrixQ], 
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`n, 
           Blank[Integer]], Negative]] :> Inverse[
         MatrixPower[
         FunctionRepo`DualNumbers`Private`d, -
          FunctionRepo`DualNumbers`Private`n]], Inverse[
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]], FunctionRepo`DualSquareMatrixQ]] :> 
       With[{FunctionRepo`DualNumbers`Private`inv = 
          Inverse[FunctionRepo`DualNumbers`Private`a]}, 
         Condition[
          FunctionRepo`Dual[
          FunctionRepo`DualNumbers`Private`inv, -
           Dot[FunctionRepo`DualNumbers`Private`inv, 
             FunctionRepo`DualNumbers`Private`b, 
             FunctionRepo`DualNumbers`Private`inv]], 
          MatrixQ[FunctionRepo`DualNumbers`Private`inv]]], LinearSolve[
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]], FunctionRepo`DualSquareMatrixQ], 
         Pattern[FunctionRepo`DualNumbers`Private`opts, 
          OptionsPattern[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`ls = 
          LinearSolve[
           FunctionRepo`DualNumbers`Private`a, 
            FunctionRepo`DualNumbers`Private`opts]}, 
         Condition[
          FunctionRepo`DualLinearSolveFunction[
          FunctionRepo`DualNumbers`Private`ls, 
           FunctionRepo`DualNumbers`Private`b], 
          Head[FunctionRepo`DualNumbers`Private`ls] === LinearSolveFunction]],
        LinearSolve[
         PatternTest[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]], FunctionRepo`DualSquareMatrixQ], 
         Pattern[FunctionRepo`DualNumbers`Private`x, 
          Alternatives[
           PatternTest[
            Blank[], ArrayQ], 
           PatternTest[
            Blank[], FunctionRepo`DualArrayQ]]], 
         Pattern[FunctionRepo`DualNumbers`Private`opts, 
          OptionsPattern[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`ls = 
          LinearSolve[
           FunctionRepo`DualNumbers`Private`a, 
            FunctionRepo`DualNumbers`Private`opts]}, 
         Condition[
          FunctionRepo`DualLinearSolveFunction[
          FunctionRepo`DualNumbers`Private`ls, 
           FunctionRepo`DualNumbers`Private`b][
          FunctionRepo`DualNumbers`Private`x], 
          Head[FunctionRepo`DualNumbers`Private`ls] === LinearSolveFunction]],
        HoldPattern[
         NumericQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NumericQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         NumberQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NumberQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         IntegerQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> IntegerQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         Positive[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Positive[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         Negative[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Negative[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         NonPositive[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NonPositive[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         NonNegative[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NonNegative[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         PossibleZeroQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> PossibleZeroQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         Re[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Re[FunctionRepo`DualNumbers`Private`a$], HoldPattern[
         Im[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Im[FunctionRepo`DualNumbers`Private`a$], HoldPattern[
         EvenQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> EvenQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         OddQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> OddQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         PrimeQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> PrimeQ[FunctionRepo`DualNumbers`Private`a$], 
       HoldPattern[
         AlgebraicIntegerQ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> 
       AlgebraicIntegerQ[FunctionRepo`DualNumbers`Private`a$], HoldPattern[
         Total[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Total[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Total[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Total[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Total]; False] :> 
       Undefined, HoldPattern[
         Mean[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Mean[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Mean[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Mean[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Mean]; False] :> 
       Undefined, HoldPattern[
         Transpose[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Transpose[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Transpose[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Transpose[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Transpose]; False] :> 
       Undefined, HoldPattern[
         Part[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Part[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Part[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Part[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Part]; False] :> 
       Undefined, HoldPattern[
         Take[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Take[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Take[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Take[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Take]; False] :> 
       Undefined, HoldPattern[
         Drop[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> FunctionRepo`Dual[
         Drop[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`rest$], 
         Drop[
         FunctionRepo`DualNumbers`Private`b$, 
          FunctionRepo`DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Drop[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Drop]; False] :> 
       Undefined, HoldPattern[
         MatrixQ[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       MatrixQ[FunctionRepo`DualNumbers`Private`a$, 
         FunctionRepo`DualNumbers`Private`rest$], Condition[
         HoldPattern[
          MatrixQ[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], MatrixQ]; False] :> 
       Undefined, HoldPattern[
         VectorQ[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       VectorQ[FunctionRepo`DualNumbers`Private`a$, 
         FunctionRepo`DualNumbers`Private`rest$], Condition[
         HoldPattern[
          VectorQ[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], VectorQ]; False] :> 
       Undefined, HoldPattern[
         ArrayQ[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       ArrayQ[FunctionRepo`DualNumbers`Private`a$, 
         FunctionRepo`DualNumbers`Private`rest$], Condition[
         HoldPattern[
          ArrayQ[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], ArrayQ]; False] :> 
       Undefined, HoldPattern[
         Dimensions[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       Dimensions[
        FunctionRepo`DualNumbers`Private`a$, 
         FunctionRepo`DualNumbers`Private`rest$], Condition[
         HoldPattern[
          Dimensions[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Dimensions]; False] :> 
       Undefined, HoldPattern[
         Length[
          PatternTest[
           FunctionRepo`Dual[
            Pattern[FunctionRepo`DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[FunctionRepo`DualNumbers`Private`b$, 
             Blank[]]], FunctionRepo`DualArrayQ], 
          Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       Length[FunctionRepo`DualNumbers`Private`a$, 
         FunctionRepo`DualNumbers`Private`rest$], Condition[
         HoldPattern[
          Length[
           FunctionRepo`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[FunctionRepo`Dual, "arrayOp"], Length]; False] :> 
       Undefined, HoldPattern[
         AiryAi[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         AiryAi[
         FunctionRepo`DualNumbers`Private`a$], (AiryAiPrime[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         AiryAiPrime[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         AiryAiPrime[
         FunctionRepo`DualNumbers`Private`a$], (AiryAi[#] #& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         AiryBi[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         AiryBi[
         FunctionRepo`DualNumbers`Private`a$], (AiryBiPrime[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         AiryBiPrime[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         AiryBiPrime[
         FunctionRepo`DualNumbers`Private`a$], (AiryBi[#] #& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCos[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCos[
         FunctionRepo`DualNumbers`Private`a$], (-(1 - #^2)^Rational[-1, 2]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCosh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCosh[
         FunctionRepo`DualNumbers`Private`a$], ((-1 + #)^
           Rational[-1, 2] (1 + #)^Rational[-1, 2]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCot[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCot[
         FunctionRepo`DualNumbers`Private`a$], ((-1)/(1 + #^2)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCoth[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCoth[
         FunctionRepo`DualNumbers`Private`a$], ((1 - #^2)^(-1)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCsc[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCsc[
         FunctionRepo`DualNumbers`Private`a$], ((-(1 - #^(-2))^
            Rational[-1, 2]) #^(-2)& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcCsch[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcCsch[
         FunctionRepo`DualNumbers`Private`a$], ((-(1 + #^(-2))^
            Rational[-1, 2]) #^(-2)& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcSec[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcSec[
         FunctionRepo`DualNumbers`Private`a$], ((1 - #^(-2))^
           Rational[-1, 2] #^(-2)& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcSech[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcSech[
         FunctionRepo`DualNumbers`Private`a$], (((-1)/#) (((1 - #)/(1 + #))^
            Rational[-1, 2]/(1 + #))& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcSin[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcSin[
         FunctionRepo`DualNumbers`Private`a$], ((1 - #^2)^Rational[-1, 2]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcSinh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcSinh[
         FunctionRepo`DualNumbers`Private`a$], ((1 + #^2)^Rational[-1, 2]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcTan[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcTan[
         FunctionRepo`DualNumbers`Private`a$], ((1 + #^2)^(-1)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ArcTanh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ArcTanh[
         FunctionRepo`DualNumbers`Private`a$], ((1 - #^2)^(-1)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BarnesG[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BarnesG[
         FunctionRepo`DualNumbers`Private`a$], (
          BarnesG[#] ((# - 1) PolyGamma[#] - # + (Log[2 Pi] + 1)/2)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BartlettHannWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BartlettHannWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 50] (24 - (38 Pi) Sin[(2 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {
            Rational[1, 50] (-24 - (38 Pi) Sin[(2 Pi) #]), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BartlettWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BartlettWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {2, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {-2, 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BlackmanHarrisWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BlackmanHarrisWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 100000] (((-97658) Pi) Sin[(2 Pi) #] - (56512 Pi) 
              Sin[(4 Pi) #] - (7008 Pi) Sin[(6 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BlackmanNuttallWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BlackmanNuttallWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[
              1, 10000000] (((-9783550) Pi) Sin[(2 Pi) #] - (5463980 Pi) 
              Sin[(4 Pi) #] - (638466 Pi) Sin[(6 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BlackmanWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BlackmanWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Rational[1, 50] (((-50) Pi) Sin[(2 Pi) #] - (16 Pi) 
              Sin[(4 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         BohmanWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         BohmanWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Pi^(-1) (((-2) Pi^2) Sin[(2 Pi) #] - ((4 Pi^2) Sin[(2 Pi) #]) #), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {
            Pi^(-1) (((-2) Pi^2) Sin[(2 Pi) #] + ((4 Pi^2) Sin[(2 Pi) #]) #), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         CauchyWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         CauchyWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {((-72) #) (1 + 36 #^2)^(-2), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Ceiling[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Ceiling[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Ceiling[#]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Clip[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Clip[
         FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{0, # < -1}, {1, 
             Inequality[-1, Less, #, Less, 1]}, {0, # > 1}}, 
           Indeterminate]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ConnesWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ConnesWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {((-16) #) (1 - 4 #^2), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Cos[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Cos[
         FunctionRepo`DualNumbers`Private`a$], (-Sin[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Cosh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Cosh[
         FunctionRepo`DualNumbers`Private`a$], (Sinh[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         CosineWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         CosineWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {(-Pi) Sin[Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Cot[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Cot[
         FunctionRepo`DualNumbers`Private`a$], (-Csc[#]^2& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Coth[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Coth[
         FunctionRepo`DualNumbers`Private`a$], (-Csch[#]^2& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Csc[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Csc[
         FunctionRepo`DualNumbers`Private`a$], ((-Cot[#]) Csc[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Csch[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Csch[
         FunctionRepo`DualNumbers`Private`a$], ((-Coth[#]) Csch[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         CubeRoot[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         CubeRoot[
         FunctionRepo`DualNumbers`Private`a$], (Rational[1, 3] 
          Surd[#, 3]^(-2)& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         DawsonF[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         DawsonF[
         FunctionRepo`DualNumbers`Private`a$], (1 - (2 #) DawsonF[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         DirichletWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         DirichletWindow[
         FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{Indeterminate, 
             Or[# == Rational[1, 2], # == Rational[-1, 2]]}}, 0]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         DiscreteDelta[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         DiscreteDelta[
         FunctionRepo`DualNumbers`Private`a$], (0& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         EllipticE[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         EllipticE[
         FunctionRepo`DualNumbers`Private`a$], (
          Rational[1, 2] ((EllipticE[#] - EllipticK[#])/#)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         EllipticK[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         EllipticK[
         FunctionRepo`DualNumbers`Private`a$], ((
           Rational[1, 2] (EllipticE[#] - 
            EllipticK[#] (1 - #))) ((1 - #)^(-1)/#)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Erf[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Erf[
         FunctionRepo`DualNumbers`Private`a$], ((2 E^(-#^2)) 
          Pi^Rational[-1, 2]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Erfc[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Erfc[
         FunctionRepo`DualNumbers`Private`a$], (((-2) E^(-#^2)) 
          Pi^Rational[-1, 2]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Erfi[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Erfi[
         FunctionRepo`DualNumbers`Private`a$], ((2 E^(#^2)) 
          Pi^Rational[-1, 2]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ExactBlackmanWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ExactBlackmanWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 9304] (((-9240) Pi) Sin[(2 Pi) #] - (2860 Pi) 
              Sin[(4 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Exp[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Exp[
         FunctionRepo`DualNumbers`Private`a$], (E^#& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ExpIntegralEi[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ExpIntegralEi[
         FunctionRepo`DualNumbers`Private`a$], (E^#/#& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Factorial[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Factorial[
         FunctionRepo`DualNumbers`Private`a$], (Gamma[1 + #] 
          PolyGamma[0, 1 + #]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Factorial2[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Factorial2[
         FunctionRepo`DualNumbers`Private`a$], ((Rational[1, 2] 
           Factorial2[#]) (Log[2] + 
           PolyGamma[
            0, 1 + Rational[1, 2] #] + ((Rational[1, 2] Pi) Log[2/Pi]) 
            Sin[Pi #])& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Fibonacci[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Fibonacci[
         FunctionRepo`DualNumbers`Private`a$], ((5^Rational[-1, 2] 
           GoldenRatio^(-#)) (GoldenRatio^(2 #) Log[GoldenRatio] + 
           Cos[Pi #] Log[GoldenRatio] + Pi Sin[Pi #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         FlatTopWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         FlatTopWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[
              1, 1000000000] (((-833263160) Pi) Sin[(2 Pi) #] - (1109052632 
               Pi) Sin[(4 Pi) #] - (501473682 Pi) 
              Sin[(6 Pi) #] - (55578944 Pi) Sin[(8 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Floor[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Floor[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # > Floor[#]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         FractionalPart[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         FractionalPart[FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{1, 
             And[
              Or[Re[#] == 0, 
               NotElement[
                Re[#], Integers]], 
              Or[Im[#] == 0, 
               NotElement[
                Im[#], Integers]]]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Gamma[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Gamma[
         FunctionRepo`DualNumbers`Private`a$], (Gamma[#] PolyGamma[0, #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         GaussianWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         GaussianWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{
            0, # < Rational[-1, 2]}, {(Rational[-100, 9] 
              E^(Rational[-50, 9] #^2)) #, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Gudermannian[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Gudermannian[
         FunctionRepo`DualNumbers`Private`a$], (Sech[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         HammingWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         HammingWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{
            0, # < Rational[-1, 2]}, {(Rational[-21, 23] Pi) Sin[(2 Pi) #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         HannPoissonWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         HannPoissonWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            E^(2 #) (1 + Cos[(2 Pi) #]) - (E^(2 #) Pi) Sin[(2 Pi) #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              0]}, {(-E^((-2) #)) (1 + Cos[(2 Pi) #]) - (E^((-2) #) Pi) 
             Sin[(2 Pi) #], 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # >= Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         HannWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         HannWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {(-Pi) Sin[(2 Pi) #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Haversine[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Haversine[
         FunctionRepo`DualNumbers`Private`a$], (Rational[1, 2] Sin[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         HeavisideLambda[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         HeavisideLambda[
         FunctionRepo`DualNumbers`Private`a$], (-
           HeavisidePi[Rational[1, 2] - #] + 
          HeavisidePi[Rational[1, 2] + #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         HeavisidePi[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         HeavisidePi[
         FunctionRepo`DualNumbers`Private`a$], ((-2) DiracDelta[-1 + 2 #] + 
          2 DiracDelta[1 + 2 #]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         IntegerPart[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         IntegerPart[FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{0, 
             And[
              Or[Re[#] == 0, 
               NotElement[
                Re[#], Integers]], 
              Or[Im[#] == 0, 
               NotElement[
                Im[#], Integers]]]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         InverseGudermannian[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         InverseGudermannian[
         FunctionRepo`DualNumbers`Private`a$], (Sec[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         InverseHaversine[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         InverseHaversine[
         FunctionRepo`DualNumbers`Private`a$], (((1 - #) #)^
          Rational[-1, 2]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KaiserBesselWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KaiserBesselWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 1000] (((-996) Pi) Sin[(2 Pi) #] - (396 Pi) 
              Sin[(4 Pi) #] - (6 Pi) Sin[(6 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KaiserWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KaiserWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{
            0, # < Rational[-1, 2]}, {((((-12)/BesselI[0, 3]) 
               BesselI[1, 3 (1 - 4 #^2)^Rational[1, 2]]) #) (1 - 4 #^2)^
              Rational[-1, 2], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KelvinBei[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KelvinBei[
         FunctionRepo`DualNumbers`Private`a$], ((Rational[1, 2] 
           2^Rational[-1, 2]) (2 KelvinBei[1, #] - 2 KelvinBer[1, #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KelvinBer[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KelvinBer[
         FunctionRepo`DualNumbers`Private`a$], ((Rational[1, 2] 
           2^Rational[-1, 2]) (2 KelvinBei[1, #] + 2 KelvinBer[1, #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KelvinKei[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KelvinKei[
         FunctionRepo`DualNumbers`Private`a$], ((Rational[1, 2] 
           2^Rational[-1, 2]) (2 KelvinKei[1, #] - 2 KelvinKer[1, #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KelvinKer[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KelvinKer[
         FunctionRepo`DualNumbers`Private`a$], ((Rational[1, 2] 
           2^Rational[-1, 2]) (2 KelvinKei[1, #] + 2 KelvinKer[1, #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         KroneckerDelta[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         KroneckerDelta[
         FunctionRepo`DualNumbers`Private`a$], (0& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LanczosWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LanczosWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{
            0, # < Rational[-1, 2]}, {(2 
              Pi) (((Rational[-1, 4] Pi^(-2)) Sin[(2 Pi) #]) #^(-2) + (
                Rational[1, 2]/Pi) (Cos[(2 Pi) #]/#)), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Log[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Log[
         FunctionRepo`DualNumbers`Private`a$], (#^(-1)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Log10[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Log10[
         FunctionRepo`DualNumbers`Private`a$], (Log[10]^(-1)/#& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Log2[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Log2[
         FunctionRepo`DualNumbers`Private`a$], (Log[2]^(-1)/#& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LogBarnesG[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LogBarnesG[
         FunctionRepo`DualNumbers`Private`a$], ((# - 1) 
           PolyGamma[#] - # + (Log[2 Pi] + 1)/2& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LogGamma[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LogGamma[
         FunctionRepo`DualNumbers`Private`a$], (PolyGamma[0, #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LogIntegral[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LogIntegral[
         FunctionRepo`DualNumbers`Private`a$], (Log[#]^(-1)& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LogisticSigmoid[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LogisticSigmoid[
         FunctionRepo`DualNumbers`Private`a$], ((1 - LogisticSigmoid[#]) 
          LogisticSigmoid[#]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         LucasL[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         LucasL[
         FunctionRepo`DualNumbers`Private`a$], (
          GoldenRatio^# Log[GoldenRatio] - (GoldenRatio^(-#) Cos[Pi #]) 
          Log[GoldenRatio] - (GoldenRatio^(-#) Pi) Sin[Pi #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Max[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Max[
         FunctionRepo`DualNumbers`Private`a$], (1& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Min[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Min[
         FunctionRepo`DualNumbers`Private`a$], (1& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Minus[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Minus[
         FunctionRepo`DualNumbers`Private`a$], (-1& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Multinomial[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Multinomial[
         FunctionRepo`DualNumbers`Private`a$], (0& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         NuttallWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         NuttallWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Rational[1, 250000] (((-243698) Pi) Sin[(2 Pi) #] - (144232 Pi) 
              Sin[(4 Pi) #] - (18906 Pi) Sin[(6 Pi) #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ParzenWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ParzenWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {12 (1 + 2 #)^2, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[-1, 4]]}, {
            3, # == Rational[-1, 4]}, {(-48) # - 144 #^2, 
             Inequality[
              Rational[-1, 4], Less, #, Less, 0]}, {
            0, # == 0}, {(-48) # + 144 #^2, 
             Inequality[0, Less, #, Less, 
              Rational[1, 4]]}, {-3, # == 
             Rational[1, 4]}, {(-12) (-1 + 2 #)^2, 
             Inequality[
              Rational[1, 4], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         PoissonWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         PoissonWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {6 E^(6 #), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {(-6) E^((-6) #), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         PolyGamma[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         PolyGamma[
         FunctionRepo`DualNumbers`Private`a$], (PolyGamma[1, #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         QPochhammer[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         QPochhammer[
         FunctionRepo`DualNumbers`Private`a$], ((((-1)/Log[#]) 
            QPochhammer[#, #]) ((Log[1 - #] + QPolyGamma[0, 1, #])/#) + 
          Derivative[0, 1][QPochhammer][#, #]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Ramp[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Ramp[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < 0}, {1, # > 0}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         RealAbs[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         RealAbs[
         FunctionRepo`DualNumbers`Private`a$], (RealAbs[#]^(-1) #& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         RealSign[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         RealSign[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # != 0}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         RiemannSiegelTheta[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         RiemannSiegelTheta[
         FunctionRepo`DualNumbers`Private`a$], (-(Log[Pi]/2) + (1/4) (
            PolyGamma[0, 1/4 - (I #)/2] + PolyGamma[0, 1/4 + (I #)/2])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         RiemannSiegelZ[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         RiemannSiegelZ[
         FunctionRepo`DualNumbers`Private`a$], ((((-I)/4) 
           E^(I RiemannSiegelTheta[#])) ((2 Log[Pi] - PolyGamma[
             0, (1 - (2 I) #)/4] - PolyGamma[0, (1 + (2 I) #)/4]) 
            Zeta[1/2 + I #] - 4 Derivative[1][Zeta][1/2 + I #])& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Round[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Round[FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{0, 
             And[
              NotElement[Rational[-1, 2] + Re[#], Integers], 
              NotElement[Rational[-1, 2] + Im[#], Integers]]}}, 
           Indeterminate]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ScorerGiPrime[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ScorerGiPrime[
         FunctionRepo`DualNumbers`Private`a$], ((-1)/Pi + # ScorerGi[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         ScorerHiPrime[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         ScorerHiPrime[
         FunctionRepo`DualNumbers`Private`a$], (1/Pi + # ScorerHi[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sec[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sec[
         FunctionRepo`DualNumbers`Private`a$], (Sec[#] Tan[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sech[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sech[
         FunctionRepo`DualNumbers`Private`a$], ((-Sech[#]) Tanh[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sin[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sin[
         FunctionRepo`DualNumbers`Private`a$], (Cos[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sinc[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sinc[
         FunctionRepo`DualNumbers`Private`a$], ((-Sin[#]) #^(-2) + 
          Cos[#]/#& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sinh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sinh[
         FunctionRepo`DualNumbers`Private`a$], (Cosh[#]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Sqrt[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Sqrt[
         FunctionRepo`DualNumbers`Private`a$], (
          Rational[1, 2] #^Rational[-1, 2]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Tan[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Tan[
         FunctionRepo`DualNumbers`Private`a$], (Sec[#]^2& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Tanh[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Tanh[
         FunctionRepo`DualNumbers`Private`a$], (Sech[#]^2& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         TukeyWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         TukeyWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{(Rational[3, 2] Pi) Cos[(3 Pi) #], 
             Inequality[
              Rational[1, 6], Less, #, Less, 
              Rational[1, 2]]}, {(Rational[-3, 2] Pi) Cos[(3 Pi) #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[-1, 6]]}}, 0]& )[FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         UnitBox[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         UnitBox[
         FunctionRepo`DualNumbers`Private`a$], (Piecewise[{{Indeterminate, 
             Or[# == Rational[1, 2], # == Rational[-1, 2]]}}, 0]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         UnitStep[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         UnitStep[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{Indeterminate, # == 0}}, 0]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         UnitTriangle[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         UnitTriangle[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{Indeterminate, # (-1 + #^2) == 0}, {1, 
             Inequality[-1, Less, #, Less, 0]}, {-1, 
             Inequality[0, Less, #, Less, 1]}}, 0]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         WelchWindow[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         WelchWindow[
         FunctionRepo`DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {(-8) #, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1$, 
            Blank[]]]^FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2$, 
            Blank[]]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a1$^
         FunctionRepo`DualNumbers`Private`a2$, (#^(-1 + #2) #2& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b1$ + (Log[#] #^#2& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b2$], HoldPattern[FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]^Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a$^
         FunctionRepo`DualNumbers`Private`c$, (#^(-1 + #2) #2& )[
          FunctionRepo`DualNumbers`Private`a$, 
           FunctionRepo`DualNumbers`Private`c$] 
         FunctionRepo`DualNumbers`Private`b$], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]]^FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`c$^
         FunctionRepo`DualNumbers`Private`a$, (Log[#] #^#2& )[
          FunctionRepo`DualNumbers`Private`c$, 
           FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Mod[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1$, 
            Blank[]]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Mod[
         FunctionRepo`DualNumbers`Private`a1$, 
          FunctionRepo`DualNumbers`Private`a2$], (1 - 
           Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate]& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b1$ + (-Floor[#/#2] + 
           Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate] (#/#2)& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b2$], HoldPattern[
         Mod[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]]]] :> FunctionRepo`Dual[
         Mod[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`c$], (1 - 
          Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate]& )[
          FunctionRepo`DualNumbers`Private`a$, 
           FunctionRepo`DualNumbers`Private`c$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Mod[
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Mod[
         FunctionRepo`DualNumbers`Private`c$, 
          FunctionRepo`DualNumbers`Private`a$], (-Floor[#/#2] + 
          Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate] (#/#2)& )[
          FunctionRepo`DualNumbers`Private`c$, 
           FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Binomial[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1$, 
            Blank[]]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Binomial[
         FunctionRepo`DualNumbers`Private`a1$, 
          FunctionRepo`DualNumbers`Private`a2$], (
           Binomial[#, #2] (PolyGamma[0, 1 + #] - PolyGamma[
            0, 1 + # - #2])& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b1$ + (
           Binomial[#, #2] (PolyGamma[0, 1 + # - #2] - PolyGamma[
            0, 1 + #2])& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b2$], HoldPattern[
         Binomial[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]]]] :> FunctionRepo`Dual[
         Binomial[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`c$], (
          Binomial[#, #2] (PolyGamma[0, 1 + #] - PolyGamma[0, 1 + # - #2])& )[
          FunctionRepo`DualNumbers`Private`a$, 
           FunctionRepo`DualNumbers`Private`c$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Binomial[
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Binomial[
         FunctionRepo`DualNumbers`Private`c$, 
          FunctionRepo`DualNumbers`Private`a$], (
          Binomial[#, #2] (PolyGamma[0, 1 + # - #2] - PolyGamma[
           0, 1 + #2])& )[
          FunctionRepo`DualNumbers`Private`c$, 
           FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Gamma[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b1$, 
            Blank[]]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b2$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Gamma[
         FunctionRepo`DualNumbers`Private`a1$, 
          FunctionRepo`DualNumbers`Private`a2$], (Gamma[#, #2] Log[#2] + 
           MeijerG[{{}, {1, 1}}, {{0, 0, #}, {}}, #2]& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b1$ + ((-E^(-#2)) #2^(-1 + #)& )[
           FunctionRepo`DualNumbers`Private`a1$, 
            FunctionRepo`DualNumbers`Private`a2$] 
          FunctionRepo`DualNumbers`Private`b2$], HoldPattern[
         Gamma[
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]]]] :> FunctionRepo`Dual[
         Gamma[
         FunctionRepo`DualNumbers`Private`a$, 
          FunctionRepo`DualNumbers`Private`c$], (Gamma[#, #2] Log[#2] + 
          MeijerG[{{}, {1, 1}}, {{0, 0, #}, {}}, #2]& )[
          FunctionRepo`DualNumbers`Private`a$, 
           FunctionRepo`DualNumbers`Private`c$] 
         FunctionRepo`DualNumbers`Private`b$], HoldPattern[
         Gamma[
          Pattern[FunctionRepo`DualNumbers`Private`c$, 
           Blank[]], 
          FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b$, 
            Blank[]]]]] :> FunctionRepo`Dual[
         Gamma[
         FunctionRepo`DualNumbers`Private`c$, 
          FunctionRepo`DualNumbers`Private`a$], ((-E^(-#2)) #2^(-1 + #)& )[
          FunctionRepo`DualNumbers`Private`c$, 
           FunctionRepo`DualNumbers`Private`a$] 
         FunctionRepo`DualNumbers`Private`b$], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] == 
         Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] == Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[Equal, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] != 
         Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] != Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[Unequal, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] > Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] > Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[Greater, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] >= 
         Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] >= Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[GreaterEqual, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] < Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] < Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[Less, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], 
       HoldPattern[Pattern[FunctionRepo`DualNumbers`Private`first$, 
           BlankNullSequence[]] <= 
         Pattern[FunctionRepo`DualNumbers`Private`d$, 
           FunctionRepo`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] <= Pattern[FunctionRepo`DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{FunctionRepo`DualNumbers`Private`test = Apply[LessEqual, 
            
            FunctionRepo`DualNumbers`Private`std[{
             FunctionRepo`DualNumbers`Private`first$, 
              FunctionRepo`DualNumbers`Private`d$, 
              FunctionRepo`DualNumbers`Private`rest$}]]}, 
         Condition[FunctionRepo`DualNumbers`Private`test, 
          BooleanQ[FunctionRepo`DualNumbers`Private`test]]], Condition[
         Pattern[FunctionRepo`DualNumbers`Private`f, 
          Blank[Symbol]][
          Pattern[FunctionRepo`DualNumbers`Private`first, 
           BlankNullSequence[]], 
          Pattern[FunctionRepo`DualNumbers`Private`d, 
           Blank[FunctionRepo`Dual]], 
          Pattern[FunctionRepo`DualNumbers`Private`rest, 
           BlankNullSequence[]]], 
         MemberQ[
          Attributes[FunctionRepo`DualNumbers`Private`f], NumericFunction]] :> 
       With[{FunctionRepo`DualNumbers`Private`args = {
           FunctionRepo`DualNumbers`Private`first, 
            FunctionRepo`DualNumbers`Private`d, 
            FunctionRepo`DualNumbers`Private`rest}}, 
         With[{FunctionRepo`DualNumbers`Private`dualPos = Flatten[
             Position[FunctionRepo`DualNumbers`Private`args, 
              PatternTest[
               Blank[FunctionRepo`Dual], FunctionRepo`DualQ], {1}, Heads -> 
              False]], FunctionRepo`DualNumbers`Private`inputs = 
           FunctionRepo`DualNumbers`Private`std[
            FunctionRepo`DualNumbers`Private`args]}, 
          With[{FunctionRepo`DualNumbers`Private`derrivs = Apply[Derivative[
               SlotSequence[1]][FunctionRepo`DualNumbers`Private`f]& , 
              Part[
               IdentityMatrix[
                Length[FunctionRepo`DualNumbers`Private`args]], 
               FunctionRepo`DualNumbers`Private`dualPos], {1}]}, 
           Condition[
            FunctionRepo`Dual[
             Apply[
             FunctionRepo`DualNumbers`Private`f, 
              FunctionRepo`DualNumbers`Private`inputs], 
             Dot[
              Map[
              Apply[#, FunctionRepo`DualNumbers`Private`inputs]& , 
               FunctionRepo`DualNumbers`Private`derrivs], 
              Part[
              FunctionRepo`DualNumbers`Private`args, 
               FunctionRepo`DualNumbers`Private`dualPos, 2]]], 
            MatchQ[FunctionRepo`DualNumbers`Private`derrivs, {
              Repeated[
              FunctionRepo`DualNumbers`Private`derivativePatt]}]]]]]}], 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`Dual, {
      FunctionRepo`Dual[] -> FunctionRepo`Dual[0, 1], FunctionRepo`Dual[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[SparseArray]], ArrayQ]] :> 
       FunctionRepo`Dual[FunctionRepo`DualNumbers`Private`a, 
         SparseArray[{}, 
          Dimensions[FunctionRepo`DualNumbers`Private`a], 1]], 
       FunctionRepo`Dual[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], ArrayQ]] :> 
       FunctionRepo`Dual[FunctionRepo`DualNumbers`Private`a, 
         ConstantArray[1, 
          Dimensions[FunctionRepo`DualNumbers`Private`a]]], FunctionRepo`Dual[
         Pattern[FunctionRepo`DualNumbers`Private`a, 
          Blank[]]] :> 
       FunctionRepo`Dual[FunctionRepo`DualNumbers`Private`a, 1], 
       FunctionRepo`Dual[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]], 
         Pattern[FunctionRepo`DualNumbers`Private`c, 
          Blank[]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a, 
         FunctionRepo`DualNumbers`Private`b + 
         FunctionRepo`DualNumbers`Private`c], FunctionRepo`Dual[
         Pattern[FunctionRepo`DualNumbers`Private`a, 
          Blank[]], 
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]], 
          Pattern[FunctionRepo`DualNumbers`Private`c, 
           Blank[]]]] :> 
       FunctionRepo`Dual[
        FunctionRepo`DualNumbers`Private`a, 
         FunctionRepo`DualNumbers`Private`b], FunctionRepo`Dual[
         Pattern[FunctionRepo`DualNumbers`Private`a, 
          Blank[]], 0] :> FunctionRepo`DualNumbers`Private`a}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "FunctionRepo`Dual"],
    False]]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"bcfca081-06e0-469b-a92c-ced1b36a2afe"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], ":=", "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a dual number.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualQ, {FunctionRepo`DualQ[
         FunctionRepo`Dual[
          Blank[], 
          Blank[]]] :> True, FunctionRepo`DualQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`DualQ"], 
   False]]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"0f640286-e796-4681-adf7-2a23dc81e461"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ScalarQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) = \
!DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\)]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ScalarQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], ":=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"ScalarQ", "[", "_", "]"}], ":=", "True"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`ScalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ScalarQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) = \
!DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\)]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ScalarQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) = !DualQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`ScalarQ, {FunctionRepo`ScalarQ[
         FunctionRepo`Dual[
          Blank[], 
          Blank[]]] :> False, FunctionRepo`ScalarQ[
         Blank[]] :> True}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`ScalarQ"], 
   False]]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"678928e4-2bd2-4850-ba49-be0afecda57c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualEpsilon = Dual[0, 1].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "OwnValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{"DualEpsilon", "=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualEpsilon\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualEpsilon = Dual[0, 1].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "DualEpsilon = Dual[0, 1].", 
    "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, FunctionRepo`DualEpsilon, {
      FunctionRepo`DualEpsilon -> FunctionRepo`Dual[0, 1]}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "FunctionRepo`DualEpsilon"], 
   False]]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"d8b9c100-b30a-4e62-8b17-4995d35d93de"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactiveEpsilon is an inactive form of Dual[0, 1] \
that can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "OwnValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{"InactiveEpsilon", "=", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`InactiveEpsilon\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactiveEpsilon is an inactive form of Dual[0, 1] \
that can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "InactiveEpsilon is an inactive form of Dual[0, 1] that can be used for \
algebraic manipulation.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, FunctionRepo`InactiveEpsilon, {
      FunctionRepo`InactiveEpsilon -> Inactive[FunctionRepo`Dual][0, 1]}], 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`InactiveEpsilon"], False]]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"7c2ff432-8176-4ae7-8b3e-58d05f3615e9"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a_", ",", "_"}],
                     "]"}], "]"}], ":=", 
                    "FunctionRepo`DualNumbers`Private`a"}]},
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`x_", "?", "NumericQ"}], 
                    "]"}], ":=", "FunctionRepo`DualNumbers`Private`x"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`Standard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Standard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the standard part of a dual number \!\(\*StyleBox[\"d\", \
\"TI\"]\) (i.e., the first argument).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`Standard, {FunctionRepo`Standard[
         FunctionRepo`Dual[
          Pattern[FunctionRepo`DualNumbers`Private`a, 
           Blank[]], 
          Blank[]]] :> FunctionRepo`DualNumbers`Private`a, 
       FunctionRepo`Standard[
         PatternTest[
          Pattern[FunctionRepo`DualNumbers`Private`x, 
           Blank[]], NumericQ]] :> FunctionRepo`DualNumbers`Private`x}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Listable}, 
    "FullName" -> "FunctionRepo`Standard"], False]]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"163bc84f-9815-47f9-baea-574e8f28fad0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
non-standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\) (i.e., the second argument).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "FunctionRepo`DualNumbers`Private`b_"}],
                     "]"}], "]"}], ":=", 
                    "FunctionRepo`DualNumbers`Private`b"}]},
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"_", "?", "NumericQ"}], "]"}], ":=", "0"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`NonStandard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
non-standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\) (i.e., the second argument).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NonStandard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the non-standard part of a dual number \
\!\(\*StyleBox[\"d\", \"TI\"]\) (i.e., the second argument).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`NonStandard, {FunctionRepo`NonStandard[
         FunctionRepo`Dual[
          Blank[], 
          Pattern[FunctionRepo`DualNumbers`Private`b, 
           Blank[]]]] :> FunctionRepo`DualNumbers`Private`b, 
       FunctionRepo`NonStandard[
         PatternTest[
          Blank[], NumericQ]] :> 0}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Listable}, "FullName" -> "FunctionRepo`NonStandard"], 
   False]]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"483e0b3e-3e68-40d5-990d-39e30785b6dd"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "StandardAll", "[", 
                    "FunctionRepo`DualNumbers`Private`expr_", "]"}], ":=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`expr", "//.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a_", ",", "_"}],
                     "]"}], "\[RuleDelayed]", 
                    "FunctionRepo`DualNumbers`Private`a"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`StandardAll\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StandardAll\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) replaces all dual numbers in \!\(\*StyleBox[\"expr\", \
\"TI\"]\) with their standard parts.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`StandardAll, {FunctionRepo`StandardAll[
         Pattern[FunctionRepo`DualNumbers`Private`expr, 
          Blank[]]] :> 
       ReplaceRepeated[
        FunctionRepo`DualNumbers`Private`expr, FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Blank[]] :> FunctionRepo`DualNumbers`Private`a]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`StandardAll"], False]]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"229e296a-25ce-43f3-ab90-bde1f4fe4688"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each dual number \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) * \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualExpand", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`expr_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eps_", ":", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`expr", "//.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`a_", ",", 
                    "FunctionRepo`DualNumbers`Private`b_"}], "]"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`a", "+", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`b", " ", 
                    "FunctionRepo`DualNumbers`Private`eps"}]}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualExpand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each dual number \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) * \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualExpand\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) replaces each dual number \
Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)] with \
\!\(\*StyleBox[\"a\", \"TI\"]\) + \!\(\*StyleBox[\"b\", \"TI\"]\) * \
\!\(\*StyleBox[\"eps\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualExpand, {FunctionRepo`DualExpand[
         Pattern[FunctionRepo`DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[FunctionRepo`DualNumbers`Private`eps, 
           Blank[]], 
          Inactive[FunctionRepo`Dual][0, 1]]] :> 
       ReplaceRepeated[
        FunctionRepo`DualNumbers`Private`expr, FunctionRepo`Dual[
           Pattern[FunctionRepo`DualNumbers`Private`a, 
            Blank[]], 
           Pattern[FunctionRepo`DualNumbers`Private`b, 
            Blank[]]] :> 
         FunctionRepo`DualNumbers`Private`a + 
          FunctionRepo`DualNumbers`Private`b 
           FunctionRepo`DualNumbers`Private`eps]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`DualExpand"], False]]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"3020be7f-6994-4ef8-9eaa-2c81419e1eb1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \\!\\(\\*StyleBox[\\\"eps\\\", \
\\\"TI\\\"]\\) with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`expr_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eps_", ":", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`expr", "//.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`eps", "\[RuleDelayed]", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualFactor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \\!\\(\\*StyleBox[\\\"eps\\\", \
\\\"TI\\\"]\\) with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualFactor\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) replaces \
\!\(\*StyleBox[\"eps\", \"TI\"]\) with Dual[0, 1] in \!\(\*StyleBox[\"expr\", \
\"TI\"]\).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualFactor, {FunctionRepo`DualFactor[
         Pattern[FunctionRepo`DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[FunctionRepo`DualNumbers`Private`eps, 
           Blank[]], 
          Inactive[FunctionRepo`Dual][0, 1]]] :> 
       ReplaceRepeated[
        FunctionRepo`DualNumbers`Private`expr, 
         FunctionRepo`DualNumbers`Private`eps :> FunctionRepo`Dual[0, 1]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`DualFactor"], False]]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"40e528dd-a688-46e8-8d4d-9da43067342a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) expands \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) around \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) = 0, \
keeping only the 0th and 1st order terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualSimplify", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`expr_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eps_", ":", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`expr", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`eps", ",", "0", ",", 
                    "1"}], "}"}]}], "]"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualSimplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) expands \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) around \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) = 0, \
keeping only the 0th and 1st order terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualSimplify\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) expands \
\!\(\*StyleBox[\"expr\", \"TI\"]\) around \!\(\*StyleBox[\"eps\", \"TI\"]\) = \
0, keeping only the 0th and 1st order terms.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualSimplify, {FunctionRepo`DualSimplify[
         Pattern[FunctionRepo`DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[FunctionRepo`DualNumbers`Private`eps, 
           Blank[]], 
          Inactive[FunctionRepo`Dual][0, 1]]] :> Normal[
         Series[
         FunctionRepo`DualNumbers`Private`expr, {
          FunctionRepo`DualNumbers`Private`eps, 0, 1}]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`DualSimplify"], False]]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"54d2e979-51c4-4aec-8b0f-14a962edf565"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eq_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eq", ",", 
                    RowBox[{
                    "{", "FunctionRepo`DualNumbers`Private`spec", "}"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eqs_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "FunctionRepo`DualNumbers`Private`rest___"}], "]"}],
                     ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`equationNormalForm", 
                    "[", "FunctionRepo`DualNumbers`Private`eqs", "]"}]}], ",",
                     "FunctionRepo`DualNumbers`Private`stdEqs", ",", 
                    "FunctionRepo`DualNumbers`Private`stdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", 
                    "FunctionRepo`DualNumbers`Private`equations", "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Subtract", ",", 
                    "FunctionRepo`DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", 
                    "FunctionRepo`DualNumbers`Private`stdEqs", "]"}], "]"}]}],
                     ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdSol", "=", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`stdEqs", ",", 
                    "FunctionRepo`DualNumbers`Private`spec", ",", 
                    "FunctionRepo`DualNumbers`Private`rest"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`equations", ",", 
                    "FunctionRepo`DualNumbers`Private`stdSol"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualFindRoot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindRoot works like FindRoot, but allows for Dual numbers in the \
equations.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualFindRoot, {FunctionRepo`DualFindRoot[
         Pattern[FunctionRepo`DualNumbers`Private`eq, 
          Blank[]], 
         Pattern[FunctionRepo`DualNumbers`Private`spec, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[FunctionRepo`DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       FunctionRepo`DualFindRoot[
        FunctionRepo`DualNumbers`Private`eq, {
         FunctionRepo`DualNumbers`Private`spec}, 
         FunctionRepo`DualNumbers`Private`rest], FunctionRepo`DualFindRoot[
         Pattern[FunctionRepo`DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[FunctionRepo`DualNumbers`Private`spec, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[FunctionRepo`DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Module[{FunctionRepo`DualNumbers`Private`equations = 
          FunctionRepo`DualNumbers`Private`equationNormalForm[
           FunctionRepo`DualNumbers`Private`eqs], 
          FunctionRepo`DualNumbers`Private`stdEqs, 
          FunctionRepo`DualNumbers`Private`stdSol}, If[
           FailureQ[FunctionRepo`DualNumbers`Private`equations], 
           Return[$Failed]]; 
         FunctionRepo`DualNumbers`Private`stdEqs = 
          Apply[Subtract, FunctionRepo`DualNumbers`Private`equations, {1}]; 
         FunctionRepo`DualNumbers`Private`stdEqs = FunctionRepo`StandardAll[
            FunctionRepo`DualFactor[FunctionRepo`DualNumbers`Private`stdEqs]]; 
         FunctionRepo`DualNumbers`Private`stdSol = 
          FindRoot[
           FunctionRepo`DualNumbers`Private`stdEqs, 
            FunctionRepo`DualNumbers`Private`spec, 
            FunctionRepo`DualNumbers`Private`rest]; If[
           Not[
            MatchQ[FunctionRepo`DualNumbers`Private`stdSol, {
              Repeated[Blank[] -> PatternTest[
                 Blank[], NumericQ]]}]], 
           Return[$Failed]]; Quiet[
           FunctionRepo`DualNumbers`Private`firstSol[
            FunctionRepo`FindDualSolution[
            FunctionRepo`DualNumbers`Private`equations, 
             FunctionRepo`DualNumbers`Private`stdSol]], {
            MessageName[FunctionRepo`FindDualSolution, "nonsol"]}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`DualFindRoot"], False]]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"3ad34021-bc03-4d3f-b671-f85dcc4aa3aa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like DualFindMinimum, but \
allows for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eq_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eq", ",", 
                    RowBox[{
                    "{", "FunctionRepo`DualNumbers`Private`spec", "}"}], ",", 
                    "FunctionRepo`DualNumbers`Private`rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`fun", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "FunctionRepo`DualNumbers`Private`rest___"}], "]"}],
                     ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`stdfun", ",", 
                    "FunctionRepo`DualNumbers`Private`stdSol", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`vars", "=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`spec", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "FunctionRepo`DualNumbers`Private`dualSol"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdfun", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "FunctionRepo`DualNumbers`Private`fun",
                     "]"}], "]"}]}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdSol", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`stdfun", ",", 
                    "FunctionRepo`DualNumbers`Private`spec", ",", 
                    "FunctionRepo`DualNumbers`Private`rest"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`stdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`dualSol", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{
                    "{", "FunctionRepo`DualNumbers`Private`vars", "}"}]], 
                    "FunctionRepo`DualNumbers`Private`fun"}], ",", 
                    RowBox[{
                    "Last", "[", "FunctionRepo`DualNumbers`Private`stdSol", 
                    "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`dualSol", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`fun", "/.", 
                    "\[VeryThinSpace]", 
                    "FunctionRepo`DualNumbers`Private`dualSol"}], ",", 
                    "FunctionRepo`DualNumbers`Private`dualSol"}], "}"}], ",", 
                    "FunctionRepo`DualNumbers`Private`dualSol"}], "]"}]}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`DualFindMinimum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like DualFindMinimum, but \
allows for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMinimum works like DualFindMinimum, but allows for Dual numbers \
in the objective function.\nDualFindMinimum does not support constraints on \
the independent variables.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`DualFindMinimum, {FunctionRepo`DualFindMinimum[
         Pattern[FunctionRepo`DualNumbers`Private`eq, 
          Blank[]], 
         Pattern[FunctionRepo`DualNumbers`Private`spec, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[FunctionRepo`DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       FunctionRepo`DualFindMinimum[
        FunctionRepo`DualNumbers`Private`eq, {
         FunctionRepo`DualNumbers`Private`spec}, 
         FunctionRepo`DualNumbers`Private`rest], FunctionRepo`DualFindMinimum[
         Pattern[FunctionRepo`DualNumbers`Private`fun, 
          Except[
           Blank[List]]], 
         Pattern[FunctionRepo`DualNumbers`Private`spec, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[FunctionRepo`DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Module[{FunctionRepo`DualNumbers`Private`stdfun, 
          FunctionRepo`DualNumbers`Private`stdSol, 
          FunctionRepo`DualNumbers`Private`vars = 
          Part[FunctionRepo`DualNumbers`Private`spec, All, 1], 
          FunctionRepo`DualNumbers`Private`dualSol}, 
         FunctionRepo`DualNumbers`Private`stdfun = FunctionRepo`StandardAll[
            FunctionRepo`DualFactor[FunctionRepo`DualNumbers`Private`fun]]; 
         FunctionRepo`DualNumbers`Private`stdSol = 
          FindMinimum[
           FunctionRepo`DualNumbers`Private`stdfun, 
            FunctionRepo`DualNumbers`Private`spec, 
            FunctionRepo`DualNumbers`Private`rest]; If[
           Not[
            MatchQ[FunctionRepo`DualNumbers`Private`stdSol, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed]]; FunctionRepo`DualNumbers`Private`dualSol = Quiet[
            FunctionRepo`DualNumbers`Private`firstSol[
             FunctionRepo`FindDualSolution[
              D[
              FunctionRepo`DualNumbers`Private`fun, {
               FunctionRepo`DualNumbers`Private`vars}], 
              Last[FunctionRepo`DualNumbers`Private`stdSol]]], {
             MessageName[FunctionRepo`FindDualSolution, "nonsol"]}]; If[
           MatchQ[FunctionRepo`DualNumbers`Private`dualSol, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            FunctionRepo`DualNumbers`Private`fun, 
             FunctionRepo`DualNumbers`Private`dualSol], 
            FunctionRepo`DualNumbers`Private`dualSol}, 
           FunctionRepo`DualNumbers`Private`dualSol]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`DualFindMinimum"], False]]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"8d65cc8e-682e-4833-aa28-b87d753ebdc3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`eqs_", ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`sol", ":", 
                    RowBox[{"{", "__Rule", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FunctionRepo`DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`equationNormalForm", 
                    "[", "FunctionRepo`DualNumbers`Private`eqs", "]"}]}], ",", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`vars", "=", 
                    RowBox[{
                    "Keys", "[", "FunctionRepo`DualNumbers`Private`sol", 
                    "]"}]}], ",", 
                    "FunctionRepo`DualNumbers`Private`dualRules", ",", 
                    "FunctionRepo`DualNumbers`Private`nonstdSol"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", 
                    "FunctionRepo`DualNumbers`Private`equations", "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`dualRules", "=", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    "Values", "[", "FunctionRepo`DualNumbers`Private`sol", 
                    "]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                    "FunctionRepo`DualNumbers`Private`vars"}]}]}], "]"}]}], 
                    ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "Subtract", ",", 
                    "FunctionRepo`DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    "FunctionRepo`DualNumbers`Private`dualRules"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`equations", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"EqualTo", "[", "0", "]"}], ")"}]}], ",", "_"}], 
                    "]"}], ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "FunctionRepo`DualNumbers`Private`sol", 
                    "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NonStandard", "[", "#1", "]"}], "\[Equal]", 
                    "0"}], "&"}], ")"}], "/@", 
                    "FunctionRepo`DualNumbers`Private`equations"}]}], ";", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`nonstdSol", "=", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`equations", ",", 
                    "FunctionRepo`DualNumbers`Private`vars"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"FunctionRepo`DualNumbers`Private`nonstdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Rule", "}"}], ".."}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "FunctionRepo`DualNumbers`Private`sol", ",", 
                    "FunctionRepo`DualNumbers`Private`vars"}], "]"}], ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "#1", ",", "FunctionRepo`DualNumbers`Private`vars", ",", 
                    "0"}], "]"}]}], "}"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@",
                     "FunctionRepo`DualNumbers`Private`nonstdSol"}], ",", 
                    "$Failed"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FunctionRepo`FindDualSolution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FindDualSolution\", \"[\", RowBox[{StyleBox[\"eqs\", \
\"TI\"], \",\",  StyleBox[\"sol\", \"TI\"]}], \"]\"}]\) finds a Dual-valued \
solution to \!\(\*StyleBox[\"eqs\", \"TI\"]\) where \!\(\*StyleBox[\"sol\", \
\"TI\"]\) is the standard-valued solution.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FunctionRepo`FindDualSolution, {FunctionRepo`FindDualSolution[
         Pattern[FunctionRepo`DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[FunctionRepo`DualNumbers`Private`sol, {
           BlankSequence[Rule]}]] :> 
       Module[{FunctionRepo`DualNumbers`Private`equations = 
          FunctionRepo`DualNumbers`Private`equationNormalForm[
           FunctionRepo`DualNumbers`Private`eqs], 
          FunctionRepo`DualNumbers`Private`vars = 
          Keys[FunctionRepo`DualNumbers`Private`sol], 
          FunctionRepo`DualNumbers`Private`dualRules, 
          FunctionRepo`DualNumbers`Private`nonstdSol}, If[
           FailureQ[FunctionRepo`DualNumbers`Private`equations], 
           Return[$Failed]]; 
         FunctionRepo`DualNumbers`Private`dualRules = 
          Thread[FunctionRepo`DualNumbers`Private`vars -> 
            Values[FunctionRepo`DualNumbers`Private`sol] + 
             Map[FunctionRepo`Dual[0, #]& , 
               FunctionRepo`DualNumbers`Private`vars]]; 
         FunctionRepo`DualNumbers`Private`equations = ReplaceAll[
            FunctionRepo`DualFactor[
             Apply[
             Subtract, FunctionRepo`DualNumbers`Private`equations, {1}]], 
            FunctionRepo`DualNumbers`Private`dualRules]; If[
           Not[
            MatchQ[FunctionRepo`DualNumbers`Private`equations, {
              Repeated[
               FunctionRepo`Dual[
                PatternTest[
                 Blank[], 
                 EqualTo[0]], 
                Blank[]]]}]], 
           Message[
            MessageName[FunctionRepo`FindDualSolution, "nonsol"], 
            Short[FunctionRepo`DualNumbers`Private`sol]]]; 
         FunctionRepo`DualNumbers`Private`equations = 
          Map[FunctionRepo`NonStandard[#] == 0& , 
            FunctionRepo`DualNumbers`Private`equations]; 
         FunctionRepo`DualNumbers`Private`nonstdSol = 
          Solve[FunctionRepo`DualNumbers`Private`equations, 
            FunctionRepo`DualNumbers`Private`vars]; If[
           MatchQ[FunctionRepo`DualNumbers`Private`nonstdSol, {
             Repeated[{
               BlankSequence[Rule]}]}], 
           Map[
           Thread[FunctionRepo`DualNumbers`Private`vars -> 
             MapThread[FunctionRepo`Dual, {
                Lookup[
                FunctionRepo`DualNumbers`Private`sol, 
                 FunctionRepo`DualNumbers`Private`vars], 
                Lookup[#, FunctionRepo`DualNumbers`Private`vars, 0]}]]& , 
            FunctionRepo`DualNumbers`Private`nonstdSol], $Failed]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FunctionRepo`FindDualSolution"], False]]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"d6e1b75f-04b8-4d5d-84cc-510c8c5c5ceb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example code", \
"Subsubsection",ExpressionUUID->"1e1024fb-20a0-48d2-a4f2-e5c3b98aad48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d1", "=", 
  RowBox[{"Dual", "[", 
   RowBox[{"a1", ",", "b1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d2", "=", 
  RowBox[{"Dual", "[", 
   RowBox[{"a2", ",", "b2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Epsilon]", "=", 
  RowBox[{"Dual", "[", "]"}]}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"8954dd38-42b2-486f-9995-963379fefdd7"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"a1", ",", "b1"}], "]"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"3ed69607-ea58-4892-9170-7d42ace0c9a1"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"a2", ",", "b2"}], "]"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"b8d7ee10-9d85-4162-86cb-526dbdbcf292"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"813fb874-03af-4782-b37f-9d9388109af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["y", "2"], "+", 
    RowBox[{
     RowBox[{"Dual", "[", 
      RowBox[{"2", ",", "1"}], "]"}], 
     RowBox[{"y", "^", "3"}]}]}], ",", "y"}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"00195550-6a21-4cd5-9543-81a7844e036b"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "y"}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["y", "2"]}]}], ",", 
   RowBox[{"3", " ", 
    SuperscriptBox["y", "2"]}]}], "]"}]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"50f5023c-b74f-4dd3-816e-1973d7346fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Standard", "[", "d1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NonStandard", "[", "d1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardAll", "[", 
  RowBox[{"{", 
   RowBox[{"d1", ",", "d2"}], "}"}], "]"}]}], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"8adb9a17-9f26-4f95-b91b-047c15ff9c9e"],

Cell[BoxData["a1"], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"baff10a2-5c5c-4344-8628-5b93a45a6827"],

Cell[BoxData["b1"], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"217f46ba-a037-406d-ae55-b038c1946c91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a1", ",", "a2"}], "}"}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"5bd6f75b-4f06-48e9-92a6-0776e2fb2f4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Equal", "[", 
  RowBox[{"d1", ",", "d2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EqualTo", "[", "d1", "]"}], "@", "d2"}]}], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"421d6c38-bd57-475e-887b-b00b41ff7518"],

Cell[BoxData[
 RowBox[{"a1", "\[Equal]", "a2"}]], "Output",
 CellLabel->
  "Out[137]=",ExpressionUUID->"fa1c9614-0b63-4276-b292-243e36ec9b9a"],

Cell[BoxData[
 RowBox[{"a2", "\[Equal]", "a1"}]], "Output",
 CellLabel->"Out[138]=",ExpressionUUID->"ae7e27ce-2d2c-4654-a196-9f063cdb7a77"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a_", ",", "x0_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", "x0"}], ";", 
     RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "x"}], "]"}], "\[NotEqual]", "x"}], ",", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "x"}], "]"}]}], ";", 
        RowBox[{"i", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", "x"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"03872f0f-7994-40a2-b408-292a56a795f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"a0", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"a0", "+", " ", "\[Epsilon]"}], ",", 
   RowBox[{"1", "+", "\[Epsilon]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"a0", "+", " ", "\[Epsilon]"}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"a0", ",", 
   RowBox[{"1", "+", "\[Epsilon]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"h", "=", "0.00001"}], "}"}], ",", "\[IndentingNewLine]", 
   FractionBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"a0", "+", "h"}], ",", "1"}], "]"}], "-", 
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"a0", "-", "h"}], ",", "1"}], "]"}]}], 
    RowBox[{"2", " ", "h"}]]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"41503b08-6eed-4112-b050-1fc70aeb47c1"],

Cell[BoxData["0.900367222589753`"], "Output",
 CellLabel->
  "Out[119]=",ExpressionUUID->"6bd8fa1e-ad6b-443c-abfe-3b3489d396b2"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"0.900367222589753`", ",", 
   RowBox[{"-", "0.32177126051316285`"}]}], "]"}]], "Output",
 CellLabel->
  "Out[120]=",ExpressionUUID->"25202ea4-6eb9-49d4-aa1a-c39117c18230"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"0.900367222589753`", ",", 
   RowBox[{"-", "0.3217712605132238`"}]}], "]"}]], "Output",
 CellLabel->
  "Out[121]=",ExpressionUUID->"9bc09bfd-abfa-402d-bdd2-91140d9ab6b7"],

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"0.900367222589753`", ",", "6.099717821969474`*^-14"}], 
  "]"}]], "Output",
 CellLabel->
  "Out[122]=",ExpressionUUID->"16f80a56-753e-43e5-aafe-0ffc2afeea63"],

Cell[BoxData[
 RowBox[{"-", "0.3217712604863809`"}]], "Output",
 CellLabel->"Out[123]=",ExpressionUUID->"01bdeb25-8b32-43ea-a1a3-c72820faad8c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "FunctionRepo`"}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"5376b4c2-6de9-4156-898b-e4ee9350f01d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DualExpand", "[", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Dual", "[", 
      RowBox[{"x", ",", "1"}], "]"}], "]"}], "]"}], "//", "DualFactor"}], "//",
   "RepeatedTiming"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"6cd6b85d-7c27-4ac8-a699-b90967d0603e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"Dual", "[", 
     RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"Dual", "[", 
    RowBox[{"a", ",", "1"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"61b24ec0-10a7-424d-9850-6b2eb0bd094d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Dual", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     SuperscriptBox["\[ExponentialE]", "x"]}], "]"}], ",", 
   RowBox[{"Dual", "[", 
    RowBox[{"a", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"3938fdb3-47d0-4d6e-8a49-e2f4c5195111"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DualExpand", "@", 
   RowBox[{"Sinh", "[", 
    RowBox[{"Dual", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "\[Equal]", 
  RowBox[{"DualExpand", "@", 
   RowBox[{"Dual", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}]}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"c96956f8-1e7e-4bb6-a758-4232fb9e8ba7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[FormalEpsilon]", " ", "y", " ", 
    RowBox[{"Cosh", "[", "x", "]"}]}], "+", 
   RowBox[{"Sinh", "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"2", "+", "\[FormalEpsilon]"}]}]], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"5c4e71b9-82dd-44a1-bb70-c6ba817d5e6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveAlways", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DualExpand", "@", 
     RowBox[{"Sinh", "[", 
      RowBox[{"Dual", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "\[Equal]", 
    RowBox[{"DualExpand", "@", 
     RowBox[{"Dual", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}]}], ",", "\[FormalEpsilon]"}], 
  "]"}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"11e174c0-5e70-4e84-85aa-8c9e15f5ca6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sinh", "[", "x", "]"}], "\[Rule]", "2"}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"Sech", "[", "x", "]"}]}]}], "}"}], "}"}]], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"02e289c7-28bd-4889-ac27-69c38be7a97f"]
}, Open  ]],

Cell[BoxData["Quit"], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"ef57e62a-c506-4353-aece-109758d6ff42"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1814, 888},
WindowMargins->{{Automatic, 31}, {Automatic, 10}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TaggingRules->{"SaveDialogDataSavesBlog" -> False, "TryRealOnly" -> False},
TrackCellChangeTimes->False,
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9220aa73-8720-4446-a63d-8589ef2eb51f"
]

