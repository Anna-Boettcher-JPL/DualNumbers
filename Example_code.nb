Notebook[{

Cell[CellGroupData[{
Cell["Initialization", \
"Section",ExpressionUUID->"0231796b-6132-4fd1-9fee-40bf487c529a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "DualNumbers`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[4]:=",ExpressionUUID->"db0bf3fb-3968-4b36-8211-5cb1fa482ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DualNumbers", \
"Section",ExpressionUUID->"8ee5ae86-a341-4457-8275-7b676122c998"],

Cell[CellGroupData[{

Cell["Symbols", \
"Subsection",ExpressionUUID->"480ee803-0653-481c-ba8a-1ac428f21399"],

Cell[CellGroupData[{

Cell["Construction and accessing standard/nonstandard parts", \
"Subsubsection",ExpressionUUID->"6a59529d-398c-4b37-8c91-e92b7872fd6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "Dual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ToDual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Standard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "NonStandard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardAll"}]}], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"3082b9ef-db93-4ab3-b0ce-e85ddbdee692"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \
\\\"[\\\", RowBox[{StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]}], \\\"]\\\"}]\\) represents an \
array of dual numbers. The arrays should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses ToDual[a, 0] \
to construct a dual quantity.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" UpValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"UpValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "UpValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`c", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ")"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`c", "+", "DualNumbers`Private`a"}], 
                    ",", "DualNumbers`Private`b"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], "+", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2_", ",", 
                    "DualNumbers`Private`b2_"}], "]"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a1", "+", "DualNumbers`Private`a2"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b1", "+", 
                    "DualNumbers`Private`b2"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`c", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ")"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`c", " ", "DualNumbers`Private`a"}], 
                    ",", 
                    RowBox[{
                    "DualNumbers`Private`c", " ", "DualNumbers`Private`b"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], " ", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2_", ",", 
                    "DualNumbers`Private`b2_"}], "]"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a1", " ", "DualNumbers`Private`a2"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`b1", " ", "DualNumbers`Private`a2"}],
                     "+", 
                    RowBox[{
                    "DualNumbers`Private`a1", " ", 
                    "DualNumbers`Private`b2"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], "-", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2_", ",", 
                    "DualNumbers`Private`b2_"}], "]"}]}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a1", "-", "DualNumbers`Private`a2"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b1", "-", 
                    "DualNumbers`Private`b2"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    FractionBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2_", ",", 
                    "DualNumbers`Private`b2_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    FractionBox["DualNumbers`Private`a1", 
                    "DualNumbers`Private`a2"], ",", 
                    RowBox[{
                    
                    FractionBox["DualNumbers`Private`b1", 
                    "DualNumbers`Private`a2"], "-", 
                    FractionBox[
                    RowBox[{
                    "DualNumbers`Private`a1", " ", "DualNumbers`Private`b2"}], 
                    SuperscriptBox["DualNumbers`Private`a2", "2"]]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "1"], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Except", "[", 
                    RowBox[{"0", "|", "0.`"}], "]"}], ",", "_"}], "]"}], "0"],
                     ":=", "1"}]},
                    {
                    RowBox[{"Dual", "/:", 
                    FractionBox["1", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    FractionBox["1", "DualNumbers`Private`a"], ",", 
                    RowBox[{"-", 
                    FractionBox["DualNumbers`Private`b", 
                    SuperscriptBox["DualNumbers`Private`a", "2"]]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryAi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"AiryAi", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AiryAiPrime", "[", "#1", "]"}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryAiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryAiPrime", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AiryAi", "[", "#1", "]"}], " ", "#1"}], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryBi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"AiryBi", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AiryBiPrime", "[", "#1", "]"}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AiryBiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "AiryBiPrime", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AiryBi", "[", "#1", "]"}], " ", "#1"}], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCosh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCosh", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]], " ", 
                    SqrtBox[
                    RowBox[{"1", "+", "#1"}]]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCot", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCot", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCoth", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCoth", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCsc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCsc", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcCsch", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSec", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcSec", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["#1", "2"]]}]], " ", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSech", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcSech", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"#1", " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"1", "-", "#1"}], 
                    RowBox[{"1", "+", "#1"}]]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "#1"}], ")"}]}]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSin", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcSin", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcSinh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcSinh", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcTan", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcTan", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArcTanh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ArcTanh", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["#1", "2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BarnesG", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"BarnesG", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BarnesG", "[", "#1", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#1", "-", "1"}], ")"}], " ", 
                    RowBox[{"PolyGamma", "[", "#1", "]"}]}], "-", "#1", "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"2", " ", "\[Pi]"}], "]"}], "+", "1"}], ")"}]}]}],
                     ")"}]}], "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BartlettHannWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BartlettHannWindow", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{"24", "-", 
                    RowBox[{"38", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "24"}], "-", 
                    RowBox[{"38", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BartlettWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BartlettWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanHarrisWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanHarrisWindow", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "97658"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"56512", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"7008", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "100000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanNuttallWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanNuttallWindow", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "9783550"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"5463980", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"638466", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "10000000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BlackmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BlackmanWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "50"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "50"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"16", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"BohmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "BohmanWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], " ", 
                    "#1"}]}], "\[Pi]"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], " ", 
                    "#1"}]}], "\[Pi]"], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"CauchyWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "CauchyWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"72", " ", "#1"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"36", " ", 
                    SuperscriptBox["#1", "2"]}]}], ")"}], "2"]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"Ceiling", "[", "#1", "]"}]}]}], "}"}], "}"}], 
                    ",", "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Clip", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", "1"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "<", "#1", "<", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", "1"}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ConnesWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ConnesWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "16"}], " ", "#1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Cos", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sinh", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"CosineWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "CosineWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Cot", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Cot", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"Csc", "[", "#1", "]"}], "2"]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Coth", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Coth", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"Csch", "[", "#1", "]"}], "2"]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Csc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Csc", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cot", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Csc", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Csch", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Csch", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Coth", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Csch", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RadicalBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "3",
                    MultilineFunction->None,
                    SurdForm->True], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RadicalBox["DualNumbers`Private`a$", "3",
                    MultilineFunction->None,
                    SurdForm->True], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RadicalBox["#1", "3",
                    MultilineFunction->None,
                    SurdForm->True], "2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DawsonF", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DawsonF", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "#1", " ", 
                    RowBox[{"DawsonF", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DirichletWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DirichletWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "2"]}], "||", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DiscreteDelta", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DiscreteDelta", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EllipticE", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"EllipticE", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"EllipticE", "[", "#1", "]"}], "-", 
                    RowBox[{"EllipticK", "[", "#1", "]"}]}], 
                    RowBox[{"2", " ", "#1"}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EllipticK", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"EllipticK", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"EllipticE", "[", "#1", "]"}], "-", 
                    RowBox[{
                    RowBox[{"EllipticK", "[", "#1", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erf", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Erf", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox["#1", "2"]}]]}], 
                    SqrtBox["\[Pi]"]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erfc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Erfc", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox["#1", "2"]}]]}], 
                    SqrtBox["\[Pi]"]]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Erfi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Erfi", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    SuperscriptBox["#1", "2"]]}], 
                    SqrtBox["\[Pi]"]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ExactBlackmanWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ExactBlackmanWindow", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "9240"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"2860", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "9304"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Exp", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "#1"], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ExpIntegralEi", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", "#1"], "#1"], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "!"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a$", "!"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "+", "#1"}], "]"}], " ", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "!!"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a$", "!!"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"#1", "!!"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "+", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", 
                    FractionBox["#1", "2"]}]}], "]"}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Log", "[", 
                    FractionBox["2", "\[Pi]"], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Fibonacci", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Fibonacci", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
                    SqrtBox["5"]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FlatTopWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FlatTopWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "833263160"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"1109052632", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"501473682", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"55578944", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"8", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "1000000000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Floor", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    RowBox[{"Floor", "[", "#1", "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"FractionalPart", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "FractionalPart", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", "#1", "]"}], " ", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"GaussianWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "GaussianWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["100", "9"]}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"50", " ", 
                    SuperscriptBox["#1", "2"]}], "9"]}]], " ", "#1"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gudermannian", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Gudermannian", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sech", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HammingWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HammingWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["21", "23"]}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HannPoissonWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HannPoissonWindow", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "#1"}]]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[GreaterEqual]", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HannWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HannWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Haversine", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Haversine", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Sin", "[", "#1", "]"}], "2"], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HeavisideLambda", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HeavisideLambda", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", "#1"}], "]"}]}], "+", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "#1"}], "]"}]}], "&"}], ")"}],
                     "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"HeavisidePi", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "HeavisidePi", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"DiracDelta", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "#1"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"DiracDelta", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "#1"}]}], "]"}]}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "IntegerPart", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Re", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[Equal]", "0"}], "||", 
                    RowBox[{
                    RowBox[{"Im", "[", "#1", "]"}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}], ")"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"InverseGudermannian", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "InverseGudermannian", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sec", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"InverseHaversine", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "InverseHaversine", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "#1"}], ")"}], " ", "#1"}]]], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KaiserBesselWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KaiserBesselWindow", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "996"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"396", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"6", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "1000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KaiserWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "KaiserWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"12", " ", 
                    RowBox[{"BesselI", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"3", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}]]}]}], "]"}], " ", "#1"}], 
                    RowBox[{
                    RowBox[{"BesselI", "[", 
                    RowBox[{"0", ",", "3"}], "]"}], " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["#1", "2"]}]}]]}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"KelvinBei", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"KelvinBer", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinBer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"KelvinKei", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"KelvinKer", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKei", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"KelvinKer", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}]}]}], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    
                    RowBox[{"DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}]},
                    "KroneckerDeltaSeq"], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"DualNumbers`Private`a$"}]},
                    "KroneckerDeltaSeq"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LanczosWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LanczosWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    SuperscriptBox["#1", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}], 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}]]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", "#1"], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log10", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log10", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "10", "]"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log2", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log2", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], " ", "#1"}]], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogBarnesG", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogBarnesG", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#1", "-", "1"}], ")"}], " ", 
                    RowBox[{"PolyGamma", "[", "#1", "]"}]}], "-", "#1", "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"2", " ", "\[Pi]"}], "]"}], "+", "1"}], ")"}]}]}],
                     "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogGamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"LogGamma", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogIntegral", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogIntegral", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"Log", "[", "#1", "]"}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LogisticSigmoid", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "LogisticSigmoid", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"LogisticSigmoid", "[", "#1", "]"}]}], ")"}], " ", 
                    RowBox[{"LogisticSigmoid", "[", "#1", "]"}]}], "&"}], 
                    ")"}], "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"LucasL", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"LucasL", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", "#1"], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"-", "#1"}]], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Max", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"-", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"-", "DualNumbers`Private`a$"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Multinomial", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "Multinomial", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0", "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NuttallWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "NuttallWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "243698"}], " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"144232", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"4", " ", "\[Pi]", " ", "#1"}], "]"}]}], "-", 
                    RowBox[{"18906", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"6", " ", "\[Pi]", " ", "#1"}], "]"}]}]}], 
                    "250000"], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ParzenWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ParzenWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "#1"}]}], ")"}], "2"]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "4"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "4"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "48"}], " ", "#1"}], "-", 
                    RowBox[{"144", " ", 
                    SuperscriptBox["#1", "2"]}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "48"}], " ", "#1"}], "+", 
                    RowBox[{"144", " ", 
                    SuperscriptBox["#1", "2"]}]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "4"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "4"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "#1"}]}], ")"}], "2"]}], ",", 
                    RowBox[{
                    FractionBox["1", "4"], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PoissonWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "PoissonWindow", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"6", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"6", " ", "#1"}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", "0"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "6"}], " ", "#1"}]]}], ",", 
                    RowBox[{"0", "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", "DualNumbers`Private`a$", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"QPochhammer", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "QPochhammer", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"QPochhammer", "[", 
                    RowBox[{"#1", ",", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "#1"}], "]"}], "+", 
                    RowBox[{"QPolyGamma", "[", 
                    RowBox[{"0", ",", "1", ",", "#1"}], "]"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", "#1"}]]}], "+", 
                    RowBox[{
                    SuperscriptBox["QPochhammer", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"#1", ",", "#1"}], "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Ramp", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Ramp", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"#1", ">", "0"}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RealAbs", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"RealAbs", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["#1", 
                    RowBox[{"RealAbs", "[", "#1", "]"}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RealSign", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"RealSign", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "\[NotEqual]", "0"}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RiemannSiegelTheta", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RiemannSiegelTheta", "[", "DualNumbers`Private`a$", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", "\[Pi]", "]"}], "2"]}], "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "#1"}], "2"]}]}], "]"}], 
                    "+", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "#1"}], "2"]}]}], "]"}]}], 
                    ")"}]}]}], "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"RiemannSiegelZ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "RiemannSiegelZ", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"RiemannSiegelTheta", "[", "#1", "]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "\[Pi]", "]"}]}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "#1"}]}], 
                    ")"}]}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "#1"}]}], 
                    ")"}]}]}], "]"}]}], ")"}], " ", 
                    RowBox[{"Zeta", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#1"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    RowBox[{
                    SuperscriptBox["Zeta", "\[Prime]",
                    MultilineFunction->None], "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#1"}]}], "]"}]}]}], 
                    ")"}]}], "&"}], ")"}], "[", "DualNumbers`Private`a$", 
                    "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "+", 
                    RowBox[{"Re", "[", "#1", "]"}]}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "+", 
                    RowBox[{"Im", "[", "#1", "]"}]}], "\[NotElement]", 
                    TemplateBox[{},
                    "Integers"]}]}]}], "}"}], "}"}], ",", "Indeterminate"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ScorerGiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ScorerGiPrime", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "\[Pi]"]}], "+", 
                    RowBox[{"#1", " ", 
                    RowBox[{"ScorerGi", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ScorerHiPrime", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ScorerHiPrime", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "\[Pi]"], "+", 
                    RowBox[{"#1", " ", 
                    RowBox[{"ScorerHi", "[", "#1", "]"}]}]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Sec", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sec", "[", "#1", "]"}], " ", 
                    RowBox[{"Tan", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sech", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Sech", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Sech", "[", "#1", "]"}]}], " ", 
                    RowBox[{"Tanh", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sinc", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Sinc", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Sin", "[", "#1", "]"}], 
                    SuperscriptBox["#1", "2"]]}], "+", 
                    FractionBox[
                    RowBox[{"Cos", "[", "#1", "]"}], "#1"]}], "&"}], ")"}], 
                    "[", "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Sinh", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", "#1", "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SqrtBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    SqrtBox["DualNumbers`Private`a$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["#1"]}]], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Tan", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "#1", "]"}], "2"], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Tanh", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sech", "[", "#1", "]"}], "2"], "&"}], ")"}], "[",
                     "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"TukeyWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "TukeyWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["3", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "6"], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["3", "2"]}], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Pi]", " ", "#1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "6"]}]}]}], "}"}]}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitBox", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"UnitBox", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", 
                    FractionBox["1", "2"]}], "||", 
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$", "]"}],
                     " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitStep", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"UnitStep", "[", "DualNumbers`Private`a$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{"#1", "\[Equal]", "0"}]}], "}"}], "}"}], ",", 
                    "0"}], "]"}], "&"}], ")"}], "[", "DualNumbers`Private`a$",
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"UnitTriangle", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "UnitTriangle", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Indeterminate", ",", 
                    RowBox[{
                    RowBox[{"#1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["#1", "2"]}], ")"}]}], "\[Equal]", "0"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "<", "#1", "<", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"0", "<", "#1", "<", "1"}]}], "}"}]}], "}"}], ",",
                     "0"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"WelchWindow", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "WelchWindow", "[", "DualNumbers`Private`a$", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", "<", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", "#1"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "#1", "<", 
                    FractionBox["1", "2"]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
                    "Indeterminate"}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`a$", "]"}], " ", 
                    "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$_", ",", 
                    "DualNumbers`Private`b1$_"}], "]"}], 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2$_", ",", 
                    "DualNumbers`Private`b2$_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["DualNumbers`Private`a1$", 
                    "DualNumbers`Private`a2$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["#1", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#2"}]], " ", "#2"}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", 
                    SuperscriptBox["#1", "#2"]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox[
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], 
                    "DualNumbers`Private`c$_"], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["DualNumbers`Private`a$", 
                    "DualNumbers`Private`c$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["#1", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#2"}]], " ", "#2"}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    SuperscriptBox["DualNumbers`Private`c$_", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    
                    SuperscriptBox["DualNumbers`Private`c$", 
                    "DualNumbers`Private`a$"], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", 
                    SuperscriptBox["#1", "#2"]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$_", ",", 
                    "DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2$_", ",", 
                    "DualNumbers`Private`b2$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", "#2", "]"}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Log", "[", "#1", "]"}], "2"], " ", "#1"}]]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", "#2"}]], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    "DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", "#2", "]"}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Log", "[", "#1", "]"}], "2"], " ", "#1"}]]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"Log", "[", "#1", "]"}], " ", "#2"}]], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$_", ",", 
                    "DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2$_", ",", 
                    "DualNumbers`Private`b2$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], " ", "#1"}], "#2"]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    "DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    FractionBox["#1", "#2"], ">", 
                    RowBox[{"Floor", "[", 
                    FractionBox["#1", "#2"], "]"}]}]}], "}"}], "}"}], ",", 
                    "Indeterminate"}], "]"}], " ", "#1"}], "#2"]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$_", ",", 
                    "DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2$_", ",", 
                    "DualNumbers`Private`b2$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}]}], ")"}]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#2"}]}], "]"}]}], ")"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    "DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}]}], ")"}]}], 
                    "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{"DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#1", "-", "#2"}]}], "]"}], "-", 
                    RowBox[{"PolyGamma", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"1", "+", "#2"}]}], "]"}]}], ")"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$_", ",", 
                    "DualNumbers`Private`b1$_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2$_", ",", 
                    "DualNumbers`Private`b2$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"Log", "[", "#2", "]"}]}], "+", 
                    RowBox[{"MeijerG", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", "#2"}], "]"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b1$"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "#2"}]]}], " ", 
                    SuperscriptBox["#2", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a1$", ",", 
                    "DualNumbers`Private`a2$"}], "]"}], " ", 
                    "DualNumbers`Private`b2$"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    "DualNumbers`Private`c$_"}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], " ", 
                    RowBox[{"Log", "[", "#2", "]"}]}], "+", 
                    RowBox[{"MeijerG", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", "#2"}], "]"}]}], "&"}], 
                    ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", "DualNumbers`Private`c$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"DualNumbers`Private`c$_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}]}], "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "#2"}]]}], " ", 
                    SuperscriptBox["#2", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "#1"}]]}], "&"}], ")"}], "[", 
                    RowBox[{
                    "DualNumbers`Private`c$", ",", "DualNumbers`Private`a$"}],
                     "]"}], " ", "DualNumbers`Private`b$"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", "DualNumbers`Private`a", "]"}], ",", 
                    RowBox[{"DualNumbers`Private`b", " ", 
                    RowBox[{"Sign", "[", "DualNumbers`Private`a", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "]"}], "^:=", 
                    RowBox[{"Sign", "[", "DualNumbers`Private`a", "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`xmin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`xmax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}]}], "]"}],
                     ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin", ",", 
                    "DualNumbers`Private`xmax"}], "}"}]}], "]"}], ",", 
                    RowBox[{"DualNumbers`Private`b", " ", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    "DualNumbers`Private`xmin", "\[LessEqual]", 
                    "DualNumbers`Private`a", "\[LessEqual]", 
                    "DualNumbers`Private`xmax"}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`xmin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`xmax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`ymin", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`ymax", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "}"}]}], "]"}],
                     ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin", ",", 
                    "DualNumbers`Private`xmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`ymin", ",", 
                    "DualNumbers`Private`ymax"}], "}"}]}], "]"}], ",", 
                    RowBox[{"DualNumbers`Private`b", " ", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    "DualNumbers`Private`xmin", "\[LessEqual]", 
                    "DualNumbers`Private`a", "\[LessEqual]", 
                    "DualNumbers`Private`xmax"}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin$_", ",", 
                    "DualNumbers`Private`xmax$_"}], "}"}]}], "]"}], "/;", 
                    RowBox[{"NoneTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin$", ",", 
                    "DualNumbers`Private`xmax$"}], "}"}], ",", "DualArrayQ"}],
                     "]"}]}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`stdargs$", "=", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`a$", ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`xmin$", "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`xmax$", "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`stdargs$", "]"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`b$", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$", 
                    "]"}]}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DualQ", "[", "DualNumbers`Private`xmin$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`nonstd", "[", 
                    "DualNumbers`Private`xmin$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$", 
                    "]"}]}], ",", "0"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DualQ", "[", "DualNumbers`Private`xmax$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`nonstd", "[", 
                    "DualNumbers`Private`xmax$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ">", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[GreaterEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], "}"}], ",", "0"}],
                     "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$",
                     "]"}]}], ",", "0"}], "]"}]}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin$_", ",", 
                    "DualNumbers`Private`xmax$_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`ymin$_", ",", 
                    "DualNumbers`Private`ymax$_"}], "}"}]}], "]"}], "/;", 
                    RowBox[{"NoneTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`xmin$", ",", 
                    "DualNumbers`Private`xmax$", ",", 
                    "DualNumbers`Private`ymin$", ",", 
                    "DualNumbers`Private`ymax$"}], "}"}], ",", "DualArrayQ"}],
                     "]"}]}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`stdargs$", "=", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`a$", ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`xmin$", "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`xmax$", "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`ymin$", "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`ymax$", "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                     ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "[", 
                    "DualNumbers`Private`stdargs$", "]"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`b$", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$", 
                    "]"}]}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DualQ", "[", "DualNumbers`Private`ymin$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`nonstd", "[", 
                    "DualNumbers`Private`ymin$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "}"}], ",", "0"}], 
                    "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$", 
                    "]"}]}], ",", "0"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DualQ", "[", "DualNumbers`Private`ymax$", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`nonstd", "[", 
                    "DualNumbers`Private`ymax$", "]"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ">", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[GreaterEqual]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}]}], "}"}], "}"}], ",", "0"}],
                     "]"}], "&"}], ")"}], "[", "DualNumbers`Private`stdargs$",
                     "]"}]}], ",", "0"}], "]"}]}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "VectorQ"}], ",", 
                    "DualNumbers`Private`b_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`p", ":", 
                    RowBox[{"Except", "[", "\[Infinity]", "]"}], ":", "2"}]}],
                     "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`p"}], 
                    "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Total", "[", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", "DualNumbers`Private`a", "]"}], 
                    "DualNumbers`Private`p"], "]"}], 
                    RowBox[{
                    FractionBox["1", "DualNumbers`Private`p"], "-", "1"}]], 
                    " ", 
                    RowBox[{"DualNumbers`Private`b", ".", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Abs", "[", "DualNumbers`Private`a", "]"}], 
                    RowBox[{"DualNumbers`Private`p", "-", "1"}]], " ", 
                    RowBox[{"Sign", "[", "DualNumbers`Private`a", "]"}]}], 
                    ")"}]}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "VectorQ"}], "]"}]}], ",", 
                    "DualNumbers`Private`b_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "norm"}], "MessageName"], ",", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}], ";", "False"}], ")"}]}], "^:=", "Undefined"}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "VectorQ"}], ",", 
                    "DualNumbers`Private`b_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "\[Infinity]"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`absA", "=", 
                    RowBox[{"Abs", "[", "DualNumbers`Private`a", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`max", "=", 
                    RowBox[{"Max", "[", "DualNumbers`Private`absA", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`pos", "=", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{"DualNumbers`Private`absA", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"EqualTo", "[", "DualNumbers`Private`max", "]"}], 
                    ")"}]}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`max", ",", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`pos"}],
                     "]"}], "]"}], " ", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`b", ",", "DualNumbers`Private`pos"}],
                     "]"}]}], "]"}]}], "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Head", "[", "DualNumbers`Private`max", "]"}], "=!=",
                     "Max"}]}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "VectorQ"}], ",", 
                    "DualNumbers`Private`b_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "\[Infinity]"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"Dual", "::", "infnorm"}], "MessageName"], "]"}], 
                    ";", "False"}], ")"}]}], ":=", "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", 
                    "DualNumbers`Private`b_"}], "]"}], ")"}], "?", 
                    "DualScalarQ"}], ",", "___"}], "]"}], "^:=", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualNumbers`Private`c_", "?", "ArrayQ"}], ".", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`c", ".", "DualNumbers`Private`a"}], 
                    ",", 
                    RowBox[{
                    "DualNumbers`Private`c", ".", "DualNumbers`Private`b"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], ".", 
                    RowBox[{"DualNumbers`Private`c_", "?", "ArrayQ"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a", ".", "DualNumbers`Private`c"}], 
                    ",", 
                    RowBox[{
                    "DualNumbers`Private`b", ".", "DualNumbers`Private`c"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ".", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a2_", ",", 
                    "DualNumbers`Private`b2_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}]}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a1", ".", "DualNumbers`Private`a2"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a1", ".", "DualNumbers`Private`b2"}],
                     "+", 
                    RowBox[{
                    "DualNumbers`Private`b1", ".", 
                    "DualNumbers`Private`a2"}]}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "SquareMatrixQ"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#2", "===", "1"}], ",", 
                    RowBox[{"DualNumbers`Private`d", ".", "#1"}], ",", "#1"}],
                     "]"}], ".", "#1"}], "&"}], ",", "DualNumbers`Private`d", 
                    ",", 
                    RowBox[{"Rest", "[", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"DualNumbers`Private`n", ",", "2"}], "]"}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "SquareMatrixQ"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Negative"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{"MatrixPower", "[", 
                    RowBox[{"DualNumbers`Private`d", ",", 
                    RowBox[{"-", "DualNumbers`Private`n"}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Inverse", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "SquareMatrixQ"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`inv", "=", 
                    RowBox[{"Inverse", "[", "DualNumbers`Private`a", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`inv", ",", 
                    RowBox[{"-", 
                    RowBox[{
                    "DualNumbers`Private`inv", ".", "DualNumbers`Private`b", 
                    ".", "DualNumbers`Private`inv"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "MatrixQ", "[", "DualNumbers`Private`inv", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "SquareMatrixQ"}], ",", 
                    RowBox[{"DualNumbers`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`ls", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`opts"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{
                    "DualNumbers`Private`ls", ",", "DualNumbers`Private`b"}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Head", "[", "DualNumbers`Private`ls", "]"}], "===",
                     "LinearSolveFunction"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "SquareMatrixQ"}], ",", 
                    RowBox[{"DualNumbers`Private`x", ":", 
                    RowBox[{
                    RowBox[{"_", "?", "ArrayQ"}], "|", 
                    RowBox[{"_Dual", "?", "DualArrayQ"}]}]}], ",", 
                    RowBox[{"DualNumbers`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`ls", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`opts"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{"DualNumbers`Private`ls", ",", 
                    "DualNumbers`Private`b"}], "]"}], "[", 
                    "DualNumbers`Private`x", "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Head", "[", "DualNumbers`Private`ls", "]"}], "===",
                     "LinearSolveFunction"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NumericQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NumericQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"NumberQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "IntegerQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Positive", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Positive", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Negative", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "Negative", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NonPositive", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NonPositive", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"NonNegative", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "NonNegative", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"EvenQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"EvenQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"OddQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"OddQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PrimeQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"PrimeQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"AlgebraicIntegerQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "AlgebraicIntegerQ", "[", "DualNumbers`Private`a$", 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a$_", ",", "_"}], "]"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{
                    "PossibleZeroQ", "[", "DualNumbers`Private`a$", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Total"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Mean"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Transpose"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Flatten"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], "\[LeftDoubleBracket]", 
                    "DualNumbers`Private`rest$___", "\[RightDoubleBracket]"}],
                     "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a$", "\[LeftDoubleBracket]", 
                    "DualNumbers`Private`rest$", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    "DualNumbers`Private`b$", "\[LeftDoubleBracket]", 
                    "DualNumbers`Private`rest$", "\[RightDoubleBracket]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "\[LeftDoubleBracket]", 
                    "___", "\[RightDoubleBracket]"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Part"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Extract"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Take"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Drop"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "First"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Last", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Last", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Last"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Rest", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Rest", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Rest", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Rest"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Most", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}], ",", 
                    RowBox[{"Most", "[", 
                    RowBox[{
                    "DualNumbers`Private`b$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Most"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{"Dual", "/:", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`arrays__Dual", "?", "DualArrayQ"}], 
                    ",", "DualNumbers`Private`n_Integer"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", "=", 
                    RowBox[{"Standard", "[", 
                    RowBox[{"{", "DualNumbers`Private`arrays", "}"}], "]"}]}],
                     ",", 
                    RowBox[{"DualNumbers`Private`b", "=", 
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"{", "DualNumbers`Private`arrays", "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`a"}], ",", 
                    "DualNumbers`Private`n"}], "]"}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`b"}], ",", 
                    "DualNumbers`Private`n"}], "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualArrayQ", "[", "DualNumbers`Private`try", "]"}], ",", 
                    "DualNumbers`Private`try", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"Dual", "::", "join"}], "MessageName"], "]"}], 
                    ";", 
                    RowBox[{
                    TemplateBox[{"Join"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Join]"], "[", 
                    "DualNumbers`Private`arrays", "]"}]}]}], "]"}]}], "]"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    "DualNumbers`Private`arrays__Dual", "?", "DualArrayQ"}], 
                    "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", "=", 
                    RowBox[{"Standard", "[", 
                    RowBox[{"{", "DualNumbers`Private`arrays", "}"}], "]"}]}],
                     ",", 
                    RowBox[{"DualNumbers`Private`b", "=", 
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"{", "DualNumbers`Private`arrays", "}"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`a"}], 
                    "]"}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`b"}], 
                    "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualArrayQ", "[", "DualNumbers`Private`try", "]"}], ",", 
                    "DualNumbers`Private`try", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"Dual", "::", "join"}], "MessageName"], "]"}], 
                    ";", 
                    RowBox[{
                    TemplateBox[{"Join"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Join]"], "[", 
                    "DualNumbers`Private`arrays", "]"}]}]}], "]"}]}], "]"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"___", ",", "_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Join"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], ",", 
                    "DualNumbers`Private`selFun_", ",", 
                    RowBox[{"DualNumbers`Private`n_", ":", "\[Infinity]"}]}], 
                    "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`pos", "=", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"_", "?", "DualNumbers`Private`selFun"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`pos"}],
                     "]"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`b", ",", "DualNumbers`Private`pos"}],
                     "]"}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Select"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", "_"}], "]"}], 
                    ")"}], "?", "DualArrayQ"}], ",", 
                    "DualNumbers`Private`rest___"}], "]"}], "^:=", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Position"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pick", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`list_Dual", "?", "DualArrayQ"}], ",",
                     "DualNumbers`Private`sel_", ",", 
                    RowBox[{"DualNumbers`Private`patt_", ":", "True"}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", "DualNumbers`Private`list", "]"}], 
                    "===", 
                    RowBox[{
                    "Length", "[", "DualNumbers`Private`sel", "]"}]}]}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`pos", "=", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{
                    "DualNumbers`Private`sel", ",", 
                    "DualNumbers`Private`patt"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`list", ",", 
                    "DualNumbers`Private`pos"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pick", "[", 
                    RowBox[{"DualNumbers`Private`list_", ",", 
                    RowBox[{
                    "DualNumbers`Private`sel_Dual", "?", "DualArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`patt_", ":", "True"}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", "DualNumbers`Private`list", "]"}], 
                    "===", 
                    RowBox[{
                    "Length", "[", "DualNumbers`Private`sel", "]"}]}]}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`pos", "=", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{
                    "DualNumbers`Private`sel", ",", 
                    "DualNumbers`Private`patt"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "DualNumbers`Private`list", ",", 
                    "DualNumbers`Private`pos"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pick", "[", 
                    RowBox[{"_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Dual"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pick", "[", 
                    RowBox[{"_", ",", "_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Dual"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"DualNumbers`Private`fun$_", ",", 
                    RowBox[{
                    "DualNumbers`Private`dualArr$_Dual", "?", "DualArrayQ"}], 
                    ",", "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"DualNumbers`Private`fun$", ",", 
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`dualArr$", 
                    "]"}], ",", "DualNumbers`Private`rest$"}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"_", ",", "_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Map"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{"DualNumbers`Private`fun$_", ",", 
                    RowBox[{
                    "DualNumbers`Private`dualArr$_Dual", "?", "DualArrayQ"}], 
                    ",", "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{"DualNumbers`Private`fun$", ",", 
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`dualArr$", 
                    "]"}], ",", "DualNumbers`Private`rest$"}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{"_", ",", "_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "MapIndexed"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Apply", "[", 
                    RowBox[{"DualNumbers`Private`fun$_", ",", 
                    RowBox[{
                    "DualNumbers`Private`dualArr$_Dual", "?", "DualArrayQ"}], 
                    ",", "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"DualNumbers`Private`fun$", ",", 
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`dualArr$", 
                    "]"}], ",", "DualNumbers`Private`rest$"}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Apply", "[", 
                    RowBox[{"_", ",", "_Dual", ",", "___"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "arrayOp"}], "MessageName"], ",", 
                    "Apply"}], "]"}], ";", "False"}], ")"}]}], "^:=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"SquareMatrixQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"SquareMatrixQ", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArrayDepth", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$_", ",", 
                    "DualNumbers`Private`b$_"}], "]"}], ")"}], "?", 
                    "DualArrayQ"}], ",", "DualNumbers`Private`rest$___"}], 
                    "]"}], "]"}], "^:=", 
                    RowBox[{"ArrayDepth", "[", 
                    RowBox[{
                    "DualNumbers`Private`a$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "^:=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "^:=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"SquareMatrixQ", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], 
                    "]"}], "^:=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], "]"}], "^:=", 
                    "0"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], "]"}], "^:=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"ArrayDepth", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], "]"}], "^:=", 
                    "0"}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DualNumbers`Private`first$___", "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[Equal]", "DualNumbers`Private`rest$___"}], 
                    "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"Equal", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DualNumbers`Private`first$___", "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[NotEqual]", "DualNumbers`Private`rest$___"}], 
                    "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"Unequal", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DualNumbers`Private`first$___", ">", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], ">", "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"Greater", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    "DualNumbers`Private`first$___", "\[GreaterEqual]", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[GreaterEqual]", 
                    "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"GreaterEqual", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DualNumbers`Private`first$___", "<", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "<", "DualNumbers`Private`rest$___"}], "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"Less", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"DualNumbers`Private`first$___", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{"DualNumbers`Private`d$", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", "_"}], "]"}]}], 
                    ")"}], "\[LessEqual]", "DualNumbers`Private`rest$___"}], 
                    "]"}], "^:=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`test", "=", 
                    RowBox[{"LessEqual", "@@", 
                    RowBox[{"DualNumbers`Private`std", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first$", ",", 
                    "DualNumbers`Private`d$", ",", 
                    "DualNumbers`Private`rest$"}], "}"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`test", "/;", 
                    RowBox[{
                    "BooleanQ", "[", "DualNumbers`Private`test", "]"}]}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", "DualNumbers`Private`a_", "]"}], ":=", 
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", "0"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"_List", "|", "_SparseArray"}]}], ",", 
                    "DualNumbers`Private`b_"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"DualArrayQ", "[", 
                    RowBox[{"Unevaluated", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}], "]"}], "]"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "array"}], "MessageName"], ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`b", "]"}],
                     ",", 
                    RowBox[{"Short", "[", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}], "]"}]}], "]"}], ";", "False"}], ")"}]}]}], ":=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_List", "|", "_SparseArray"}], "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`b", ":", 
                    RowBox[{"_List", "|", "_SparseArray"}]}]}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Dual", "::", "array"}], "MessageName"], ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`b", "]"}],
                     ",", 
                    RowBox[{"Short", "[", 
                    RowBox[{
                    TemplateBox[{"Dual"},
                    "InactiveHead",
                    BaseStyle->"Inactive",
                    SyntaxForm->"Symbol",
                    Tooltip->"Inactive[Dual]"], "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}], "]"}]}], "]"}], ";", "False"}], ")"}]}], ":=", 
                    "Undefined"}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a1_", ",", 
                    "DualNumbers`Private`b1_"}], "]"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a2_", ",", "_"}], "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a1", ",", 
                    RowBox[{
                    "DualNumbers`Private`a2", "+", 
                    "DualNumbers`Private`b1"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ",", "DualNumbers`Private`c_"}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{
                    "DualNumbers`Private`b", "+", "DualNumbers`Private`c"}]}],
                     "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`b_", ",", "_"}], "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Dual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \
\\\"[\\\", RowBox[{StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]}], \\\"]\\\"}]\\) represents an \
array of dual numbers. The arrays should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses ToDual[a, 0] \
to construct a dual quantity.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  \
StyleBox[\"b\", \"TI\"]}], \"]\"}]\) represents a dual number with standard \
part \!\(\*StyleBox[\"a\", \"TI\"]\) and infinitesimal part \
\!\(\*StyleBox[\"b\", \"TI\"]\).\n\!\(\*RowBox[{\"Dual\", \"[\", \
RowBox[{StyleBox[SubscriptBox[\"array\", StyleBox[\"1\", \"TR\"]], \"TI\"], \
\",\",  StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \"TI\"]}], \
\"]\"}]\) represents an array of dual numbers. The arrays should have the \
same shape (i.e., Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\
\"1\", \"TR\"]], \"TI\"]\)] === \
Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \
\"TI\"]\)])\n\!\(\*RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \
\"TI\"]}], \"]\"}]\) uses ToDual[a, 0] to construct a dual quantity.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    Information`InformationValueForm[
     UpValues, DualNumbers`Dual, {DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]] + Pattern[DualNumbers`Private`c, 
          Except[
           Blank[DualNumbers`Dual]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`c + DualNumbers`Private`a, DualNumbers`Private`b],
        DualNumbers`Dual[
          Pattern[DualNumbers`Private`a1, 
           Blank[]], 
          Pattern[DualNumbers`Private`b1, 
           Blank[]]] + DualNumbers`Dual[
          Pattern[DualNumbers`Private`a2, 
           Blank[]], 
          Pattern[DualNumbers`Private`b2, 
           Blank[]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a1 + DualNumbers`Private`a2, 
         DualNumbers`Private`b1 + DualNumbers`Private`b2], DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]] Pattern[DualNumbers`Private`c, 
          Except[
           Blank[DualNumbers`Dual]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`c DualNumbers`Private`a, DualNumbers`Private`c 
         DualNumbers`Private`b], DualNumbers`Dual[
          Pattern[DualNumbers`Private`a1, 
           Blank[]], 
          Pattern[DualNumbers`Private`b1, 
           Blank[]]] DualNumbers`Dual[
          Pattern[DualNumbers`Private`a2, 
           Blank[]], 
          Pattern[DualNumbers`Private`b2, 
           Blank[]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a1 DualNumbers`Private`a2, 
         DualNumbers`Private`b1 DualNumbers`Private`a2 + 
         DualNumbers`Private`a1 DualNumbers`Private`b2], HoldPattern[
         Subtract[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2, 
            Blank[]]]]] :> DualNumbers`Dual[
         Subtract[DualNumbers`Private`a1, DualNumbers`Private`a2], 
         Subtract[DualNumbers`Private`b1, DualNumbers`Private`b2]], 
       HoldPattern[
         Divide[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2, 
            Blank[]]]]] :> DualNumbers`Dual[
         Divide[DualNumbers`Private`a1, DualNumbers`Private`a2], 
         Subtract[
          Divide[DualNumbers`Private`b1, DualNumbers`Private`a2], 
          Divide[
          DualNumbers`Private`a1 DualNumbers`Private`b2, 
           DualNumbers`Private`a2^2]]], DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]^1 :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b], 
       DualNumbers`Dual[
          Except[
           Alternatives[0, 0.]], 
          Blank[]]^0 :> 1, DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]^(-1) :> DualNumbers`Dual[
         Divide[1, DualNumbers`Private`a], -
         Divide[DualNumbers`Private`b, DualNumbers`Private`a^2]], HoldPattern[
         AiryAi[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         AiryAi[
         DualNumbers`Private`a$], (AiryAiPrime[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         AiryAiPrime[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         AiryAiPrime[
         DualNumbers`Private`a$], (AiryAi[#] #& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         AiryBi[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         AiryBi[
         DualNumbers`Private`a$], (AiryBiPrime[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         AiryBiPrime[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         AiryBiPrime[
         DualNumbers`Private`a$], (AiryBi[#] #& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ArcCos[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCos[
         DualNumbers`Private`a$], (-(1 - #^2)^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcCosh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCosh[
         DualNumbers`Private`a$], ((-1 + #)^Rational[-1, 2] (1 + #)^
           Rational[-1, 2]& )[DualNumbers`Private`a$] DualNumbers`Private`b$],
        HoldPattern[
         ArcCot[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCot[
         DualNumbers`Private`a$], ((-1)/(1 + #^2)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ArcCoth[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCoth[
         DualNumbers`Private`a$], ((1 - #^2)^(-1)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ArcCsc[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCsc[
         DualNumbers`Private`a$], (-(1 - #^(-2))^Rational[-1, 2] #^(-2)& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcCsch[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcCsch[
         DualNumbers`Private`a$], (-(1 + #^(-2))^Rational[-1, 2] #^(-2)& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcSec[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcSec[
         DualNumbers`Private`a$], ((1 - #^(-2))^Rational[-1, 2] #^(-2)& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcSech[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcSech[
         DualNumbers`Private`a$], (-#^(-1) ((1 - #)/(1 + #))^Rational[-1, 2]/(
          1 + #)& )[DualNumbers`Private`a$] DualNumbers`Private`b$], 
       HoldPattern[
         ArcSin[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcSin[
         DualNumbers`Private`a$], ((1 - #^2)^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcSinh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcSinh[
         DualNumbers`Private`a$], ((1 + #^2)^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ArcTan[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcTan[
         DualNumbers`Private`a$], ((1 + #^2)^(-1)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ArcTanh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ArcTanh[
         DualNumbers`Private`a$], ((1 - #^2)^(-1)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         BarnesG[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BarnesG[
         DualNumbers`Private`a$], (
          BarnesG[#] ((# - 1) PolyGamma[#] - # + (Log[2 Pi] + 1)/2)& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         BartlettHannWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BartlettHannWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 50] (24 - 38 Pi Sin[2 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {
            Rational[1, 50] (-24 - 38 Pi Sin[2 Pi #]), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         BartlettWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BartlettWindow[
         DualNumbers`Private`a$], (Piecewise[{{0, # < Rational[-1, 2]}, {2, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {-2, 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         BlackmanHarrisWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BlackmanHarrisWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 100000] ((-97658) Pi Sin[2 Pi #] - 56512 Pi 
              Sin[4 Pi #] - 7008 Pi Sin[6 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         BlackmanNuttallWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BlackmanNuttallWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 10000000] ((-9783550) Pi Sin[2 Pi #] - 5463980 Pi 
              Sin[4 Pi #] - 638466 Pi Sin[6 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         BlackmanWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BlackmanWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Rational[1, 50] ((-50) Pi Sin[2 Pi #] - 16 Pi Sin[4 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         BohmanWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         BohmanWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Pi^(-1) ((-2) Pi^2 Sin[2 Pi #] - 4 Pi^2 Sin[2 Pi #] #), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {
            Pi^(-1) ((-2) Pi^2 Sin[2 Pi #] + 4 Pi^2 Sin[2 Pi #] #), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         CauchyWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         CauchyWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {(-72) # (1 + 36 #^2)^(-2), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Ceiling[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Ceiling[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Ceiling[#]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Clip[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Clip[DualNumbers`Private`a$], (Piecewise[{{0, # < -1}, {1, 
             Inequality[-1, Less, #, Less, 1]}, {0, # > 1}}, 
           Indeterminate]& )[DualNumbers`Private`a$] DualNumbers`Private`b$], 
       HoldPattern[
         ConnesWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ConnesWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {(-16) # (1 - 4 #^2), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Cos[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Cos[DualNumbers`Private`a$], (-Sin[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Cosh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Cosh[DualNumbers`Private`a$], (Sinh[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         CosineWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         CosineWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {-Pi Sin[Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Cot[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Cot[DualNumbers`Private`a$], (-Csc[#]^2& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Coth[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Coth[DualNumbers`Private`a$], (-Csch[#]^2& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Csc[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Csc[
         DualNumbers`Private`a$], (-Cot[#] Csc[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Csch[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Csch[
         DualNumbers`Private`a$], (-Coth[#] Csch[#]& )[DualNumbers`Private`a$]
           DualNumbers`Private`b$], HoldPattern[
         CubeRoot[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         CubeRoot[
         DualNumbers`Private`a$], (Rational[1, 3] Surd[#, 3]^(-2)& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         DawsonF[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         DawsonF[
         DualNumbers`Private`a$], (1 - 2 # DawsonF[#]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         DirichletWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         DirichletWindow[DualNumbers`Private`a$], (Piecewise[{{Indeterminate, 
             Or[# == Rational[1, 2], # == Rational[-1, 2]]}}, 0]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         DiscreteDelta[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         DiscreteDelta[DualNumbers`Private`a$], (0& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         EllipticE[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         EllipticE[
         DualNumbers`Private`a$], (
          Rational[1, 2] (EllipticE[#] - EllipticK[#])/#& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         EllipticK[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         EllipticK[
         DualNumbers`Private`a$], (
          Rational[1, 2] (EllipticE[#] - 
           EllipticK[#] (1 - #)) (1 - #)^(-1)/#& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Erf[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Erf[
         DualNumbers`Private`a$], (2 E^(-#^2) Pi^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Erfc[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Erfc[
         DualNumbers`Private`a$], ((-2) E^(-#^2) Pi^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Erfi[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Erfi[
         DualNumbers`Private`a$], (2 E^(#^2) Pi^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ExactBlackmanWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ExactBlackmanWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 9304] ((-9240) Pi Sin[2 Pi #] - 2860 Pi Sin[4 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Exp[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Exp[DualNumbers`Private`a$], (E^#& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ExpIntegralEi[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ExpIntegralEi[
         DualNumbers`Private`a$], (E^#/#& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Factorial[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Factorial[
         DualNumbers`Private`a$], (Gamma[1 + #] PolyGamma[0, 1 + #]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Factorial2[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Factorial2[
         DualNumbers`Private`a$], (Rational[1, 2] 
          Factorial2[#] (Log[2] + PolyGamma[0, 1 + Rational[1, 2] #] + 
           Rational[1, 2] Pi Log[2/Pi] Sin[Pi #])& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Fibonacci[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Fibonacci[
         DualNumbers`Private`a$], (5^Rational[-1, 2] 
          GoldenRatio^(-#) (GoldenRatio^(2 #) Log[GoldenRatio] + 
           Cos[Pi #] Log[GoldenRatio] + Pi Sin[Pi #])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         FlatTopWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         FlatTopWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 1000000000] ((-833263160) Pi Sin[2 Pi #] - 1109052632 
              Pi Sin[4 Pi #] - 501473682 Pi Sin[6 Pi #] - 55578944 Pi 
              Sin[8 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Floor[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Floor[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # > Floor[#]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         FractionalPart[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         FractionalPart[DualNumbers`Private`a$], (Piecewise[{{1, 
             And[
              Or[Re[#] == 0, 
               NotElement[
                Re[#], Integers]], 
              Or[Im[#] == 0, 
               NotElement[
                Im[#], Integers]]]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Gamma[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Gamma[
         DualNumbers`Private`a$], (Gamma[#] PolyGamma[0, #]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         GaussianWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         GaussianWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[-100, 9] E^(Rational[-50, 9] #^2) #, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Gudermannian[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Gudermannian[
         DualNumbers`Private`a$], (Sech[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         HammingWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         HammingWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[-21, 23] Pi Sin[2 Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         HannPoissonWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         HannPoissonWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            E^(2 #) (1 + Cos[2 Pi #]) - E^(2 #) Pi Sin[2 Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {-
              E^((-2) #) (1 + Cos[2 Pi #]) - E^((-2) #) Pi Sin[2 Pi #], 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # >= Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         HannWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         HannWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {-Pi Sin[2 Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Haversine[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Haversine[
         DualNumbers`Private`a$], (Rational[1, 2] Sin[#]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         HeavisideLambda[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         HeavisideLambda[
         DualNumbers`Private`a$], (-HeavisidePi[Rational[1, 2] - #] + 
          HeavisidePi[Rational[1, 2] + #]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         HeavisidePi[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         HeavisidePi[
         DualNumbers`Private`a$], ((-2) DiracDelta[-1 + 2 #] + 
          2 DiracDelta[1 + 2 #]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         IntegerPart[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         IntegerPart[DualNumbers`Private`a$], (Piecewise[{{0, 
             And[
              Or[Re[#] == 0, 
               NotElement[
                Re[#], Integers]], 
              Or[Im[#] == 0, 
               NotElement[
                Im[#], Integers]]]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         InverseGudermannian[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         InverseGudermannian[
         DualNumbers`Private`a$], (Sec[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         InverseHaversine[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         InverseHaversine[
         DualNumbers`Private`a$], (((1 - #) #)^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KaiserBesselWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KaiserBesselWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            Rational[1, 1000] ((-996) Pi Sin[2 Pi #] - 396 Pi Sin[4 Pi #] - 6 
              Pi Sin[6 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KaiserWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KaiserWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{
            0, # < Rational[-1, 2]}, {(-12) BesselI[0, 3]^(-1) 
             BesselI[1, 3 (1 - 4 #^2)^Rational[1, 2]] # (1 - 4 #^2)^
              Rational[-1, 2], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KelvinBei[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KelvinBei[
         DualNumbers`Private`a$], (Rational[1, 2] 
          2^Rational[-1, 2] (2 KelvinBei[1, #] - 2 KelvinBer[1, #])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KelvinBer[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KelvinBer[
         DualNumbers`Private`a$], (Rational[1, 2] 
          2^Rational[-1, 2] (2 KelvinBei[1, #] + 2 KelvinBer[1, #])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KelvinKei[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KelvinKei[
         DualNumbers`Private`a$], (Rational[1, 2] 
          2^Rational[-1, 2] (2 KelvinKei[1, #] - 2 KelvinKer[1, #])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KelvinKer[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KelvinKer[
         DualNumbers`Private`a$], (Rational[1, 2] 
          2^Rational[-1, 2] (2 KelvinKei[1, #] + 2 KelvinKer[1, #])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         KroneckerDelta[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         KroneckerDelta[
         DualNumbers`Private`a$], (0& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         LanczosWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LanczosWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {
            2 Pi (Rational[-1, 4] Pi^(-2) Sin[2 Pi #] #^(-2) + 
              Rational[1, 2] Pi^(-1) Cos[2 Pi #]/#), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Log[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Log[DualNumbers`Private`a$], (#^(-1)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Log10[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Log10[
         DualNumbers`Private`a$], (Log[10]^(-1)/#& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Log2[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Log2[
         DualNumbers`Private`a$], (Log[2]^(-1)/#& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         LogBarnesG[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LogBarnesG[
         DualNumbers`Private`a$], ((# - 1) PolyGamma[#] - # + (Log[2 Pi] + 1)/
           2& )[DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         LogGamma[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LogGamma[
         DualNumbers`Private`a$], (PolyGamma[0, #]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         LogIntegral[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LogIntegral[
         DualNumbers`Private`a$], (Log[#]^(-1)& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         LogisticSigmoid[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LogisticSigmoid[
         DualNumbers`Private`a$], ((1 - LogisticSigmoid[#]) 
          LogisticSigmoid[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         LucasL[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         LucasL[
         DualNumbers`Private`a$], (GoldenRatio^# Log[GoldenRatio] - 
          GoldenRatio^(-#) Cos[Pi #] Log[GoldenRatio] - GoldenRatio^(-#) Pi 
          Sin[Pi #]& )[DualNumbers`Private`a$] DualNumbers`Private`b$], 
       HoldPattern[
         Max[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Max[DualNumbers`Private`a$], (1& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Min[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Min[DualNumbers`Private`a$], (1& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Minus[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Minus[DualNumbers`Private`a$], (-1& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Multinomial[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Multinomial[DualNumbers`Private`a$], (0& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         NuttallWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         NuttallWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {
            Rational[1, 250000] ((-243698) Pi Sin[2 Pi #] - 144232 Pi 
              Sin[4 Pi #] - 18906 Pi Sin[6 Pi #]), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         ParzenWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ParzenWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # <= Rational[-1, 2]}, {12 (1 + 2 #)^2, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[-1, 4]]}, {
            3, # == Rational[-1, 4]}, {(-48) # - 144 #^2, 
             Inequality[
              Rational[-1, 4], Less, #, Less, 0]}, {
            0, # == 0}, {(-48) # + 144 #^2, 
             Inequality[0, Less, #, Less, 
              Rational[1, 4]]}, {-3, # == 
             Rational[1, 4]}, {(-12) (-1 + 2 #)^2, 
             Inequality[
              Rational[1, 4], Less, #, Less, 
              Rational[1, 2]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         PoissonWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         PoissonWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {6 E^(6 #), 
             Inequality[
              Rational[-1, 2], Less, #, Less, 0]}, {(-6) E^((-6) #), 
             Inequality[0, Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         PolyGamma[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         PolyGamma[
         DualNumbers`Private`a$], (PolyGamma[1, #]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         QPochhammer[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         QPochhammer[
         DualNumbers`Private`a$], (-Log[#]^(-1) 
           QPochhammer[#, #] (Log[1 - #] + QPolyGamma[0, 1, #])/# + 
          Derivative[0, 1][QPochhammer][#, #]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Ramp[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Ramp[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < 0}, {1, # > 0}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         RealAbs[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         RealAbs[
         DualNumbers`Private`a$], (RealAbs[#]^(-1) #& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         RealSign[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         RealSign[
         DualNumbers`Private`a$], (Piecewise[{{0, # != 0}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         RiemannSiegelTheta[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         RiemannSiegelTheta[
         DualNumbers`Private`a$], (-(Log[Pi]/2) + (1/4) (
            PolyGamma[0, 1/4 - (I #)/2] + PolyGamma[0, 1/4 + (I #)/2])& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         RiemannSiegelZ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         RiemannSiegelZ[
         DualNumbers`Private`a$], (-I 4^(-1) 
          E^(I RiemannSiegelTheta[#]) ((2 Log[Pi] - PolyGamma[
             0, (1 - 2 I #)/4] - PolyGamma[0, (1 + 2 I #)/4]) Zeta[1/2 + I #] - 
           4 Derivative[1][Zeta][1/2 + I #])& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Round[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Round[DualNumbers`Private`a$], (Piecewise[{{0, 
             And[
              NotElement[Rational[-1, 2] + Re[#], Integers], 
              NotElement[Rational[-1, 2] + Im[#], Integers]]}}, 
           Indeterminate]& )[DualNumbers`Private`a$] DualNumbers`Private`b$], 
       HoldPattern[
         ScorerGiPrime[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ScorerGiPrime[
         DualNumbers`Private`a$], ((-1)/Pi + # ScorerGi[#]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         ScorerHiPrime[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         ScorerHiPrime[
         DualNumbers`Private`a$], (1/Pi + # ScorerHi[#]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Sec[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sec[
         DualNumbers`Private`a$], (Sec[#] Tan[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Sech[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sech[
         DualNumbers`Private`a$], (-Sech[#] Tanh[#]& )[DualNumbers`Private`a$]
           DualNumbers`Private`b$], HoldPattern[
         Sin[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sin[DualNumbers`Private`a$], (Cos[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Sinc[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sinc[
         DualNumbers`Private`a$], (-Sin[#] #^(-2) + Cos[#]/#& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Sinh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sinh[DualNumbers`Private`a$], (Cosh[#]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Sqrt[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Sqrt[
         DualNumbers`Private`a$], (Rational[1, 2] #^Rational[-1, 2]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         Tan[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Tan[DualNumbers`Private`a$], (Sec[#]^2& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Tanh[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Tanh[DualNumbers`Private`a$], (Sech[#]^2& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         TukeyWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         TukeyWindow[
         DualNumbers`Private`a$], (Piecewise[{{Rational[3, 2] Pi Cos[3 Pi #], 
             Inequality[
              Rational[1, 6], Less, #, Less, 
              Rational[1, 2]]}, {Rational[-3, 2] Pi Cos[3 Pi #], 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[-1, 6]]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         UnitBox[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         UnitBox[DualNumbers`Private`a$], (Piecewise[{{Indeterminate, 
             Or[# == Rational[1, 2], # == Rational[-1, 2]]}}, 0]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         UnitStep[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         UnitStep[
         DualNumbers`Private`a$], (Piecewise[{{Indeterminate, # == 0}}, 0]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], HoldPattern[
         UnitTriangle[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         UnitTriangle[
         DualNumbers`Private`a$], (
          Piecewise[{{Indeterminate, # (-1 + #^2) == 0}, {1, 
             Inequality[-1, Less, #, Less, 0]}, {-1, 
             Inequality[0, Less, #, Less, 1]}}, 0]& )[DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         WelchWindow[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         WelchWindow[
         DualNumbers`Private`a$], (
          Piecewise[{{0, # < Rational[-1, 2]}, {(-8) #, 
             Inequality[
              Rational[-1, 2], Less, #, Less, 
              Rational[1, 2]]}, {0, # > Rational[1, 2]}}, Indeterminate]& )[
          DualNumbers`Private`a$] DualNumbers`Private`b$], 
       HoldPattern[DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1$, 
            Blank[]]]^DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2$, 
            Blank[]]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a1$^
         DualNumbers`Private`a2$, (#^(-1 + #2) #2& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b1$ + (Log[#] #^#2& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b2$], HoldPattern[DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]^Pattern[DualNumbers`Private`c$, 
           Blank[]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a$^
         DualNumbers`Private`c$, (#^(-1 + #2) #2& )[
          DualNumbers`Private`a$, DualNumbers`Private`c$] 
         DualNumbers`Private`b$], HoldPattern[Pattern[DualNumbers`Private`c$, 
           Blank[]]^DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`c$^
         DualNumbers`Private`a$, (Log[#] #^#2& )[
          DualNumbers`Private`c$, DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Log[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1$, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Log[
         DualNumbers`Private`a1$, 
          DualNumbers`Private`a2$], (-Log[#]^(-2) Log[#2]/#& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b1$ + (Log[#]^(-1)/#2& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b2$], HoldPattern[
         Log[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[DualNumbers`Private`c$, 
           Blank[]]]] :> DualNumbers`Dual[
         Log[
         DualNumbers`Private`a$, DualNumbers`Private`c$], (-Log[#]^(-2) 
          Log[#2]/#& )[DualNumbers`Private`a$, DualNumbers`Private`c$] 
         DualNumbers`Private`b$], HoldPattern[
         Log[
          Pattern[DualNumbers`Private`c$, 
           Blank[]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Log[
         DualNumbers`Private`c$, DualNumbers`Private`a$], (Log[#]^(-1)/#2& )[
          DualNumbers`Private`c$, DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Mod[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1$, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Mod[
         DualNumbers`Private`a1$, 
          DualNumbers`Private`a2$], (1 - 
           Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate]& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b1$ + (-Floor[#/#2] + 
           Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate] #/#2& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b2$], HoldPattern[
         Mod[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[DualNumbers`Private`c$, 
           Blank[]]]] :> DualNumbers`Dual[
         Mod[
         DualNumbers`Private`a$, DualNumbers`Private`c$], (1 - 
          Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate]& )[
          DualNumbers`Private`a$, DualNumbers`Private`c$] 
         DualNumbers`Private`b$], HoldPattern[
         Mod[
          Pattern[DualNumbers`Private`c$, 
           Blank[]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Mod[
         DualNumbers`Private`c$, DualNumbers`Private`a$], (-Floor[#/#2] + 
          Piecewise[{{0, #/#2 > Floor[#/#2]}}, Indeterminate] #/#2& )[
          DualNumbers`Private`c$, DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Binomial[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1$, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Binomial[
         DualNumbers`Private`a1$, 
          DualNumbers`Private`a2$], (
           Binomial[#, #2] (PolyGamma[0, 1 + #] - PolyGamma[
            0, 1 + # - #2])& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b1$ + (
           Binomial[#, #2] (PolyGamma[0, 1 + # - #2] - PolyGamma[
            0, 1 + #2])& )[DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b2$], HoldPattern[
         Binomial[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[DualNumbers`Private`c$, 
           Blank[]]]] :> DualNumbers`Dual[
         Binomial[
         DualNumbers`Private`a$, DualNumbers`Private`c$], (
          Binomial[#, #2] (PolyGamma[0, 1 + #] - PolyGamma[0, 1 + # - #2])& )[
          DualNumbers`Private`a$, DualNumbers`Private`c$] 
         DualNumbers`Private`b$], HoldPattern[
         Binomial[
          Pattern[DualNumbers`Private`c$, 
           Blank[]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Binomial[
         DualNumbers`Private`c$, DualNumbers`Private`a$], (
          Binomial[#, #2] (PolyGamma[0, 1 + # - #2] - PolyGamma[
           0, 1 + #2])& )[DualNumbers`Private`c$, DualNumbers`Private`a$] 
         DualNumbers`Private`b$], HoldPattern[
         Gamma[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1$, 
            Blank[]]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Gamma[
         DualNumbers`Private`a1$, 
          DualNumbers`Private`a2$], (Gamma[#, #2] Log[#2] + 
           MeijerG[{{}, {1, 1}}, {{0, 0, #}, {}}, #2]& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b1$ + (-E^(-#2) #2^(-1 + #)& )[
           DualNumbers`Private`a1$, DualNumbers`Private`a2$] 
          DualNumbers`Private`b2$], HoldPattern[
         Gamma[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], 
          Pattern[DualNumbers`Private`c$, 
           Blank[]]]] :> DualNumbers`Dual[
         Gamma[
         DualNumbers`Private`a$, DualNumbers`Private`c$], (
          Gamma[#, #2] Log[#2] + 
          MeijerG[{{}, {1, 1}}, {{0, 0, #}, {}}, #2]& )[
          DualNumbers`Private`a$, DualNumbers`Private`c$] 
         DualNumbers`Private`b$], HoldPattern[
         Gamma[
          Pattern[DualNumbers`Private`c$, 
           Blank[]], 
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]]]] :> DualNumbers`Dual[
         Gamma[
         DualNumbers`Private`c$, DualNumbers`Private`a$], (-
          E^(-#2) #2^(-1 + #)& )[
          DualNumbers`Private`c$, DualNumbers`Private`a$] 
         DualNumbers`Private`b$], Abs[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         Abs[DualNumbers`Private`a], DualNumbers`Private`b 
         Sign[DualNumbers`Private`a]], Sign[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> Sign[DualNumbers`Private`a], Clip[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]], {
          Pattern[DualNumbers`Private`xmin, 
           Except[
            Blank[DualNumbers`Dual]]], 
          Pattern[DualNumbers`Private`xmax, 
           Except[
            Blank[DualNumbers`Dual]]]}] :> DualNumbers`Dual[
         Clip[
         DualNumbers`Private`a, {
          DualNumbers`Private`xmin, DualNumbers`Private`xmax}], 
         DualNumbers`Private`b 
         Piecewise[{{
            1, DualNumbers`Private`xmin <= DualNumbers`Private`a <= 
             DualNumbers`Private`xmax}}, 0]], Clip[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]], {
          Pattern[DualNumbers`Private`xmin, 
           Except[
            Blank[DualNumbers`Dual]]], 
          Pattern[DualNumbers`Private`xmax, 
           Except[
            Blank[DualNumbers`Dual]]]}, {
          Pattern[DualNumbers`Private`ymin, 
           Except[
            Blank[DualNumbers`Dual]]], 
          Pattern[DualNumbers`Private`ymax, 
           Except[
            Blank[DualNumbers`Dual]]]}] :> DualNumbers`Dual[
         Clip[
         DualNumbers`Private`a, {
          DualNumbers`Private`xmin, DualNumbers`Private`xmax}, {
          DualNumbers`Private`ymin, DualNumbers`Private`ymax}], 
         DualNumbers`Private`b 
         Piecewise[{{
            1, DualNumbers`Private`xmin <= DualNumbers`Private`a <= 
             DualNumbers`Private`xmax}}, 0]], Condition[
         Clip[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], {
           Pattern[DualNumbers`Private`xmin$, 
            Blank[]], 
           Pattern[DualNumbers`Private`xmax$, 
            Blank[]]}], 
         NoneTrue[{DualNumbers`Private`xmin$, DualNumbers`Private`xmax$}, 
          DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`stdargs$ = {DualNumbers`Private`a$, 
            DualNumbers`Private`std[DualNumbers`Private`xmin$], 
            DualNumbers`Private`std[DualNumbers`Private`xmax$]}}, 
         DualNumbers`Dual[
          (Clip[
           Part[#, 1], 
           Part[#, {2, 3}]]& )[DualNumbers`Private`stdargs$], 
          DualNumbers`Private`b$ (
            Piecewise[{{1, Part[#, 2] <= Part[#, 1] <= Part[#, 3]}}, 0]& )[
            DualNumbers`Private`stdargs$] + If[
            DualNumbers`DualQ[DualNumbers`Private`xmin$], 
            DualNumbers`Private`nonstd[DualNumbers`Private`xmin$] (
             Piecewise[{{1, Part[#, 1] < Part[#, 2]}}, 0]& )[
             DualNumbers`Private`stdargs$], 0] + If[
            DualNumbers`DualQ[DualNumbers`Private`xmax$], 
            DualNumbers`Private`nonstd[DualNumbers`Private`xmax$] (
             Piecewise[{{1, 
                And[Part[#, 1] > Part[#, 3], Part[#, 1] >= Part[#, 2]]}}, 
              0]& )[DualNumbers`Private`stdargs$], 0]]], Condition[
         Clip[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Pattern[DualNumbers`Private`b$, 
            Blank[]]], {
           Pattern[DualNumbers`Private`xmin$, 
            Blank[]], 
           Pattern[DualNumbers`Private`xmax$, 
            Blank[]]}, {
           Pattern[DualNumbers`Private`ymin$, 
            Blank[]], 
           Pattern[DualNumbers`Private`ymax$, 
            Blank[]]}], 
         NoneTrue[{
          DualNumbers`Private`xmin$, DualNumbers`Private`xmax$, 
           DualNumbers`Private`ymin$, DualNumbers`Private`ymax$}, 
          DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`stdargs$ = {DualNumbers`Private`a$, 
            DualNumbers`Private`std[DualNumbers`Private`xmin$], 
            DualNumbers`Private`std[DualNumbers`Private`xmax$], 
            DualNumbers`Private`std[DualNumbers`Private`ymin$], 
            DualNumbers`Private`std[DualNumbers`Private`ymax$]}}, 
         DualNumbers`Dual[
          (Clip[
           Part[#, 1], 
           Part[#, {2, 3}], 
           Part[#, {4, 5}]]& )[DualNumbers`Private`stdargs$], 
          DualNumbers`Private`b$ (
            Piecewise[{{1, Part[#, 2] <= Part[#, 1] <= Part[#, 3]}}, 0]& )[
            DualNumbers`Private`stdargs$] + If[
            DualNumbers`DualQ[DualNumbers`Private`ymin$], 
            DualNumbers`Private`nonstd[DualNumbers`Private`ymin$] (
             Piecewise[{{1, Part[#, 1] < Part[#, 2]}}, 0]& )[
             DualNumbers`Private`stdargs$], 0] + If[
            DualNumbers`DualQ[DualNumbers`Private`ymax$], 
            DualNumbers`Private`nonstd[DualNumbers`Private`ymax$] (
             Piecewise[{{1, 
                And[Part[#, 1] > Part[#, 3], Part[#, 1] >= Part[#, 2]]}}, 
              0]& )[DualNumbers`Private`stdargs$], 0]]], Norm[
         PatternTest[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a, 
             Blank[]], VectorQ], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`p, 
           Except[
            DirectedInfinity[1]]], 2]] :> DualNumbers`Dual[
         Norm[DualNumbers`Private`a, DualNumbers`Private`p], 
         Total[Abs[DualNumbers`Private`a]^DualNumbers`Private`p]^Subtract[
            Divide[1, DualNumbers`Private`p], 1] 
         Dot[DualNumbers`Private`b, 
           Abs[DualNumbers`Private`a]^Subtract[DualNumbers`Private`p, 1] 
           Sign[DualNumbers`Private`a]]], Condition[
         Norm[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a, 
             Except[
              PatternTest[
               Blank[], VectorQ]]], 
            Pattern[DualNumbers`Private`b, 
             Blank[]]], DualNumbers`DualArrayQ], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "norm"], 
           ArrayDepth[DualNumbers`Private`a]]; False] :> Undefined, Norm[
         PatternTest[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a, 
             Blank[]], VectorQ], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         DirectedInfinity[1]] :> 
       With[{DualNumbers`Private`absA = Abs[DualNumbers`Private`a]}, 
         With[{DualNumbers`Private`max = Max[DualNumbers`Private`absA]}, 
          Condition[
           
           With[{DualNumbers`Private`pos = 
             DualNumbers`Private`listPosition[DualNumbers`Private`absA, 
               PatternTest[
                Blank[], 
                EqualTo[DualNumbers`Private`max]]]}, 
            DualNumbers`Dual[DualNumbers`Private`max, 
             Mean[Sign[
                Extract[DualNumbers`Private`a, DualNumbers`Private`pos]] 
              Extract[DualNumbers`Private`b, DualNumbers`Private`pos]]]], 
           Head[DualNumbers`Private`max] =!= Max]]], Condition[
         Norm[
          PatternTest[
           DualNumbers`Dual[
            PatternTest[
             Pattern[DualNumbers`Private`a, 
              Blank[]], VectorQ], 
            Pattern[DualNumbers`Private`b, 
             Blank[]]], DualNumbers`DualArrayQ], 
          DirectedInfinity[1]], Message[
           MessageName[DualNumbers`Dual, "infnorm"]]; False] :> Undefined, 
       Norm[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualScalarQ], 
         BlankNullSequence[]] :> Abs[
         DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b]], Dot[
         PatternTest[
          Pattern[DualNumbers`Private`c, 
           Blank[]], ArrayQ], 
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> DualNumbers`Dual[
         Dot[DualNumbers`Private`c, DualNumbers`Private`a], 
         Dot[DualNumbers`Private`c, DualNumbers`Private`b]], Dot[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         PatternTest[
          Pattern[DualNumbers`Private`c, 
           Blank[]], ArrayQ]] :> DualNumbers`Dual[
         Dot[DualNumbers`Private`a, DualNumbers`Private`c], 
         Dot[DualNumbers`Private`b, DualNumbers`Private`c]], Dot[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a1, 
            Blank[]], 
           Pattern[DualNumbers`Private`b1, 
            Blank[]]], DualNumbers`DualArrayQ], 
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a2, 
            Blank[]], 
           Pattern[DualNumbers`Private`b2, 
            Blank[]]], DualNumbers`DualArrayQ]] :> DualNumbers`Dual[
         Dot[DualNumbers`Private`a1, DualNumbers`Private`a2], 
         Dot[DualNumbers`Private`a1, DualNumbers`Private`b2] + 
         Dot[DualNumbers`Private`b1, DualNumbers`Private`a2]], MatrixPower[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], SquareMatrixQ], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> Fold[Dot[
          If[#2 === 1, 
           Dot[DualNumbers`Private`d, #], #], #]& , DualNumbers`Private`d, 
         Rest[
          IntegerDigits[DualNumbers`Private`n, 2]]], MatrixPower[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], SquareMatrixQ], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Negative]] :> Inverse[
         MatrixPower[DualNumbers`Private`d, -DualNumbers`Private`n]], Inverse[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], SquareMatrixQ]] :> 
       With[{DualNumbers`Private`inv = Inverse[DualNumbers`Private`a]}, 
         Condition[
          DualNumbers`Dual[
          DualNumbers`Private`inv, -
           Dot[DualNumbers`Private`inv, DualNumbers`Private`b, 
             DualNumbers`Private`inv]], 
          MatrixQ[DualNumbers`Private`inv]]], LinearSolve[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], SquareMatrixQ], 
         Pattern[DualNumbers`Private`opts, 
          OptionsPattern[]]] :> 
       With[{DualNumbers`Private`ls = 
          LinearSolve[DualNumbers`Private`a, DualNumbers`Private`opts]}, 
         Condition[
          DualNumbers`DualLinearSolveFunction[
          DualNumbers`Private`ls, DualNumbers`Private`b], 
          Head[DualNumbers`Private`ls] === LinearSolveFunction]], LinearSolve[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], SquareMatrixQ], 
         Pattern[DualNumbers`Private`x, 
          Alternatives[
           PatternTest[
            Blank[], ArrayQ], 
           PatternTest[
            Blank[DualNumbers`Dual], DualNumbers`DualArrayQ]]], 
         Pattern[DualNumbers`Private`opts, 
          OptionsPattern[]]] :> 
       With[{DualNumbers`Private`ls = 
          LinearSolve[DualNumbers`Private`a, DualNumbers`Private`opts]}, 
         Condition[
          DualNumbers`DualLinearSolveFunction[
          DualNumbers`Private`ls, DualNumbers`Private`b][
          DualNumbers`Private`x], Head[DualNumbers`Private`ls] === 
          LinearSolveFunction]], HoldPattern[
         NumericQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NumericQ[DualNumbers`Private`a$], HoldPattern[
         NumberQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NumberQ[DualNumbers`Private`a$], HoldPattern[
         IntegerQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> IntegerQ[DualNumbers`Private`a$], HoldPattern[
         Positive[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Positive[DualNumbers`Private`a$], HoldPattern[
         Negative[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> Negative[DualNumbers`Private`a$], HoldPattern[
         NonPositive[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NonPositive[DualNumbers`Private`a$], HoldPattern[
         NonNegative[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> NonNegative[DualNumbers`Private`a$], HoldPattern[
         EvenQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> EvenQ[DualNumbers`Private`a$], HoldPattern[
         OddQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> OddQ[DualNumbers`Private`a$], HoldPattern[
         PrimeQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> PrimeQ[DualNumbers`Private`a$], HoldPattern[
         AlgebraicIntegerQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> AlgebraicIntegerQ[DualNumbers`Private`a$], 
       HoldPattern[
         PossibleZeroQ[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a$, 
            Blank[]], 
           Blank[]]]] :> PossibleZeroQ[DualNumbers`Private`a$], HoldPattern[
         Total[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Total[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Total[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Total[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Total]; False] :> 
       Undefined, HoldPattern[
         Mean[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Mean[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Mean[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Mean[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Mean]; False] :> 
       Undefined, HoldPattern[
         Transpose[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Transpose[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Transpose[DualNumbers`Private`b$, DualNumbers`Private`rest$]], 
       Condition[
         HoldPattern[
          Transpose[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Transpose]; False] :> 
       Undefined, HoldPattern[
         Flatten[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Flatten[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Flatten[DualNumbers`Private`b$, DualNumbers`Private`rest$]], 
       Condition[
         HoldPattern[
          Flatten[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Flatten]; False] :> 
       Undefined, HoldPattern[
         Part[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Part[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Part[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Part[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Part]; False] :> 
       Undefined, HoldPattern[
         Extract[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Extract[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Extract[DualNumbers`Private`b$, DualNumbers`Private`rest$]], 
       Condition[
         HoldPattern[
          Extract[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Extract]; False] :> 
       Undefined, HoldPattern[
         Take[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Take[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Take[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Take[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Take]; False] :> 
       Undefined, HoldPattern[
         Drop[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Drop[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Drop[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Drop[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Drop]; False] :> 
       Undefined, HoldPattern[
         First[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         First[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         First[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          First[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], First]; False] :> 
       Undefined, HoldPattern[
         Last[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Last[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Last[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Last[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Last]; False] :> 
       Undefined, HoldPattern[
         Rest[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Rest[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Rest[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Rest[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Rest]; False] :> 
       Undefined, HoldPattern[
         Most[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> DualNumbers`Dual[
         Most[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
         Most[DualNumbers`Private`b$, DualNumbers`Private`rest$]], Condition[
         HoldPattern[
          Most[
           DualNumbers`Dual[
            Blank[], 
            Blank[]], 
           BlankNullSequence[]]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Most]; False] :> 
       Undefined, Join[
         PatternTest[
          Pattern[DualNumbers`Private`arrays, 
           BlankSequence[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`n, 
          Blank[Integer]]] :> 
       With[{DualNumbers`Private`a = 
          DualNumbers`Standard[{DualNumbers`Private`arrays}], 
          DualNumbers`Private`b = 
          DualNumbers`NonStandard[{DualNumbers`Private`arrays}]}, 
         With[{DualNumbers`Private`try = DualNumbers`Dual[
             Join[
              Apply[Sequence, DualNumbers`Private`a], DualNumbers`Private`n], 
             Join[
              Apply[Sequence, DualNumbers`Private`b], 
              DualNumbers`Private`n]]}, 
          If[
           DualNumbers`DualArrayQ[DualNumbers`Private`try], 
           DualNumbers`Private`try, Message[
             MessageName[DualNumbers`Dual, "join"]]; 
           Inactive[Join][DualNumbers`Private`arrays]]]], Join[
         PatternTest[
          Pattern[DualNumbers`Private`arrays, 
           BlankSequence[DualNumbers`Dual]], DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`a = 
          DualNumbers`Standard[{DualNumbers`Private`arrays}], 
          DualNumbers`Private`b = 
          DualNumbers`NonStandard[{DualNumbers`Private`arrays}]}, 
         With[{DualNumbers`Private`try = DualNumbers`Dual[
             Join[
              Apply[Sequence, DualNumbers`Private`a]], 
             Join[
              Apply[Sequence, DualNumbers`Private`b]]]}, 
          If[
           DualNumbers`DualArrayQ[DualNumbers`Private`try], 
           DualNumbers`Private`try, Message[
             MessageName[DualNumbers`Dual, "join"]]; 
           Inactive[Join][DualNumbers`Private`arrays]]]], Condition[
         Join[
          BlankNullSequence[], 
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Join]; False] :> 
       Undefined, Select[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`selFun, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`n, 
           Blank[]], 
          DirectedInfinity[1]]] :> 
       With[{DualNumbers`Private`pos = 
          DualNumbers`Private`listPosition[DualNumbers`Private`a, 
            PatternTest[
             Blank[], DualNumbers`Private`selFun]]}, 
         DualNumbers`Dual[
          Extract[DualNumbers`Private`a, DualNumbers`Private`pos], 
          Extract[DualNumbers`Private`b, DualNumbers`Private`pos]]], Condition[
         Select[
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Select]; False] :> 
       Undefined, Position[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Blank[]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Position[DualNumbers`Private`a, DualNumbers`Private`rest], Condition[
         Position[
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Position]; False] :> 
       Undefined, Condition[
         Pick[
          PatternTest[
           Pattern[DualNumbers`Private`list, 
            Blank[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`sel, 
           Blank[]], 
          Optional[
           Pattern[DualNumbers`Private`patt, 
            Blank[]], True]], Length[DualNumbers`Private`list] === 
         Length[DualNumbers`Private`sel]] :> 
       With[{DualNumbers`Private`pos = 
          DualNumbers`Private`listPosition[
           DualNumbers`Private`sel, DualNumbers`Private`patt]}, 
         Extract[DualNumbers`Private`list, DualNumbers`Private`pos]], 
       Condition[
         Pick[
          Pattern[DualNumbers`Private`list, 
           Blank[]], 
          PatternTest[
           Pattern[DualNumbers`Private`sel, 
            Blank[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
          Optional[
           Pattern[DualNumbers`Private`patt, 
            Blank[]], True]], Length[DualNumbers`Private`list] === 
         Length[DualNumbers`Private`sel]] :> 
       With[{DualNumbers`Private`pos = 
          DualNumbers`Private`listPosition[
           DualNumbers`Private`sel, DualNumbers`Private`patt]}, 
         Extract[DualNumbers`Private`list, DualNumbers`Private`pos]], 
       Condition[
         Pick[
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], DualNumbers`Dual]; 
         False] :> Undefined, Condition[
         Pick[
          Blank[], 
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], DualNumbers`Dual]; 
         False] :> Undefined, Map[
         Pattern[DualNumbers`Private`fun$, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`dualArr$, 
           Blank[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> DualNumbers`PackDualArray[
         Map[DualNumbers`Private`fun$, 
          DualNumbers`UnpackDualArray[DualNumbers`Private`dualArr$], 
          DualNumbers`Private`rest$]], Condition[
         Map[
          Blank[], 
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Map]; False] :> 
       Undefined, MapIndexed[
         Pattern[DualNumbers`Private`fun$, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`dualArr$, 
           Blank[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> DualNumbers`PackDualArray[
         MapIndexed[DualNumbers`Private`fun$, 
          DualNumbers`UnpackDualArray[DualNumbers`Private`dualArr$], 
          DualNumbers`Private`rest$]], Condition[
         MapIndexed[
          Blank[], 
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], MapIndexed]; False] :> 
       Undefined, Apply[
         Pattern[DualNumbers`Private`fun$, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`dualArr$, 
           Blank[DualNumbers`Dual]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> DualNumbers`PackDualArray[
         Apply[DualNumbers`Private`fun$, 
          DualNumbers`UnpackDualArray[DualNumbers`Private`dualArr$], 
          DualNumbers`Private`rest$]], Condition[
         Apply[
          Blank[], 
          Blank[DualNumbers`Dual], 
          BlankNullSequence[]], Message[
           MessageName[DualNumbers`Dual, "arrayOp"], Apply]; False] :> 
       Undefined, HoldPattern[
         MatrixQ[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       MatrixQ[DualNumbers`Private`a$, DualNumbers`Private`rest$], HoldPattern[
         VectorQ[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       VectorQ[DualNumbers`Private`a$, DualNumbers`Private`rest$], HoldPattern[
         SquareMatrixQ[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       SquareMatrixQ[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
       HoldPattern[
         Dimensions[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       Dimensions[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
       HoldPattern[
         Length[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       Length[DualNumbers`Private`a$, DualNumbers`Private`rest$], HoldPattern[
         ArrayDepth[
          PatternTest[
           DualNumbers`Dual[
            Pattern[DualNumbers`Private`a$, 
             Blank[]], 
            Pattern[DualNumbers`Private`b$, 
             Blank[]]], DualNumbers`DualArrayQ], 
          Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]]] :> 
       ArrayDepth[DualNumbers`Private`a$, DualNumbers`Private`rest$], 
       HoldPattern[
         MatrixQ[
          DualNumbers`Dual[
           Blank[], 
           Blank[]], 
          BlankNullSequence[]]] :> False, HoldPattern[
         VectorQ[
          DualNumbers`Dual[
           Blank[], 
           Blank[]], 
          BlankNullSequence[]]] :> False, HoldPattern[
         SquareMatrixQ[
          DualNumbers`Dual[
           Blank[], 
           Blank[]], 
          BlankNullSequence[]]] :> False, HoldPattern[
         Length[
          DualNumbers`Dual[
           Blank[], 
           Blank[]]]] :> 0, HoldPattern[
         Dimensions[
          DualNumbers`Dual[
           Blank[], 
           Blank[]]]] :> {}, HoldPattern[
         ArrayDepth[
          DualNumbers`Dual[
           Blank[], 
           Blank[]]]] :> 0, HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] == Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] == Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[Equal, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]], 
       HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] != Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] != Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[Unequal, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]], 
       HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] > Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] > Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[Greater, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]], 
       HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] >= Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] >= Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[GreaterEqual, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]], 
       HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] < Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] < Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[Less, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]], 
       HoldPattern[Pattern[DualNumbers`Private`first$, 
           BlankNullSequence[]] <= Pattern[DualNumbers`Private`d$, 
           DualNumbers`Dual[
            PatternTest[
             Blank[], NumericQ], 
            Blank[]]] <= Pattern[DualNumbers`Private`rest$, 
           BlankNullSequence[]]] :> 
       With[{DualNumbers`Private`test = Apply[LessEqual, 
            
            DualNumbers`Private`std[{
             DualNumbers`Private`first$, DualNumbers`Private`d$, 
              DualNumbers`Private`rest$}]]}, 
         Condition[DualNumbers`Private`test, 
          BooleanQ[DualNumbers`Private`test]]]}], "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`Dual, {
      DualNumbers`Dual[] :> DualNumbers`Dual[0, 1], DualNumbers`Dual[
         Pattern[DualNumbers`Private`a, 
          Blank[]]] :> DualNumbers`ToDual[DualNumbers`Private`a, 0], Condition[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Alternatives[
            Blank[List], 
            Blank[SparseArray]]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]], 
         And[
          Not[
           DualNumbers`DualArrayQ[
            Unevaluated[
             DualNumbers`Dual[
             DualNumbers`Private`a, DualNumbers`Private`b]]]], Message[
            MessageName[DualNumbers`Dual, "array"], 
            Dimensions[DualNumbers`Private`a], 
            Dimensions[DualNumbers`Private`b], 
            Short[
             Inactive[DualNumbers`Dual][
             DualNumbers`Private`a, DualNumbers`Private`b]]]; False]] :> 
       Undefined, Condition[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Except[
            Alternatives[
             Blank[List], 
             Blank[SparseArray]]]], 
          Pattern[DualNumbers`Private`b, 
           Alternatives[
            Blank[List], 
            Blank[SparseArray]]]], Message[
           MessageName[DualNumbers`Dual, "array"], 
           Dimensions[DualNumbers`Private`a], 
           Dimensions[DualNumbers`Private`b], 
           Short[
            Inactive[DualNumbers`Dual][
            DualNumbers`Private`a, DualNumbers`Private`b]]]; False] :> 
       Undefined, DualNumbers`Dual[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a1, 
           Blank[]], 
          Pattern[DualNumbers`Private`b1, 
           Blank[]]], 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a2, 
           Blank[]], 
          Blank[]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a1, DualNumbers`Private`a2 + 
         DualNumbers`Private`b1], DualNumbers`Dual[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]], 
         Pattern[DualNumbers`Private`c, 
          Blank[]]] :> 
       DualNumbers`Dual[
        DualNumbers`Private`a, DualNumbers`Private`b + DualNumbers`Private`c],
        DualNumbers`Dual[
         Pattern[DualNumbers`Private`a, 
          Blank[]], 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`b, 
           Blank[]], 
          Blank[]]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`Dual"], False]]], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"f9f7213d-dd0e-41ce-b202-0dc10ee92088"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToDual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"const\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) constructs a dual \
scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`d_Dual", ",", "___"}], "]"}],
                     ":=", "DualNumbers`Private`d"}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a_SparseArray", "?", 
                    "DualFreeArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     ",", "DualNumbers`Private`const"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`const", ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "/;", 
                    RowBox[{"!", 
                    RowBox[{
                    "DualFreeArrayQ", "[", "DualNumbers`Private`a", "]"}]}]}],
                     ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`const"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    RowBox[{
                    "DualNumbers`Private`arr_SparseArray", "?", 
                    "DualFreeArrayQ"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`arr", "]"}], ",", 
                    "DualNumbers`Private`a"}], "]"}], ",", 
                    "DualNumbers`Private`arr"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    RowBox[{
                    "DualNumbers`Private`arr_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`arr", "]"}]}], 
                    "]"}], ",", "DualNumbers`Private`arr"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`const"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ToDual", "[", "DualNumbers`Private`args__", "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ToDual", "::", "cons"}], "MessageName"], ",", 
                    RowBox[{"Short", "/@", 
                    RowBox[{"{", "DualNumbers`Private`args", "}"}]}]}], "]"}],
                     ";", "False"}], ")"}]}], ":=", "Undefined"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`ToDual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToDual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"const\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) constructs a dual \
scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ToDual\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\
\",  StyleBox[\"const\", \"TI\"]}], \"]\"}]\) constructs a dual scalar or \
array with constant nonstandard part. The default value for \
\!\(\*StyleBox[\"const\", \"TI\"]\) is 0.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`ToDual, {DualNumbers`ToDual[
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]], 
         BlankNullSequence[]] :> DualNumbers`Private`d, DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`a], DualNumbers`Private`const]], 
       DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         ConstantArray[DualNumbers`Private`const, 
          Dimensions[DualNumbers`Private`a]]], DualNumbers`ToDual[
         Condition[
          PatternTest[
           Pattern[DualNumbers`Private`a, 
            Blank[]], ArrayQ], 
          Not[
           DualNumbers`DualFreeArrayQ[DualNumbers`Private`a]]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> DualNumbers`PackDualArray[
         Map[
         DualNumbers`ToDual[#, DualNumbers`Private`const]& , 
          DualNumbers`Private`a, {
           ArrayDepth[DualNumbers`Private`a]}]], DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`arr], DualNumbers`Private`a], 
         DualNumbers`Private`arr], DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> DualNumbers`Dual[
         ConstantArray[DualNumbers`Private`a, 
          Dimensions[DualNumbers`Private`arr]], DualNumbers`Private`arr], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`const], 
       Condition[
         DualNumbers`ToDual[
          Pattern[DualNumbers`Private`args, 
           BlankSequence[]]], Message[
           MessageName[DualNumbers`ToDual, "cons"], 
           Map[Short, {DualNumbers`Private`args}]]; False] :> Undefined}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`ToDual"], False]]], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"326a8fe1-492b-470a-926e-f538aa26cf5b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\\nDoes not evaluate for symbolic arguments. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", "_"}], "]"}], 
                    "]"}], ":=", "DualNumbers`Private`a"}]},
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    RowBox[{"DualNumbers`Private`x_", "?", "NumericQ"}], 
                    "]"}], ":=", "DualNumbers`Private`x"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Standard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\\nDoes not evaluate for symbolic arguments. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Standard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the standard part of a dual number \!\(\*StyleBox[\"d\", \
\"TI\"]\) (i.e., the first argument).\nDoes not evaluate for symbolic \
arguments. Threads over lists.", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`Standard, {DualNumbers`Standard[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Blank[]]] :> DualNumbers`Private`a, DualNumbers`Standard[
         PatternTest[
          Pattern[DualNumbers`Private`x, 
           Blank[]], NumericQ]] :> DualNumbers`Private`x}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable}, "FullName" -> 
    "DualNumbers`Standard"], False]]], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"4ff0af4d-cdfd-4670-9eb6-e66e9cf205ce"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
nonstandard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the second argument).\\nDoes not evaluate for symbolic arguments. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "DualNumbers`Private`b_"}], "]"}], 
                    "]"}], ":=", "DualNumbers`Private`b"}]},
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"_", "?", "NumericQ"}], "]"}], ":=", "0"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`NonStandard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
nonstandard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the second argument).\\nDoes not evaluate for symbolic arguments. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NonStandard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the nonstandard part of a dual number \
\!\(\*StyleBox[\"d\", \"TI\"]\) (i.e., the second argument).\nDoes not \
evaluate for symbolic arguments. Threads over lists.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`NonStandard, {DualNumbers`NonStandard[
         DualNumbers`Dual[
          Blank[], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Private`b, DualNumbers`NonStandard[
         PatternTest[
          Blank[], NumericQ]] :> 0}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Listable}, "FullName" -> "DualNumbers`NonStandard"], 
   False]]], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"805361dc-a0fd-4f8d-bf4d-d5d4ffde6699"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "StandardAll", "[", "DualNumbers`Private`expr_", "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", "_"}], "]"}], 
                    "\[RuleDelayed]", "DualNumbers`Private`a"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardAll\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StandardAll\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) replaces all dual numbers in \!\(\*StyleBox[\"expr\", \
\"TI\"]\) with their standard parts.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardAll, {DualNumbers`StandardAll[
         Pattern[DualNumbers`Private`expr, 
          Blank[]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Blank[]] :> DualNumbers`Private`a]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`StandardAll"], False]]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"28b86a7f-57dc-45e7-b603-3341ec4c9c4d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dual arrays", \
"Subsubsection",ExpressionUUID->"45f2c2cf-8457-4f1e-aa43-f5e4fcfbe25a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "PackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}]}], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"e0254399-fb4a-4ce7-aa39-18c29b5b34fa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PackDualArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) converts an \
array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array_", "?", "UnpackedDualArrayQ"}],
                     "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`depth", "=", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`array", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    ",", 
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"DualNumbers`Private`array_", "?", "ArrayQ"}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "Standard", "[", "DualNumbers`Private`array", "]"}], 
                    "]"}], ",", 
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "NonStandard", "[", "DualNumbers`Private`array", "]"}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`a", "]"}], ",", 
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`b", "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "PackDualArray", "[", "DualNumbers`Private`other_", "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"PackDualArray", "::", "arrayQ"}], "MessageName"],
                     ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`PackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PackDualArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) converts an \
array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"PackDualArray\", \"[\", RowBox[{StyleBox[\"array\", \"TI\
\"]}], \"]\"}]\) converts an array of numbers (possibly duals) to the form \
Dual[\!\(\*StyleBox[\"std\", \"TI\"]\), \!\(\*StyleBox[\"nonstd\", \
\"TI\"]\)].", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`PackDualArray, {DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], DualNumbers`UnpackedDualArrayQ]] :> 
       With[{DualNumbers`Private`depth = 
          ArrayDepth[DualNumbers`Private`array]}, 
         DualNumbers`Dual[
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 1]], 
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 2]]]], 
       DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], ArrayQ]] :> DualNumbers`Dual[
         Developer`ToPackedArray[
          DualNumbers`Standard[DualNumbers`Private`array]], 
         Developer`ToPackedArray[
          DualNumbers`NonStandard[DualNumbers`Private`array]]], 
       DualNumbers`PackDualArray[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         Developer`ToPackedArray[DualNumbers`Private`a], 
         Developer`ToPackedArray[DualNumbers`Private`b]], 
       DualNumbers`PackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`PackDualArray, "arrayQ"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`PackDualArray"], False]]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"81c98147-4015-45df-9d1c-066389efebb8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`packingMessagesEnabledQ", "[", "]"}],
                     ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "}"}], ",", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"UnpackDualArray\", \"[\", \
RowBox[{StyleBox[\"dualArray\", \"TI\"]}], \"]\"}]\) reverses to operation of \
PackDualArray and creates an array of dual scalars.", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`UnpackDualArray"], False]]], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"e2c51cec-dcb3-452a-b757-2c31ad2a5eaf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing for data type", \
"Subsubsection",ExpressionUUID->"7bb15119-6233-4e43-b9de-de64427c2cf1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualScalarQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualArrayQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFreeArrayQ"}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"7b7ceb43-1b98-499d-94b8-8cd08dc5d15a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", 
                    RowBox[{"DualNumbers`Private`expr", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    "DualScalarQ", "[", "DualNumbers`Private`expr", "]"}], "||", 
                    RowBox[{
                    "DualArrayQ", "[", "DualNumbers`Private`expr", "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a dual number.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualQ, {DualNumbers`DualQ[
         Pattern[DualNumbers`Private`expr, 
          DualNumbers`Dual[
           Blank[], 
           Blank[]]]] :> Or[
         DualNumbers`DualScalarQ[DualNumbers`Private`expr], 
         DualNumbers`DualArrayQ[DualNumbers`Private`expr]], DualNumbers`DualQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualQ"], False]]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"8ae3971f-24d8-4b5a-92e2-0c5efaeb8ad6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a head different from \
Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_Dual", "]"}], ":=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_", "]"}], ":=", "True"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a head different from \
Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StandardQ\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) has a head \
different from Dual.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardQ, {DualNumbers`StandardQ[
         Blank[DualNumbers`Dual]] :> False, DualNumbers`StandardQ[
         Blank[]] :> True}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`StandardQ"], 
   False]]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"af6b2eca-8a6f-44df-84ff-57a9bcdbfda3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number but not a \
dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], "]"}], "]"}], ":=",
                     "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualScalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number but not a \
dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a dual number but \
not a dual array.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualScalarQ, {DualNumbers`DualScalarQ[
         DualNumbers`Dual[
          Except[
           PatternTest[
            Blank[], ArrayQ]], 
          Except[
           PatternTest[
            Blank[], ArrayQ]]]] :> True, DualNumbers`DualScalarQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualScalarQ"], 
   False]]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"0b5935ca-b42d-4856-a565-edd5a230af26"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid packed array of \
dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     "===", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`b", "]"}]}]}], ":=",
                     "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid packed array of \
dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
packed array of dual numbers.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualArrayQ, {Condition[
         DualNumbers`DualArrayQ[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a, 
             Blank[]], DualNumbers`DualFreeArrayQ], 
           PatternTest[
            Pattern[DualNumbers`Private`b, 
             Blank[]], DualNumbers`DualFreeArrayQ]]], 
         Dimensions[DualNumbers`Private`a] === 
         Dimensions[DualNumbers`Private`b]] :> True, DualNumbers`DualArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualArrayQ"], 
   False]]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"11b2c5e1-6552-4d7a-90d3-5ccae1b74489"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`packingMessagesEnabledQ", "[", "]"}],
                     ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], ",", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"UnpackDualArray\", \"[\", \
RowBox[{StyleBox[\"dualArray\", \"TI\"]}], \"]\"}]\) reverses to operation of \
PackDualArray and creates an array of dual scalars.", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`UnpackDualArray"], False]]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"a8c57cc9-cff5-4e52-99d1-20f9bdaf1e26"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFreeArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an ordinary array that has \
no dual numbers at the deepest level.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "PackedArrayQ"}], 
                    "]"}], ":=", "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", "_Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFreeArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFreeArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an ordinary array that has \
no dual numbers at the deepest level.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualFreeArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\
\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an ordinary \
array that has no dual numbers at the deepest level.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFreeArrayQ, {DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], Developer`PackedArrayQ]] :> True, 
       DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], ArrayQ]] :> FreeQ[DualNumbers`Private`a, 
         Blank[DualNumbers`Dual], {
          ArrayDepth[DualNumbers`Private`a]}, Heads -> False], 
       DualNumbers`DualFreeArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualFreeArrayQ"], 
   False]]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"b615b539-632c-4d6b-84af-aaaf539d9f0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities for working with dual numbers", \
"Subsubsection",ExpressionUUID->"f23b65fe-1114-4efe-bbe7-8816fce4afba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualApply"}], "\[IndentingNewLine]", 
 RowBox[{"?", "AddDualHandling"}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"e9a353da-1190-45c1-941a-8ffab2ded58e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\
\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\",  RowBox[{\\\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\
\"]\\\"}]\\) returns Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\
\"]\\)], \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\
\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\",  RowBox[{\\\
\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"Dual\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is the operator \
form of DualApply.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`funa_", ",", 
                    "DualNumbers`Private`funb_"}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`funa", "[", "DualNumbers`Private`a", 
                    "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`funb", "[", "DualNumbers`Private`b", 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`a", 
                    "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`b", 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll_", "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"DualNumbers`Private`funAll", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "@@", "DualNumbers`Private`try"}], "/;", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`try", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "]"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "resultlength"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`funAll", "]"}]}], 
                    "]"}], ";", "False"}], ")"}]}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" SubValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"SubValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "SubValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "DualApply", "[", "DualNumbers`Private`fun_", "]"}], "[", 
                    "DualNumbers`Private`d_Dual", "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    "DualNumbers`Private`fun", ",", "DualNumbers`Private`d"}],
                     "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualApply\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\
\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\",  RowBox[{\\\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\
\"]\\\"}]\\) returns Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\
\"]\\)], \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\
\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\",  RowBox[{\\\
\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"Dual\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is the operator \
form of DualApply.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualApply\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \"TI\"]], \"TI\"], \
\",\",  StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \"TI\"]}], \"}\
\"}], \",\",  RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \
\",\",  StyleBox[\"b\", \"TI\"]}], \"]\"}]}], \"]\"}]\) returns \
Dual[\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \"TI\"]], \
\"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \
\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \
\"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\!\(\*RowBox[{\"DualApply\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]}], \"}\"}], \",\",  RowBox[{\"Dual\", \"[\
\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  StyleBox[\"b\", \"TI\"]}], \
\"]\"}]}], \"]\"}]\) returns Dual[\!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)][[1]], \!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)][[2]]]. \!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\) should return a List of length 2.\n\!\(\
\*RowBox[{\"DualApply\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\",  \
RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  \
StyleBox[\"b\", \"TI\"]}], \"]\"}]}], \"]\"}]\) returns \
Dual[\!\(\*StyleBox[\"f\", \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \
\!\(\*StyleBox[\"f\", \"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\
\!\(\*RowBox[{\"DualApply\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"]}], \
\"]\"}]\) is the operator form of DualApply.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualApply, {DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funa, 
           Blank[]], 
          Pattern[DualNumbers`Private`funb, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`funa[DualNumbers`Private`a], 
         DualNumbers`Private`funb[DualNumbers`Private`b]], 
       DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Except[
           Blank[List]]], 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`fun[DualNumbers`Private`a], 
         DualNumbers`Private`fun[DualNumbers`Private`b]], 
       DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funAll, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> 
       With[{DualNumbers`Private`try = 
          DualNumbers`Private`funAll[
           DualNumbers`Private`a, DualNumbers`Private`b]}, 
         Condition[
          Apply[DualNumbers`Dual, DualNumbers`Private`try], 
          Replace[
           MatchQ[DualNumbers`Private`try, {
             Blank[], 
             Blank[]}], False :> (Message[
              MessageName[DualNumbers`DualApply, "resultlength"], 
              Short[DualNumbers`Private`funAll]]; False)]]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, DualNumbers`DualApply, {DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Blank[]]][
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]]] :> 
       DualNumbers`DualApply[
        DualNumbers`Private`fun, DualNumbers`Private`d]}], "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualApply"], 
   False]]], "Output",
 CellLabel->"Out[93]=",ExpressionUUID->"af0f3dac-84f5-4f59-8cd6-57185b57fcfe"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\
\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
derivatives for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to use with Dual \
numbers when called with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with $n \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\
\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \
\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["DualNumbers`Private`f", 
                    TagBox[
                    RowBox[{"(", "##1", ")"}],
                    Derivative],
                    MultilineFunction->None], "&"}], ",", 
                    RowBox[{
                    "IdentityMatrix", "[", "DualNumbers`Private`n", "]"}], 
                    ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"DualNumbers`Private`nList", ":", 
                    RowBox[{"{", 
                    RowBox[{"__Integer", "?", "Positive"}], "}"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", "#1"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`nList"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{
                    "DualNumbers`Private`f_", ",", 
                    "DualNumbers`Private`derivatives_List"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`n", "=", 
                    RowBox[{
                    "Length", "[", "DualNumbers`Private`derivatives", "]"}]}],
                     "}"}], ",", 
                    RowBox[{"Dual", "/:", 
                    RowBox[{"DualNumbers`Private`f", "[", 
                    RowBox[{
                    "DualNumbers`Private`first___", ",", 
                    "DualNumbers`Private`d_Dual", ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`args", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first", ",", "DualNumbers`Private`d",
                     ",", "DualNumbers`Private`rest"}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`dualPos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{
                    "DualNumbers`Private`args", ",", 
                    "DualNumbers`Private`dualPatt"}], "]"}], "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`inputs", "=", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`args", "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`dlist", "=", 
                    RowBox[{
                    "DualNumbers`Private`derivatives", "\[LeftDoubleBracket]",
                     "DualNumbers`Private`dualPos", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`f", "@@", 
                    "DualNumbers`Private`inputs"}], ",", 
                    RowBox[{
                    RowBox[{"Through", "[", 
                    RowBox[{"DualNumbers`Private`dlist", "[", 
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`inputs"}], 
                    "]"}], "]"}], ".", 
                    RowBox[{
                    "DualNumbers`Private`args", "\[LeftDoubleBracket]", 
                    RowBox[{"DualNumbers`Private`dualPos", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "ListQ", "[", "DualNumbers`Private`dlist", "]"}]}]}], 
                    "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", "DualNumbers`Private`args", "]"}], 
                    "===", "DualNumbers`Private`n"}]}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`AddDualHandling\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\
\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
derivatives for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to use with Dual \
numbers when called with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with $n \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\
\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \
\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\",  RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"f\", \
StyleBox[\"1\", \"TR\"]], \"TI\"], \",\",  StyleBox[\"\[Ellipsis]\", \"TR\"], \
\",\",  StyleBox[SubscriptBox[\"f\", StyleBox[\"n\", \"TI\"]], \"TI\"]}], \"}\
\"}]}], \"]\"}]\) specifies derivatives for \!\(\*StyleBox[\"f\", \"TI\"]\) \
to use with Dual numbers when called with \!\(\*StyleBox[\"n\", \"TI\"]\) \
arguments.\n\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\",  StyleBox[\"n\", \"TI\"]}], \"]\"}]\) uses Derivative to \
infer derivatives of \!\(\*StyleBox[\"f\", \"TI\"]\) for when \!\(\*StyleBox[\
\"f\", \"TI\"]\) is called with $n arguments.\n\
\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\",  RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \
\"TR\"]], \"TI\"], \",\",  StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \
\"TR\"]], \"TI\"], \",\",  StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \
\"]\"}]\) uses Derivative to infer derivatives of \!\(\*StyleBox[\"f\", \
\"TI\"]\) for when \!\(\*StyleBox[\"f\", \"TI\"]\) is called with \
\!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \"TR\"]], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \"TR\"]], \"TI\"]\), \
\[Ellipsis] arguments.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`AddDualHandling, {DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> 
       DualNumbers`AddDualHandling[DualNumbers`Private`f, 
         Apply[Derivative[
           SlotSequence[1]][DualNumbers`Private`f]& , 
          IdentityMatrix[DualNumbers`Private`n], {1}]], 
       DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`nList, {
           PatternTest[
            BlankSequence[Integer], Positive]}]] :> 
       Scan[DualNumbers`AddDualHandling[DualNumbers`Private`f, #]& , 
         DualNumbers`Private`nList], DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`derivatives, 
          Blank[List]]] :> 
       With[{DualNumbers`Private`n = Length[DualNumbers`Private`derivatives]}, 
         TagSetDelayed[DualNumbers`Dual, 
          DualNumbers`Private`f[
           Pattern[DualNumbers`Private`first, 
            BlankNullSequence[]], 
           Pattern[DualNumbers`Private`d, 
            Blank[DualNumbers`Dual]], 
           Pattern[DualNumbers`Private`rest, 
            BlankNullSequence[]]], 
          
          With[{DualNumbers`Private`args = {
             DualNumbers`Private`first, DualNumbers`Private`d, 
              DualNumbers`Private`rest}}, 
           Condition[
            With[{DualNumbers`Private`dualPos = Flatten[
                DualNumbers`Private`listPosition[
                DualNumbers`Private`args, DualNumbers`Private`dualPatt]], 
              DualNumbers`Private`inputs = 
              DualNumbers`Private`std[DualNumbers`Private`args]}, 
             
             With[{DualNumbers`Private`dlist = 
               Part[DualNumbers`Private`derivatives, 
                 DualNumbers`Private`dualPos]}, 
              Condition[
               DualNumbers`Dual[
                Apply[DualNumbers`Private`f, DualNumbers`Private`inputs], 
                Dot[
                 Through[
                  DualNumbers`Private`dlist[
                   Apply[Sequence, DualNumbers`Private`inputs]]], 
                 Part[
                 DualNumbers`Private`args, DualNumbers`Private`dualPos, 2]]], 
               ListQ[DualNumbers`Private`dlist]]]], 
            Length[DualNumbers`Private`args] === DualNumbers`Private`n]]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`AddDualHandling"], False]]], "Output",
 CellLabel->"Out[94]=",ExpressionUUID->"bef5d2a4-f669-4e3b-a1a6-ebe6896764b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic manipulation of dual numbers", \
"Subsubsection",ExpressionUUID->"643a1f25-ba12-47c8-bcbd-35666c34f86b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "\[Epsilon]"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualExpand"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFactor"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualSimplify"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"7ea40ed3-fe9a-4c7c-8a93-08056a9f06a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[Epsilon] is an inactive form of Dual[0, 1] that \
can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`\[Epsilon]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[Epsilon] is an inactive form of Dual[0, 1] that \
can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\[Epsilon] is an inactive form of Dual[0, 1] that can be used for \
algebraic manipulation.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`\[Epsilon]"], False]]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"f9388418-373e-49a0-b7fd-eddc4689a032"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each dual number \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) * \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualExpand", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "\[RuleDelayed]", 
                    RowBox[{"DualNumbers`Private`a", "+", 
                    RowBox[{
                    "DualNumbers`Private`b", " ", 
                    "DualNumbers`Private`eps"}]}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualExpand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each dual number \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) * \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualExpand\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) replaces each dual number \
Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)] with \
\!\(\*StyleBox[\"a\", \"TI\"]\) + \!\(\*StyleBox[\"b\", \"TI\"]\) * \
\!\(\*StyleBox[\"eps\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualExpand, {DualNumbers`DualExpand[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]] :> 
         DualNumbers`Private`a + 
          DualNumbers`Private`b DualNumbers`Private`eps]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualExpand"], False]]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"f7fb2240-3cde-462e-96b4-fcd5bb5852c3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \\!\\(\\*StyleBox[\\\"eps\\\", \
\\\"TI\\\"]\\) with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{"DualNumbers`Private`eps", "\[RuleDelayed]", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFactor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \\!\\(\\*StyleBox[\\\"eps\\\", \
\\\"TI\\\"]\\) with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualFactor\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) replaces \
\!\(\*StyleBox[\"eps\", \"TI\"]\) with Dual[0, 1] in \!\(\*StyleBox[\"expr\", \
\"TI\"]\).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFactor, {DualNumbers`DualFactor[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> 
       ReplaceRepeated[
        DualNumbers`Private`expr, DualNumbers`Private`eps :> 
         DualNumbers`Dual[0, 1]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "DualNumbers`DualFactor"], 
   False]]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"90b3e915-bff5-483a-bae0-d51fda094512"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) expands \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) around \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) = 0, \
keeping only the 0th and 1st order terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualSimplify", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{"DualNumbers`Private`expr", ",", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`eps", ",", "0", ",", "1"}], 
                    "}"}]}], "]"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualSimplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) expands \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) around \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) = 0, \
keeping only the 0th and 1st order terms.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualSimplify\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) expands \
\!\(\*StyleBox[\"expr\", \"TI\"]\) around \!\(\*StyleBox[\"eps\", \"TI\"]\) = \
0, keeping only the 0th and 1st order terms.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualSimplify, {DualNumbers`DualSimplify[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> Normal[
         Series[DualNumbers`Private`expr, {DualNumbers`Private`eps, 0, 1}]]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualSimplify"], False]]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"ec8dff3c-254b-40c1-8913-b511680feedd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation solving and optimization", \
"Subsubsection",ExpressionUUID->"12cf237a-1fd9-4299-b831-4449eda98c2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualFindRoot"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMinimum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMaximum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FindDualSolution"}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"682653f7-3b28-4eeb-976f-b4dedabf2c59"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec", "}"}], ",", 
                    "DualNumbers`Private`rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    "DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`stdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", "DualNumbers`Private`equations", "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "Subtract", ",", "DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`stdEqs", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol", "=", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`spec", ",", 
                    "DualNumbers`Private`rest"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`stdSol"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindRoot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindRoot works like FindRoot, but allows for Dual numbers in the \
equations.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindRoot, {DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eq, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindRoot[
        DualNumbers`Private`eq, {DualNumbers`Private`spec}, 
         DualNumbers`Private`rest], DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`stdEqs, DualNumbers`Private`stdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed]]; 
         DualNumbers`Private`stdEqs = 
          Apply[Subtract, DualNumbers`Private`equations, {1}]; 
         DualNumbers`Private`stdEqs = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`stdEqs]]; 
         DualNumbers`Private`stdSol = 
          FindRoot[
           DualNumbers`Private`stdEqs, DualNumbers`Private`spec, 
            DualNumbers`Private`rest]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol, {
              Repeated[Blank[] -> PatternTest[
                 Blank[], NumericQ]]}]], 
           Return[$Failed]]; Quiet[
           DualNumbers`Private`firstSol[
            DualNumbers`FindDualSolution[
            DualNumbers`Private`equations, DualNumbers`Private`stdSol]], {
            MessageName[DualNumbers`FindDualSolution, "nonsol"]}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindRoot"], False]]], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"1f75b8e5-2828-48ba-9e29-637035aad537"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    RowBox[{
                    "DualNumbers`Private`spec$", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`fun$", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    RowBox[{
                    "Last", "[", "DualNumbers`Private`stdSol$", "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun$", "/.", "\[VeryThinSpace]", 
                    "DualNumbers`Private`dualSol$"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMinimum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMinimum works like FindMinimum, but allows for Dual numbers in \
the objective function.\nDualFindMinimum does not support constraints on the \
independent variables.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMinimum, {DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMinimum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMinimum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMinimum"], False]]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"b9ae90e3-9b84-4b44-bf12-abcf2973e7de"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    RowBox[{
                    "DualNumbers`Private`spec$", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`fun$", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMaximum", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    RowBox[{
                    "Last", "[", "DualNumbers`Private`stdSol$", "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun$", "/.", "\[VeryThinSpace]", 
                    "DualNumbers`Private`dualSol$"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMaximum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMaximum works like FindMaximum, but allows for Dual numbers in \
the objective function.\nDualFindMaximum does not support constraints on the \
independent variables.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMaximum, {DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMaximum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMaximum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMaximum"], False]]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"695cfeac-e143-49de-ab6a-1c8888ed4ba2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`sol", ":", 
                    RowBox[{"{", "__Rule", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`vars", "=", 
                    RowBox[{"Keys", "[", "DualNumbers`Private`sol", "]"}]}], 
                    ",", "DualNumbers`Private`dualRules", ",", 
                    "DualNumbers`Private`nonstdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", "DualNumbers`Private`equations", "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualRules", "=", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{
                    RowBox[{"Values", "[", "DualNumbers`Private`sol", "]"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`vars"}]}]}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "Subtract", ",", "DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "/.", 
                    "\[VeryThinSpace]", "DualNumbers`Private`dualRules"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"EqualTo", "[", "0", "]"}], ")"}]}], ",", "_"}], 
                    "]"}], ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`sol", "]"}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NonStandard", "[", "#1", "]"}], "\[Equal]", 
                    "0"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`equations"}]}], ";", 
                    RowBox[{"DualNumbers`Private`nonstdSol", "=", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    "DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`vars"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`nonstdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Rule", "}"}], ".."}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "DualNumbers`Private`sol", ",", 
                    "DualNumbers`Private`vars"}], "]"}], ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`vars", ",", "0"}],
                     "]"}]}], "}"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`nonstdSol"}], ",", "$Failed"}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`FindDualSolution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FindDualSolution\", \"[\", RowBox[{StyleBox[\"eqs\", \
\"TI\"], \",\",  StyleBox[\"sol\", \"TI\"]}], \"]\"}]\) finds a Dual-valued \
solution to \!\(\*StyleBox[\"eqs\", \"TI\"]\) where \!\(\*StyleBox[\"sol\", \
\"TI\"]\) is the standard-valued solution.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`FindDualSolution, {DualNumbers`FindDualSolution[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`sol, {
           BlankSequence[Rule]}]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`vars = Keys[DualNumbers`Private`sol], 
          DualNumbers`Private`dualRules, DualNumbers`Private`nonstdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed]]; 
         DualNumbers`Private`dualRules = 
          Thread[DualNumbers`Private`vars -> 
            Values[DualNumbers`Private`sol] + 
             Map[DualNumbers`Dual[0, #]& , DualNumbers`Private`vars]]; 
         DualNumbers`Private`equations = ReplaceAll[
            DualNumbers`DualFactor[
             Apply[Subtract, DualNumbers`Private`equations, {1}]], 
            DualNumbers`Private`dualRules]; If[
           Not[
            MatchQ[DualNumbers`Private`equations, {
              Repeated[
               DualNumbers`Dual[
                PatternTest[
                 Blank[], 
                 EqualTo[0]], 
                Blank[]]]}]], 
           Message[
            MessageName[DualNumbers`FindDualSolution, "nonsol"], 
            Short[DualNumbers`Private`sol]]]; 
         DualNumbers`Private`equations = 
          Map[DualNumbers`NonStandard[#] == 0& , 
            DualNumbers`Private`equations]; 
         DualNumbers`Private`nonstdSol = 
          Solve[DualNumbers`Private`equations, DualNumbers`Private`vars]; If[
           MatchQ[DualNumbers`Private`nonstdSol, {
             Repeated[{
               BlankSequence[Rule]}]}], 
           Map[Thread[DualNumbers`Private`vars -> MapThread[DualNumbers`Dual, {
                Lookup[DualNumbers`Private`sol, DualNumbers`Private`vars], 
                Lookup[#, DualNumbers`Private`vars, 0]}]]& , 
            DualNumbers`Private`nonstdSol], $Failed]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`FindDualSolution"], False]]], "Output",
 CellLabel->"Out[92]=",ExpressionUUID->"e74cbe75-a347-46e6-9656-3d0467ca6890"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1814, 888},
WindowMargins->{{Automatic, 31}, {Automatic, 10}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TaggingRules->{"SaveDialogDataSavesBlog" -> False, "TryRealOnly" -> False},
TrackCellChangeTimes->False,
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9220aa73-8720-4446-a63d-8589ef2eb51f"
]

