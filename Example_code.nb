Notebook[{

Cell[CellGroupData[{
Cell["Initialization", \
"Section",ExpressionUUID->"0231796b-6132-4fd1-9fee-40bf487c529a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "DualNumbers`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[27]:=",ExpressionUUID->"db0bf3fb-3968-4b36-8211-5cb1fa482ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DualNumbers", \
"Section",ExpressionUUID->"8ee5ae86-a341-4457-8275-7b676122c998"],

Cell[CellGroupData[{

Cell["Symbols", \
"Subsection",ExpressionUUID->"480ee803-0653-481c-ba8a-1ac428f21399"],

Cell[CellGroupData[{

Cell["Construction and accessing standard/nonstandard parts", \
"Subsubsection",ExpressionUUID->"6a59529d-398c-4b37-8c91-e92b7872fd6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "Dual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ToDual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Standard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "NonStandard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardAll"}]}], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"3082b9ef-db93-4ab3-b0ce-e85ddbdee692"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \
\\\"[\\\", RowBox[{StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]}], \\\"]\\\"}]\\) represents an \
array of dual numbers. The arrays should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses ToDual[a, 0] \
to construct a dual quantity.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "ReadProtected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Dual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a dual number with standard part \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal part \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \
\\\"[\\\", RowBox[{StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]}], \\\"]\\\"}]\\) represents an \
array of dual numbers. The arrays should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\n\\!\\(\\*RowBox[{\\\"Dual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses ToDual[a, 0] \
to construct a dual quantity.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  \
StyleBox[\"b\", \"TI\"]}], \"]\"}]\) represents a dual number with standard \
part \!\(\*StyleBox[\"a\", \"TI\"]\) and infinitesimal part \
\!\(\*StyleBox[\"b\", \"TI\"]\).\n\!\(\*RowBox[{\"Dual\", \"[\", \
RowBox[{StyleBox[SubscriptBox[\"array\", StyleBox[\"1\", \"TR\"]], \"TI\"], \
\",\",  StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \"TI\"]}], \
\"]\"}]\) represents an array of dual numbers. The arrays should have the \
same shape (i.e., Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\
\"1\", \"TR\"]], \"TI\"]\)] === \
Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \
\"TI\"]\)])\n\!\(\*RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \
\"TI\"]}], \"]\"}]\) uses ToDual[a, 0] to construct a dual quantity.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {ReadProtected}, "FullName" -> "DualNumbers`Dual"], 
   False]]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"9917a1ec-8c3f-4c79-924b-f41aa689cb67"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToDual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"const\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) constructs a dual \
scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`d_Dual", ",", "___"}], "]"}],
                     ":=", "DualNumbers`Private`d"}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`a_SparseArray", "?", 
                    "DualFreeArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     ",", "DualNumbers`Private`const"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`const", ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "/;", 
                    RowBox[{"!", 
                    RowBox[{
                    "DualFreeArrayQ", "[", "DualNumbers`Private`a", "]"}]}]}],
                     ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`const"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    RowBox[{
                    "DualNumbers`Private`arr_SparseArray", "?", 
                    "DualFreeArrayQ"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`arr", "]"}], ",", 
                    "DualNumbers`Private`a"}], "]"}], ",", 
                    "DualNumbers`Private`arr"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    RowBox[{
                    "DualNumbers`Private`arr_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`arr", "]"}]}], 
                    "]"}], ",", "DualNumbers`Private`arr"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`const"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ToDual", "[", "DualNumbers`Private`args__", "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ToDual", "::", "cons"}], "MessageName"], ",", 
                    RowBox[{"Short", "/@", 
                    RowBox[{"{", "DualNumbers`Private`args", "}"}]}]}], "]"}],
                     ";", "False"}], ")"}]}], ":=", "Undefined"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ToDual", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`ToDual] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`ToDual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToDual\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"const\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) constructs a dual \
scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ToDual\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\
\",  StyleBox[\"const\", \"TI\"]}], \"]\"}]\) constructs a dual scalar or \
array with constant nonstandard part. The default value for \
\!\(\*StyleBox[\"const\", \"TI\"]\) is 0.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`ToDual, {DualNumbers`ToDual[
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]], 
         BlankNullSequence[]] :> DualNumbers`Private`d, DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`a], DualNumbers`Private`const]], 
       DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         ConstantArray[DualNumbers`Private`const, 
          Dimensions[DualNumbers`Private`a]]], DualNumbers`ToDual[
         Condition[
          PatternTest[
           Pattern[DualNumbers`Private`a, 
            Blank[]], ArrayQ], 
          Not[
           DualNumbers`DualFreeArrayQ[DualNumbers`Private`a]]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> DualNumbers`PackDualArray[
         Map[
         DualNumbers`ToDual[#, DualNumbers`Private`const]& , 
          DualNumbers`Private`a, {
           ArrayDepth[DualNumbers`Private`a]}]], DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`arr], DualNumbers`Private`a], 
         DualNumbers`Private`arr], DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> DualNumbers`Dual[
         ConstantArray[DualNumbers`Private`a, 
          Dimensions[DualNumbers`Private`arr]], DualNumbers`Private`arr], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`const], 
       Condition[
         DualNumbers`ToDual[
          Pattern[DualNumbers`Private`args, 
           BlankSequence[]]], Message[
           MessageName[DualNumbers`ToDual, "cons"], 
           Map[Short, {DualNumbers`Private`args}]]; False] :> Undefined}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`ToDual, {
      SyntaxInformation[DualNumbers`ToDual] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`ToDual"], False]]], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"080ed82d-0e8a-4cf0-b7f0-6ede0d5e98a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\\nSymbolic quantities are assumed to have zero \
nonstandard parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", "_"}], "]"}], 
                    "]"}], ":=", "DualNumbers`Private`a"}]},
                    {
                    RowBox[{
                    RowBox[{"Standard", "[", "DualNumbers`Private`x_", "]"}], 
                    ":=", "DualNumbers`Private`x"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Standard", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`Standard] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Standard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Standard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
standard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the first argument).\\nSymbolic quantities are assumed to have zero \
nonstandard parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Standard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the standard part of a dual number \!\(\*StyleBox[\"d\", \
\"TI\"]\) (i.e., the first argument).\nSymbolic quantities are assumed to \
have zero nonstandard parts. Threads over lists.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`Standard, {DualNumbers`Standard[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Blank[]]] :> DualNumbers`Private`a, DualNumbers`Standard[
         Pattern[DualNumbers`Private`x, 
          Blank[]]] :> DualNumbers`Private`x}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`Standard, {
      SyntaxInformation[DualNumbers`Standard] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Listable}, "FullName" -> "DualNumbers`Standard"], 
   False]]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"0f8559ac-7116-43d9-b719-82188ee2ff9e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
nonstandard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the second argument).\\nSymbolic quantities are assumed to have zero \
nonstandard parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "DualNumbers`Private`b_"}], "]"}], 
                    "]"}], ":=", "DualNumbers`Private`b"}]},
                    {
                    RowBox[{
                    RowBox[{"NonStandard", "[", "_", "]"}], ":=", "0"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "NonStandard", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`NonStandard] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`NonStandard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NonStandard\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) extracts the \
nonstandard part of a dual number \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) \
(i.e., the second argument).\\nSymbolic quantities are assumed to have zero \
nonstandard parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NonStandard\", \"[\", RowBox[{StyleBox[\"d\", \"TI\"]}], \
\"]\"}]\) extracts the nonstandard part of a dual number \
\!\(\*StyleBox[\"d\", \"TI\"]\) (i.e., the second argument).\nSymbolic \
quantities are assumed to have zero nonstandard parts. Threads over lists.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`NonStandard, {DualNumbers`NonStandard[
         DualNumbers`Dual[
          Blank[], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Private`b, DualNumbers`NonStandard[
         Blank[]] :> 0}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`NonStandard, {
      SyntaxInformation[DualNumbers`NonStandard] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Listable}, "FullName" -> 
    "DualNumbers`NonStandard"], False]]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"30bb7284-4ffc-4a76-b5eb-6274c61d5e88"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "StandardAll", "[", "DualNumbers`Private`expr_", "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", "_"}], "]"}], 
                    "\[RuleDelayed]", "DualNumbers`Private`a"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "StandardAll", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`StandardAll] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardAll\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardAll\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces all \
dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with their \
standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StandardAll\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) replaces all dual numbers in \!\(\*StyleBox[\"expr\", \
\"TI\"]\) with their standard parts.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardAll, {DualNumbers`StandardAll[
         Pattern[DualNumbers`Private`expr, 
          Blank[]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Blank[]] :> DualNumbers`Private`a]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`StandardAll, {
      SyntaxInformation[DualNumbers`StandardAll] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`StandardAll"], 
   False]]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"84162c88-fae6-41e4-bfb2-adbaae2f65d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dual arrays", \
"Subsubsection",ExpressionUUID->"45f2c2cf-8457-4f1e-aa43-f5e4fcfbe25a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "PackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualLinearSolveFunction"}]}], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"e0254399-fb4a-4ce7-aa39-18c29b5b34fa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PackDualArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) converts an \
array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array_", "?", "UnpackedDualArrayQ"}],
                     "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`depth", "=", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`array", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    ",", 
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`array", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"DualNumbers`Private`array_", "?", "ArrayQ"}], 
                    "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "Standard", "[", "DualNumbers`Private`array", "]"}], 
                    "]"}], ",", 
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{
                    "NonStandard", "[", "DualNumbers`Private`array", "]"}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`a", "]"}], ",", 
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`b", "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "PackDualArray", "[", "DualNumbers`Private`other_", "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"PackDualArray", "::", "arrayQ"}], "MessageName"],
                     ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "PackDualArray", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`PackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`PackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PackDualArray\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) converts an \
array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"PackDualArray\", \"[\", RowBox[{StyleBox[\"array\", \"TI\
\"]}], \"]\"}]\) converts an array of numbers (possibly duals) to the form \
Dual[\!\(\*StyleBox[\"std\", \"TI\"]\), \!\(\*StyleBox[\"nonstd\", \
\"TI\"]\)].", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`PackDualArray, {DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], DualNumbers`UnpackedDualArrayQ]] :> 
       With[{DualNumbers`Private`depth = 
          ArrayDepth[DualNumbers`Private`array]}, 
         DualNumbers`Dual[
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 1]], 
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 2]]]], 
       DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], ArrayQ]] :> DualNumbers`Dual[
         Developer`ToPackedArray[
          DualNumbers`Standard[DualNumbers`Private`array]], 
         Developer`ToPackedArray[
          DualNumbers`NonStandard[DualNumbers`Private`array]]], 
       DualNumbers`PackDualArray[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         Developer`ToPackedArray[DualNumbers`Private`a], 
         Developer`ToPackedArray[DualNumbers`Private`b]], 
       DualNumbers`PackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`PackDualArray, "arrayQ"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`PackDualArray, {
      SyntaxInformation[DualNumbers`PackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`PackDualArray"], 
   False]]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"0ee02c42-be43-45b4-b40c-9748990045eb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\\nProduces a message if packing messages have been turned on with \
On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`packingMessagesEnabledQ", "[", "]"}],
                     ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "}"}], ",", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "UnpackDualArray", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`UnpackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\\nProduces a message if packing messages have been turned on with \
On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"UnpackDualArray\", \"[\", \
RowBox[{StyleBox[\"dualArray\", \"TI\"]}], \"]\"}]\) reverses to operation of \
PackDualArray and creates an array of dual scalars.\nProduces a message if \
packing messages have been turned on with On[\"Packing\"].", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`UnpackDualArray, {
      SyntaxInformation[DualNumbers`UnpackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`UnpackDualArray"], 
   False]]], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"1e20e9fc-5f60-4d93-bddd-bd535dcef8df"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualLinearSolveFunction\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ls\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is produced from \
LinearSolve[Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]]. A DualLinearSolveFunction can \
be applied to Dual arrays.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" SubValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"SubValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "SubValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{"DualNumbers`Private`ls_LinearSolveFunction", ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "SquareMatrixQ"}]}], "]"}],
                     "[", 
                    RowBox[{"DualNumbers`Private`m_", "?", "ArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`inv", "=", 
                    RowBox[{
                    "DualNumbers`Private`ls", "[", "DualNumbers`Private`m", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`inv", ",", 
                    RowBox[{"-", 
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    RowBox[{
                    "DualNumbers`Private`b", ".", "DualNumbers`Private`inv"}],
                     "]"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "ArrayQ", "[", "DualNumbers`Private`inv", "]"}]}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{"DualNumbers`Private`ls_LinearSolveFunction", ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "SquareMatrixQ"}]}], "]"}],
                     "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a2_", "?", "ArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`b2_", "?", "ArrayQ"}]}], 
                    "]"}], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`inv", "=", 
                    RowBox[{
                    "DualNumbers`Private`ls", "[", "DualNumbers`Private`a2", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"DualNumbers`Private`inv", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    RowBox[{
                    "DualNumbers`Private`b", ".", "DualNumbers`Private`inv"}],
                     "]"}]}], "+", 
                    RowBox[{
                    "DualNumbers`Private`ls", "[", "DualNumbers`Private`b2", 
                    "]"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "ArrayQ", "[", "DualNumbers`Private`inv", "]"}]}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualLinearSolveFunction", 
                    "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualLinearSolveFunction] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualLinearSolveFunction\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualLinearSolveFunction\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ls\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is produced from \
LinearSolve[Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]]. A DualLinearSolveFunction can \
be applied to Dual arrays.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualLinearSolveFunction\", \"[\", \
RowBox[{StyleBox[\"ls\", \"TI\"], \",\",  StyleBox[\"b\", \"TI\"]}], \
\"]\"}]\) is produced from LinearSolve[Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)]]. A DualLinearSolveFunction can be applied \
to Dual arrays.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> 
    Information`InformationValueForm[
     SubValues, DualNumbers`DualLinearSolveFunction, {
      DualNumbers`DualLinearSolveFunction[
         Pattern[DualNumbers`Private`ls, 
          Blank[LinearSolveFunction]], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], SquareMatrixQ]][
         PatternTest[
          Pattern[DualNumbers`Private`m, 
           Blank[]], ArrayQ]] :> 
       With[{DualNumbers`Private`inv = 
          DualNumbers`Private`ls[DualNumbers`Private`m]}, 
         Condition[
          DualNumbers`Dual[DualNumbers`Private`inv, -DualNumbers`Private`ls[
             Dot[DualNumbers`Private`b, DualNumbers`Private`inv]]], 
          ArrayQ[DualNumbers`Private`inv]]], 
       DualNumbers`DualLinearSolveFunction[
         Pattern[DualNumbers`Private`ls, 
          Blank[LinearSolveFunction]], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], SquareMatrixQ]][
         PatternTest[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a2, 
             Blank[]], ArrayQ], 
           PatternTest[
            Pattern[DualNumbers`Private`b2, 
             Blank[]], ArrayQ]], DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`inv = 
          DualNumbers`Private`ls[DualNumbers`Private`a2]}, 
         Condition[
          DualNumbers`Dual[DualNumbers`Private`inv, -DualNumbers`Private`ls[
              Dot[DualNumbers`Private`b, DualNumbers`Private`inv]] + 
           DualNumbers`Private`ls[DualNumbers`Private`b2]], 
          ArrayQ[DualNumbers`Private`inv]]]}], "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualLinearSolveFunction, {
      SyntaxInformation[DualNumbers`DualLinearSolveFunction] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualLinearSolveFunction"], False]]], "Output",
 CellLabel->"Out[36]=",ExpressionUUID->"5b55c2cd-76eb-461e-ae26-b2f0d2e9bcef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing for data type", \
"Subsubsection",ExpressionUUID->"7bb15119-6233-4e43-b9de-de64427c2cf1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualScalarQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualArrayQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFreeArrayQ"}]}], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"7b7ceb43-1b98-499d-94b8-8cd08dc5d15a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", 
                    RowBox[{"DualNumbers`Private`expr", ":", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"_", ",", "_"}], "]"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    "DualScalarQ", "[", "DualNumbers`Private`expr", "]"}], "||", 
                    RowBox[{
                    "DualArrayQ", "[", "DualNumbers`Private`expr", "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualQ", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a dual number.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualQ, {DualNumbers`DualQ[
         Pattern[DualNumbers`Private`expr, 
          DualNumbers`Dual[
           Blank[], 
           Blank[]]]] :> Or[
         DualNumbers`DualScalarQ[DualNumbers`Private`expr], 
         DualNumbers`DualArrayQ[DualNumbers`Private`expr]], DualNumbers`DualQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualQ, {
      SyntaxInformation[DualNumbers`DualQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualQ"], 
   False]]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"3857449b-131c-46a1-8177-a8cc8dbf26d8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a head different from \
Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_Dual", "]"}], ":=", "False"}]},
                    {
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_", "]"}], ":=", "True"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "StandardQ", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`StandardQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StandardQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a head different from \
Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StandardQ\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) has a head \
different from Dual.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardQ, {DualNumbers`StandardQ[
         Blank[DualNumbers`Dual]] :> False, DualNumbers`StandardQ[
         Blank[]] :> True}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`StandardQ, {
      SyntaxInformation[DualNumbers`StandardQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`StandardQ"], 
   False]]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"d57872e9-a387-414c-9c29-b642309121c3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number but not a \
dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], "]"}], "]"}], ":=",
                     "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualScalarQ", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualScalarQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualScalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a dual number but not a \
dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"]}], \
\"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a dual number but \
not a dual array.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualScalarQ, {DualNumbers`DualScalarQ[
         DualNumbers`Dual[
          Except[
           PatternTest[
            Blank[], ArrayQ]], 
          Except[
           PatternTest[
            Blank[], ArrayQ]]]] :> True, DualNumbers`DualScalarQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualScalarQ, {
      SyntaxInformation[DualNumbers`DualScalarQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualScalarQ"], 
   False]]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"ec014a27-5d53-4a35-bdd9-196885da07e1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid packed array of \
dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     "===", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`b", "]"}]}]}], ":=",
                     "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualArrayQ", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualArrayQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid packed array of \
dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
packed array of dual numbers.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualArrayQ, {Condition[
         DualNumbers`DualArrayQ[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a, 
             Blank[]], DualNumbers`DualFreeArrayQ], 
           PatternTest[
            Pattern[DualNumbers`Private`b, 
             Blank[]], DualNumbers`DualFreeArrayQ]]], 
         Dimensions[DualNumbers`Private`a] === 
         Dimensions[DualNumbers`Private`b]] :> True, DualNumbers`DualArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualArrayQ, {
      SyntaxInformation[DualNumbers`DualArrayQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualArrayQ"], 
   False]]], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"0b2ff386-357b-499b-902a-4f29ba6bd09f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\\nProduces a message if packing messages have been turned on with \
On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`packingMessagesEnabledQ", "[", "]"}],
                     ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "}"}], ",", 
                    RowBox[{
                    "ArrayDepth", "[", "DualNumbers`Private`a", "]"}]}], 
                    "]"}]}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`other", "]"}]}], "]"}],
                     ";", "DualNumbers`Private`other"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "UnpackDualArray", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`UnpackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnpackDualArray\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"dualArray\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
reverses to operation of PackDualArray and creates an array of dual \
scalars.\\nProduces a message if packing messages have been turned on with \
On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"UnpackDualArray\", \"[\", \
RowBox[{StyleBox[\"dualArray\", \"TI\"]}], \"]\"}]\) reverses to operation of \
PackDualArray and creates an array of dual scalars.\nProduces a message if \
packing messages have been turned on with On[\"Packing\"].", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`UnpackDualArray, {
      SyntaxInformation[DualNumbers`UnpackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`UnpackDualArray"], 
   False]]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"a91d802e-e460-4bd3-9454-6a0045201f39"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFreeArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an ordinary array that has \
no dual numbers at the deepest level.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "PackedArrayQ"}], 
                    "]"}], ":=", "True"}]},
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", "_Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", "_", "]"}], ":=", "False"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualFreeArrayQ", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFreeArrayQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFreeArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFreeArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an ordinary array that has \
no dual numbers at the deepest level.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualFreeArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\
\"]}], \"]\"}]\) tests if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an ordinary \
array that has no dual numbers at the deepest level.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFreeArrayQ, {DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], Developer`PackedArrayQ]] :> True, 
       DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], ArrayQ]] :> FreeQ[DualNumbers`Private`a, 
         Blank[DualNumbers`Dual], {
          ArrayDepth[DualNumbers`Private`a]}, Heads -> False], 
       DualNumbers`DualFreeArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFreeArrayQ, {
      SyntaxInformation[DualNumbers`DualFreeArrayQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualFreeArrayQ"], 
   False]]], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"327e75a7-fffd-4b6e-8c4f-082a4f8e5302"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities for working with dual numbers", \
"Subsubsection",ExpressionUUID->"f23b65fe-1114-4efe-bbe7-8816fce4afba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualApply"}], "\[IndentingNewLine]", 
 RowBox[{"?", "AddDualHandling"}]}], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"e9a353da-1190-45c1-941a-8ffab2ded58e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\
\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\",  RowBox[{\\\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\
\"]\\\"}]\\) returns Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\
\"]\\)], \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\
\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\",  RowBox[{\\\
\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"Dual\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is the operator \
form of DualApply.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) will use ToDual[\\!\\(\\*StyleBox[\\\"x\\\", \\\
\"TI\\\"]\\), 0] to cast standard quantities \\!\\(\\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\\) to duals.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" DownValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DownValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DownValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`funa_", ",", 
                    "DualNumbers`Private`funb_"}], "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`funa", "[", "DualNumbers`Private`a", 
                    "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`funb", "[", "DualNumbers`Private`b", 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`a", 
                    "]"}], ",", 
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`b", 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll_", "}"}], ",", 
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"DualNumbers`Private`funAll", "[", 
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "@@", "DualNumbers`Private`try"}], "/;", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`try", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "]"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "resultlength"}], 
                    "MessageName"], ",", 
                    RowBox[{
                    "Short", "[", "DualNumbers`Private`funAll", "]"}]}], 
                    "]"}], ";", "False"}], ")"}]}]}], "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"DualNumbers`Private`other", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`other", ",", "0"}], "]"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" SubValue Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"SubValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "SubValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "DualApply", "[", "DualNumbers`Private`fun_", "]"}], "[", 
                    "DualNumbers`Private`d_Dual", "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    "DualNumbers`Private`fun", ",", "DualNumbers`Private`d"}],
                     "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualApply", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualApply] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualApply\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\
\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\",  RowBox[{\\\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\",  StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\
\"]\\\"}]\\) returns Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\
\"]\\)], \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\
\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\
\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\",  RowBox[{\\\
\"Dual\\\", \\\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"Dual\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) returns \
Dual[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) is the operator \
form of DualApply.\\n\\!\\(\\*RowBox[{\\\"DualApply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"x\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) will use ToDual[\\!\\(\\*StyleBox[\\\"x\\\", \\\
\"TI\\\"]\\), 0] to cast standard quantities \\!\\(\\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\\) to duals.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualApply\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \"TI\"]], \"TI\"], \
\",\",  StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \"TI\"]}], \"}\
\"}], \",\",  RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \
\",\",  StyleBox[\"b\", \"TI\"]}], \"]\"}]}], \"]\"}]\) returns \
Dual[\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \"TI\"]], \
\"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \
\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \
\"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\!\(\*RowBox[{\"DualApply\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]}], \"}\"}], \",\",  RowBox[{\"Dual\", \"[\
\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  StyleBox[\"b\", \"TI\"]}], \
\"]\"}]}], \"]\"}]\) returns Dual[\!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)][[1]], \!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)][[2]]]. \!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"All\", \"TI\"]], \"TI\"]\) should return a List of length 2.\n\!\(\
\*RowBox[{\"DualApply\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\",  \
RowBox[{\"Dual\", \"[\", RowBox[{StyleBox[\"a\", \"TI\"], \",\",  \
StyleBox[\"b\", \"TI\"]}], \"]\"}]}], \"]\"}]\) returns \
Dual[\!\(\*StyleBox[\"f\", \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \
\!\(\*StyleBox[\"f\", \"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\
\!\(\*RowBox[{\"DualApply\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"]}], \
\"]\"}]\) is the operator form of DualApply.\n\!\(\*RowBox[{\"DualApply\", \
\"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\",  StyleBox[\"x\", \"TI\"]}], \
\"]\"}]\) will use ToDual[\!\(\*StyleBox[\"x\", \"TI\"]\), 0] to cast \
standard quantities \!\(\*StyleBox[\"x\", \"TI\"]\) to duals.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualApply, {DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funa, 
           Blank[]], 
          Pattern[DualNumbers`Private`funb, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`funa[DualNumbers`Private`a], 
         DualNumbers`Private`funb[DualNumbers`Private`b]], 
       DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Except[
           Blank[List]]], 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`fun[DualNumbers`Private`a], 
         DualNumbers`Private`fun[DualNumbers`Private`b]], 
       DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funAll, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> 
       With[{DualNumbers`Private`try = 
          DualNumbers`Private`funAll[
           DualNumbers`Private`a, DualNumbers`Private`b]}, 
         Condition[
          Apply[DualNumbers`Dual, DualNumbers`Private`try], 
          Replace[
           MatchQ[DualNumbers`Private`try, {
             Blank[], 
             Blank[]}], False :> (Message[
              MessageName[DualNumbers`DualApply, "resultlength"], 
              Short[DualNumbers`Private`funAll]]; False)]]], 
       DualNumbers`DualApply[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`other, 
          Except[
           Blank[DualNumbers`Dual]]]] :> 
       DualNumbers`DualApply[DualNumbers`Private`f, 
         DualNumbers`ToDual[DualNumbers`Private`other, 0]]}], "SubValues" -> 
    Information`InformationValueForm[
     SubValues, DualNumbers`DualApply, {DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Blank[]]][
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]]] :> 
       DualNumbers`DualApply[
        DualNumbers`Private`fun, DualNumbers`Private`d]}], "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualApply, {
      SyntaxInformation[DualNumbers`DualApply] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualApply"], False]]], "Output",
 CellLabel->"Out[43]=",ExpressionUUID->"b8066ab6-e4ba-47ce-ab68-0860b5016cf5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\
\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
derivatives for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to use with Dual \
numbers when called with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with $n \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\
\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \
\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["DualNumbers`Private`f", 
                    TagBox[
                    RowBox[{"(", "##1", ")"}],
                    Derivative],
                    MultilineFunction->None], "&"}], ",", 
                    RowBox[{
                    "IdentityMatrix", "[", "DualNumbers`Private`n", "]"}], 
                    ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"DualNumbers`Private`nList", ":", 
                    RowBox[{"{", 
                    RowBox[{"__Integer", "?", "Positive"}], "}"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", "#1"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`nList"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{
                    "DualNumbers`Private`f_", ",", 
                    "DualNumbers`Private`derivatives_List"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`n", "=", 
                    RowBox[{
                    "Length", "[", "DualNumbers`Private`derivatives", "]"}]}],
                     "}"}], ",", 
                    RowBox[{"Dual", "/:", 
                    RowBox[{"DualNumbers`Private`f", "[", 
                    RowBox[{
                    "DualNumbers`Private`first___", ",", 
                    "DualNumbers`Private`d_Dual", ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`args", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`first", ",", "DualNumbers`Private`d",
                     ",", "DualNumbers`Private`rest"}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`dualPos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    RowBox[{
                    "DualNumbers`Private`args", ",", 
                    "DualNumbers`Private`dualPatt"}], "]"}], "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`inputs", "=", 
                    RowBox[{
                    "DualNumbers`Private`std", "[", 
                    "DualNumbers`Private`args", "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`dlist", "=", 
                    RowBox[{
                    "DualNumbers`Private`derivatives", "\[LeftDoubleBracket]",
                     "DualNumbers`Private`dualPos", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`f", "@@", 
                    "DualNumbers`Private`inputs"}], ",", 
                    RowBox[{
                    RowBox[{"Through", "[", 
                    RowBox[{"DualNumbers`Private`dlist", "[", 
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`inputs"}], 
                    "]"}], "]"}], ".", 
                    RowBox[{
                    "DualNumbers`Private`args", "\[LeftDoubleBracket]", 
                    RowBox[{"DualNumbers`Private`dualPos", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "/;", 
                    RowBox[{
                    "ListQ", "[", "DualNumbers`Private`dlist", "]"}]}]}], 
                    "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", "DualNumbers`Private`args", "]"}], 
                    "===", "DualNumbers`Private`n"}]}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "AddDualHandling", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`AddDualHandling] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`AddDualHandling\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\
\\\", RowBox[{StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
derivatives for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to use with Dual \
numbers when called with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with $n \
arguments.\\n\\!\\(\\*RowBox[{\\\"AddDualHandling\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\",  RowBox[{\\\"{\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\
\"TI\\\"], \\\",\\\",  StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses Derivative to infer derivatives of \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \
\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\",  RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"f\", \
StyleBox[\"1\", \"TR\"]], \"TI\"], \",\",  StyleBox[\"\[Ellipsis]\", \"TR\"], \
\",\",  StyleBox[SubscriptBox[\"f\", StyleBox[\"n\", \"TI\"]], \"TI\"]}], \"}\
\"}]}], \"]\"}]\) specifies derivatives for \!\(\*StyleBox[\"f\", \"TI\"]\) \
to use with Dual numbers when called with \!\(\*StyleBox[\"n\", \"TI\"]\) \
arguments.\n\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\",  StyleBox[\"n\", \"TI\"]}], \"]\"}]\) uses Derivative to \
infer derivatives of \!\(\*StyleBox[\"f\", \"TI\"]\) for when \!\(\*StyleBox[\
\"f\", \"TI\"]\) is called with $n arguments.\n\
\!\(\*RowBox[{\"AddDualHandling\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\",  RowBox[{\"{\", RowBox[{StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \
\"TR\"]], \"TI\"], \",\",  StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \
\"TR\"]], \"TI\"], \",\",  StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \
\"]\"}]\) uses Derivative to infer derivatives of \!\(\*StyleBox[\"f\", \
\"TI\"]\) for when \!\(\*StyleBox[\"f\", \"TI\"]\) is called with \
\!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \"TR\"]], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \"TR\"]], \"TI\"]\), \
\[Ellipsis] arguments.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`AddDualHandling, {DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> 
       DualNumbers`AddDualHandling[DualNumbers`Private`f, 
         Apply[Derivative[
           SlotSequence[1]][DualNumbers`Private`f]& , 
          IdentityMatrix[DualNumbers`Private`n], {1}]], 
       DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`nList, {
           PatternTest[
            BlankSequence[Integer], Positive]}]] :> 
       Scan[DualNumbers`AddDualHandling[DualNumbers`Private`f, #]& , 
         DualNumbers`Private`nList], DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`derivatives, 
          Blank[List]]] :> 
       With[{DualNumbers`Private`n = Length[DualNumbers`Private`derivatives]}, 
         TagSetDelayed[DualNumbers`Dual, 
          DualNumbers`Private`f[
           Pattern[DualNumbers`Private`first, 
            BlankNullSequence[]], 
           Pattern[DualNumbers`Private`d, 
            Blank[DualNumbers`Dual]], 
           Pattern[DualNumbers`Private`rest, 
            BlankNullSequence[]]], 
          
          With[{DualNumbers`Private`args = {
             DualNumbers`Private`first, DualNumbers`Private`d, 
              DualNumbers`Private`rest}}, 
           Condition[
            With[{DualNumbers`Private`dualPos = Flatten[
                DualNumbers`Private`listPosition[
                DualNumbers`Private`args, DualNumbers`Private`dualPatt]], 
              DualNumbers`Private`inputs = 
              DualNumbers`Private`std[DualNumbers`Private`args]}, 
             
             With[{DualNumbers`Private`dlist = 
               Part[DualNumbers`Private`derivatives, 
                 DualNumbers`Private`dualPos]}, 
              Condition[
               DualNumbers`Dual[
                Apply[DualNumbers`Private`f, DualNumbers`Private`inputs], 
                Dot[
                 Through[
                  DualNumbers`Private`dlist[
                   Apply[Sequence, DualNumbers`Private`inputs]]], 
                 Part[
                 DualNumbers`Private`args, DualNumbers`Private`dualPos, 2]]], 
               ListQ[DualNumbers`Private`dlist]]]], 
            Length[DualNumbers`Private`args] === DualNumbers`Private`n]]]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`AddDualHandling, {
      SyntaxInformation[DualNumbers`AddDualHandling] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`AddDualHandling"], 
   False]]], "Output",
 CellLabel->"Out[44]=",ExpressionUUID->"149af0d8-3bb4-4577-baef-5af0bd61eed9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic manipulation of dual numbers", \
"Subsubsection",ExpressionUUID->"643a1f25-ba12-47c8-bcbd-35666c34f86b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "\[Epsilon]"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualExpand"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFactor"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualSimplify"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"7ea40ed3-fe9a-4c7c-8a93-08056a9f06a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[Epsilon] is an inactive form of Dual[0, 1] that \
can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`\[Epsilon]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[Epsilon] is an inactive form of Dual[0, 1] that \
can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\[Epsilon] is an inactive form of Dual[0, 1] that can be used for \
algebraic manipulation.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "DualNumbers`\[Epsilon]"], False]]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"2bb62ef2-fb75-417b-ba06-ca42cc3a6678"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each \
dual number Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) \[Epsilon].\\n\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\
\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualExpand", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    "DualNumbers`Private`a_", ",", "DualNumbers`Private`b_"}],
                     "]"}], "\[RuleDelayed]", 
                    RowBox[{"DualNumbers`Private`a", "+", 
                    RowBox[{
                    "DualNumbers`Private`b", " ", 
                    "DualNumbers`Private`eps"}]}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualExpand", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualExpand] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualExpand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces each \
dual number Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) \[Epsilon].\\n\\!\\(\\*RowBox[{\\\"DualExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\
\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualExpand\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) replaces each dual number Dual[\!\(\*StyleBox[\"a\", \
\"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)] with \!\(\*StyleBox[\"a\", \
\"TI\"]\) + \!\(\*StyleBox[\"b\", \"TI\"]\) \[Epsilon].\n\
\!\(\*RowBox[{\"DualExpand\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) uses \!\(\*StyleBox[\"eps\", \
\"TI\"]\) instead.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualExpand, {DualNumbers`DualExpand[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]] :> 
         DualNumbers`Private`a + 
          DualNumbers`Private`b DualNumbers`Private`eps]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualExpand, {
      SyntaxInformation[DualNumbers`DualExpand] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualExpand"], False]]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"f0ac10e0-d13d-4a49-a8e2-a5568241e79b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \
\[Epsilon] with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\
\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{"DualNumbers`Private`eps", "\[RuleDelayed]", 
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualFactor", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFactor] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFactor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces \
\[Epsilon] with Dual[0, 1] in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DualFactor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"eps\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\
\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualFactor\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) replaces \[Epsilon] with Dual[0, 1] in \
\!\(\*StyleBox[\"expr\", \"TI\"]\).\n\!\(\*RowBox[{\"DualFactor\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\",  StyleBox[\"eps\", \"TI\"]}], \
\"]\"}]\) uses \!\(\*StyleBox[\"eps\", \"TI\"]\) instead.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFactor, {DualNumbers`DualFactor[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> 
       ReplaceRepeated[
        DualNumbers`Private`expr, DualNumbers`Private`eps :> 
         DualNumbers`Dual[0, 1]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFactor, {
      SyntaxInformation[DualNumbers`DualFactor] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFactor"], False]]], "Output",
 CellLabel->"Out[47]=",ExpressionUUID->"f6038bb2-5c6e-4812-bd47-92254cb91efb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) expands \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) around \[Epsilon] = 0, keeping \
only the 0th and 1st order terms.\\n\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"eps\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\
\"eps\\\", \\\"TI\\\"]\\) as symbol for the dual unit.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualSimplify", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    RowBox[{"DualNumbers`Private`eps_", ":", "\[Epsilon]"}]}],
                     "]"}], ":=", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{"DualNumbers`Private`expr", ",", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`eps", ",", "0", ",", "1"}], 
                    "}"}]}], "]"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualSimplify", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualSimplify] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualSimplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) expands \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) around \[Epsilon] = 0, keeping \
only the 0th and 1st order terms.\\n\\!\\(\\*RowBox[{\\\"DualSimplify\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\",  \
StyleBox[\\\"eps\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\
\"eps\\\", \\\"TI\\\"]\\) as symbol for the dual unit.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DualSimplify\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) expands \!\(\*StyleBox[\"expr\", \"TI\"]\) around \
\[Epsilon] = 0, keeping only the 0th and 1st order terms.\n\
\!\(\*RowBox[{\"DualSimplify\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\",  StyleBox[\"eps\", \"TI\"]}], \"]\"}]\) uses \!\(\*StyleBox[\"eps\", \
\"TI\"]\) as symbol for the dual unit.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualSimplify, {DualNumbers`DualSimplify[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[Epsilon]]] :> Normal[
         Series[DualNumbers`Private`expr, {DualNumbers`Private`eps, 0, 1}]]}],
     "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualSimplify, {
      SyntaxInformation[DualNumbers`DualSimplify] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualSimplify"], 
   False]]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"bae4113a-87fd-4745-9d3c-ba7c3d9a6a84"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation solving and optimization", \
"Subsubsection",ExpressionUUID->"12cf237a-1fd9-4299-b831-4449eda98c2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualFindRoot"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMinimum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMaximum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FindDualSolution"}]}], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"682653f7-3b28-4eeb-976f-b4dedabf2c59"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec", "}"}], ",", 
                    "DualNumbers`Private`rest"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    "DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`stdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", "DualNumbers`Private`equations", "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "Subtract", ",", "DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`stdEqs", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol", "=", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`spec", ",", 
                    "DualNumbers`Private`rest"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    "DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`stdSol"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindRoot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindRoot works like FindRoot, but allows for Dual numbers in the \
equations.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindRoot, {DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eq, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindRoot[
        DualNumbers`Private`eq, {DualNumbers`Private`spec}, 
         DualNumbers`Private`rest], DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`stdEqs, DualNumbers`Private`stdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed]]; 
         DualNumbers`Private`stdEqs = 
          Apply[Subtract, DualNumbers`Private`equations, {1}]; 
         DualNumbers`Private`stdEqs = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`stdEqs]]; 
         DualNumbers`Private`stdSol = 
          FindRoot[
           DualNumbers`Private`stdEqs, DualNumbers`Private`spec, 
            DualNumbers`Private`rest]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol, {
              Repeated[Blank[] -> PatternTest[
                 Blank[], NumericQ]]}]], 
           Return[$Failed]]; Quiet[
           DualNumbers`Private`firstSol[
            DualNumbers`FindDualSolution[
            DualNumbers`Private`equations, DualNumbers`Private`stdSol]], {
            MessageName[DualNumbers`FindDualSolution, "nonsol"]}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindRoot"], False]]], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"40042583-541f-4b6d-905b-593ee0190a8e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    RowBox[{
                    "DualNumbers`Private`spec$", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`fun$", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    RowBox[{
                    "Last", "[", "DualNumbers`Private`stdSol$", "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun$", "/.", "\[VeryThinSpace]", 
                    "DualNumbers`Private`dualSol$"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualFindMinimum", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFindMinimum] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMinimum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMinimum works like FindMinimum, but allows for Dual numbers in \
the objective function.\nDualFindMinimum does not support constraints on the \
independent variables.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMinimum, {DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMinimum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMinimum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFindMinimum, {
      SyntaxInformation[DualNumbers`DualFindMinimum] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMinimum"], False]]], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"4f383423-4dac-4dc4-a006-047bbc166e70"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    RowBox[{
                    "DualNumbers`Private`spec$", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{
                    "DualFactor", "[", "DualNumbers`Private`fun$", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMaximum", "[", 
                    RowBox[{
                    "DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    RowBox[{
                    "Last", "[", "DualNumbers`Private`stdSol$", "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "DualNumbers`Private`fun$", "/.", "\[VeryThinSpace]", 
                    "DualNumbers`Private`dualSol$"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualFindMaximum", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFindMaximum] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMaximum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMaximum works like FindMaximum, but allows for Dual numbers in \
the objective function.\nDualFindMaximum does not support constraints on the \
independent variables.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMaximum, {DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMaximum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMaximum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFindMaximum, {
      SyntaxInformation[DualNumbers`DualFindMaximum] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMaximum"], False]]], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"ea8801f3-907b-4faa-a532-8b2e9119dc19"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`sol", ":", 
                    RowBox[{"{", "__Rule", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    "DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`vars", "=", 
                    RowBox[{"Keys", "[", "DualNumbers`Private`sol", "]"}]}], 
                    ",", "DualNumbers`Private`dualRules", ",", 
                    "DualNumbers`Private`nonstdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "FailureQ", "[", "DualNumbers`Private`equations", "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualRules", "=", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{
                    RowBox[{"Values", "[", "DualNumbers`Private`sol", "]"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{"0", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`vars"}]}]}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "Subtract", ",", "DualNumbers`Private`equations", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "/.", 
                    "\[VeryThinSpace]", "DualNumbers`Private`dualRules"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dual", "[", 
                    RowBox[{
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"EqualTo", "[", "0", "]"}], ")"}]}], ",", "_"}], 
                    "]"}], ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`sol", "]"}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NonStandard", "[", "#1", "]"}], "\[Equal]", 
                    "0"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`equations"}]}], ";", 
                    RowBox[{"DualNumbers`Private`nonstdSol", "=", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    "DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`vars"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`nonstdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Rule", "}"}], ".."}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "DualNumbers`Private`sol", ",", 
                    "DualNumbers`Private`vars"}], "]"}], ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`vars", ",", "0"}],
                     "]"}]}], "}"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`nonstdSol"}], ",", "$Failed"}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "FindDualSolution", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`FindDualSolution] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`FindDualSolution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FindDualSolution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"eqs\\\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\
\"sol\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) finds a Dual-valued solution to \
\\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \\!\\(\\*StyleBox[\\\"sol\
\\\", \\\"TI\\\"]\\) is the standard-valued solution.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12., {3., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FindDualSolution\", \"[\", RowBox[{StyleBox[\"eqs\", \
\"TI\"], \",\",  StyleBox[\"sol\", \"TI\"]}], \"]\"}]\) finds a Dual-valued \
solution to \!\(\*StyleBox[\"eqs\", \"TI\"]\) where \!\(\*StyleBox[\"sol\", \
\"TI\"]\) is the standard-valued solution.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`FindDualSolution, {DualNumbers`FindDualSolution[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`sol, {
           BlankSequence[Rule]}]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`vars = Keys[DualNumbers`Private`sol], 
          DualNumbers`Private`dualRules, DualNumbers`Private`nonstdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed]]; 
         DualNumbers`Private`dualRules = 
          Thread[DualNumbers`Private`vars -> 
            Values[DualNumbers`Private`sol] + 
             Map[DualNumbers`Dual[0, #]& , DualNumbers`Private`vars]]; 
         DualNumbers`Private`equations = ReplaceAll[
            DualNumbers`DualFactor[
             Apply[Subtract, DualNumbers`Private`equations, {1}]], 
            DualNumbers`Private`dualRules]; If[
           Not[
            MatchQ[DualNumbers`Private`equations, {
              Repeated[
               DualNumbers`Dual[
                PatternTest[
                 Blank[], 
                 EqualTo[0]], 
                Blank[]]]}]], 
           Message[
            MessageName[DualNumbers`FindDualSolution, "nonsol"], 
            Short[DualNumbers`Private`sol]]]; 
         DualNumbers`Private`equations = 
          Map[DualNumbers`NonStandard[#] == 0& , 
            DualNumbers`Private`equations]; 
         DualNumbers`Private`nonstdSol = 
          Solve[DualNumbers`Private`equations, DualNumbers`Private`vars]; If[
           MatchQ[DualNumbers`Private`nonstdSol, {
             Repeated[{
               BlankSequence[Rule]}]}], 
           Map[Thread[DualNumbers`Private`vars -> MapThread[DualNumbers`Dual, {
                Lookup[DualNumbers`Private`sol, DualNumbers`Private`vars], 
                Lookup[#, DualNumbers`Private`vars, 0]}]]& , 
            DualNumbers`Private`nonstdSol], $Failed]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`FindDualSolution, {
      SyntaxInformation[DualNumbers`FindDualSolution] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`FindDualSolution"], False]]], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"7c9eba13-d517-4427-9ee3-d4be908a5f79"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running tests", \
"Section",ExpressionUUID->"e401cf21-84a6-462d-aad9-92e779a9dd14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testReport", "=", 
   RowBox[{
    RowBox[{"KeyMap", "[", "FileNameTake", "]"}], "@", 
    RowBox[{"AssociationMap", "[", 
     RowBox[{"TestReport", ",", "\[IndentingNewLine]", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.wlt\>\"", ",", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], ",", 
           "\"\<VerificationTests\>\""}], "}"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "/@", 
       RowBox[{"#", "[", "\"\<TestResultRules\>\"", "]"}]}], "&"}], ",", 
     "\[IndentingNewLine]", "testReport"}], "\[IndentingNewLine]", "]"}], "//",
    "Dataset"}], "//", "Rasterize"}]}], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"fcd1bea9-7ea9-4a34-80f4-b34bc4b8a10b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3buO3MgZhuGGnTj0LTjxJQyMyRw6XcMXwIU1CycyoDVgOHXW2VwJw0n3
GiZWLGmgAxQMJI0gzdpk81RHskgWu6b4vw/gdTebp676u+bjoVt/+PGfP1z9
5nA4/Py76j8/FP/+84sXxX/++vvqyd+e//yPn54/+/tfnv/r2U/PXvzpx99W
E/9b/e+P1YP68f8AAACwvcfHx48fP97d3b0CAABADFWy+vDhw/fv3/u49fbt
20+fPvVTAAAAsFKVrL58+VKlrG/fvlVPP378WMWt1DsFAACwQw8PD+/fv68e
vHnz5vHxMfXuAAAA7NOrV6/6/wIAAGALJC4AAICtkbgAAAC2RuICAADYGokL
AABgayQuAACArU0mrl8AAAAQZk3iugeWon5ioSUFotOFowByROJCKtRPLLSk
QHS6cBRAjkhcSIX6iYWWFIhOF44CyBGJC6lQP7HQkgLR6cJRADkicSEV6icW
WlIgOl04CiBHJC6kQv3EQksKRKcLRwHkiMSFVKif1u3x4nBxvF0+fwYt2e/z
6je7Q4veI50+Pf+ui4cCmJ7/6RUAiQup6PVTFgfbzA9L6OdL31byT2TkxHWu
lqznmb+RxW+2elvqcqetF+UwY/W6+jQy881G3dSiP0x0+r3d6caGxv4QH+wl
I3frxiiA+5UFoDtP35O4kIq7ftYclQQta38mUw+zG53j2roll61/+ZvVBt92
yBy6btvAZey2NfBHWvnyxOXez4W7sXKe9Ust7vR5f3CVl9rAknoomIMCWFcA
aY60SVxIJXzEUI5IjE+TOlk/bmlmNOdpprjG1ZGPqr151w65d9I/3Xeibe78
SVvSMWq5FvaGillvVhl8q+UujkdlMO5fa9Z/VP+A+nqrn22Y1bt1R3kMS4S1
qr/G2gdhzU6n+zrdbkBfL5+676j0Yf2X+7ioTz0T3Q3if5vztnhCAawrAH8S
60ePJYPJabbRXiNxIYnAEUObMPylU499uvNU5rKueZqPtZ25vImrnn8YmOtH
9hTfToZPV6LcnPlTtmTAceJwLsg19i5pnHaW5th22KvhUTPWKf2r95Y+cPaz
KTO5t66/WXWdy1vVXnlQAbfodL3TfcHY1cvtSrsVnP6S305/bH3jibePzAaZ
/cGnALYrAF/iUuZfNphM9RqJC0mEjRj2hXw7CI0s6zyfpR1LuY96+qfG9u09
mtjJgJ3X0t2s+VtpWlI/oHTfz9EPl44hcf6b7dfWXUzo/r9fdiQ5e/bHnE3f
K223rZpZ2apBict7oYtOd3T6dO/3s7XHTtXzdoXuNDLVaKN9ZDaIr7rmbbFF
AawrAFNXAwGL+97mSLt1SFxIJXjEcH009Fdch0+eeQz1DGMfVXuVrsMj3056
po/9uZ8/DqRqSe/RrjGcjYy9c99sO8b1Q+3w3H3KKSDkzJ5uzLGiVacT11gB
0+mOTp+ZuLq9Vk98zWw0bx+NNoi5ezO3SAFEKABfVpyVuJZ8bElcSGLRMZrL
5OfIsVrthbGP/JJzXDOnew8AJ+dvpWlJ9zz2rgYe7Qa92dPR41E7tr04lsrQ
u/Cw1LdXzjd7+tuiXFtY2qohicteSYdOd3T63MRlXplynuMabRD3RE+DzP7g
j22RAlhXAFES19SVVlevkbiQxJL7EOrnZdl8crVP5HAApV3xsee51a+rD0to
y56OUex1ht3HNeykd7q6itMfcM8R5NT8iVty7I9Ov6thd3QEvtnm4NHYwugl
V/+tF+6x1L11Y35lpsWtOtSYfgZgotk7dLrnury/GFyJS38Xi/p0qpXUhD7z
g08B9K0WvQDmJ67AwWSq10hcSGLRd22GD556etq41bGfyzWPvjLztshu6tE8
p6HNbU/x7KR/+rCxi6KwxqsZ8ydrSd+opZ5Rr3fVO/YuerOl8cUHJRv79krZ
SP/K2NBqbN19GKvuR3irumvM+Hs03uwdOt3ZfdpbWJq4ZjXaZEcPDeJ4m0u2
2KAA1hWAKeT+jaDBZKrXSFxIgvqJhZbcSsA1mVTo9Oytqy4KIEckLqRC/cRC
S8ak3ds78S20hOj0LMWrLgogRyQupEL9xEJLCkSnC0cB5IjEhVSon1hoSYHo
dOEogByRuJAK9RMLLSkQnS4cBZAjEhdSoX5ioSUFotOFowByROJCKtRPLLSk
QHS6cBRAjlYmLgAAAITgHBeSGKk9zEJLCkSnC0cB5IjEhVQYMWKhJQWi04Wj
AHJE4kIqjBix0JIC0enCUQA5InEhFUaMWGhJgeh04SiAHJG4kAojRiy0pEB0
unAUQI6ebuLy/RvlT3/lWezAE8CIEQstKRCdLhwFkKPIiasOEoc4/1Jnn0na
dSqrqqes+xdmkwce7d0JjV7+2ru5Olxev3S88PL68uB5STJXS56aqkGD7RGd
LhwFkKMNEpeSH07/TvrCbKRlkqIolBWRuHbBVXtV1vKPF9VwUmEosdgtWbfj
1Y39GLtBpwtHAeRo28R134SuUzoyXlKe6ifGunn0xFWqi/eJy7fO04OiuOjX
2G9C2eQwg5EKlf3Rd+ZYDDOrO20nJjUTOh+3u+p+60J4a68+ULNjVTWEXN24
X5LOakn9JGHdaAy+e0OnC0cB5GjzxNVHLn/iMldgpKkupQzJJShxdS+czrMp
j4e81C9ZKifQtFVqG1JzWbWEOpN9wk3f2YO545zjup+ZuE55yxfGpDNb0mgl
Gm2P6HThKIAcbZ+41MA0nbgcaWqIKWp4mz7HZZ4r881wr0YuNUo1CzhzkZrR
3LoVndZwLJq5y6JbisQ1J3HVlxOb5wwjLq6xVz289d4Xh3zR6cJRADl6Gue4
jBvufYlLvRYXNXENT8viYHLsvD6jOzA1kauNbE3UUuIciSs8cQ15i8TlxtGu
QHS6cBRAjp7AfVz6aaWxc1zd1PoGrPOc4/K/r+mX6pR1bM+R6U9G9kSSGYnL
isHcoKDijg6B6HThKIAcnfG7itqVuOHuKn2Rkfu41CUPxnXGkXVOJ65hm/Y7
uL8tS+dVxeHZENLqHTDeSv9cvZ3s3gicK794mauZd85PvSQY31oSiE4XjgLI
0Vl/j0u5Elef8NHTSHuFzj5/Zf4WhH4Xu3OdQYnLu5uOLxBaZ6LUq49a5PPe
qqYnK+dXNYWd6xr9dYgTO1uRuFz4ZR6B6HThKIAcPd3fnMfe8ZvJsdCSAtHp
wlEAOSJxIRVGjFhoSYHodOEogByRuJAKI0YstKRAdLpwFECOSFxIhREjFlpS
IDpdOAogRyQupMKIEQstKRCdLhwFkCMSF1JhxIiFlhSITheOAsgRiQupMGLE
QksKRKcLRwHkaGXiAgAAQIg1iSv1aRJkbKT2MAstKRCdLhwFkCMSF1JhxIiF
lhSITheOAsgRiQupMGLEQksKRKcLRwHkiMSFVBgxYqElBaLThaMAckTiQiqM
GLHQkgLR6cJRADlKn7hujxeHi+NthDWdQ8K9zauhAjBixEJLCkSnC0cB5Chy
4rJTwWROiBUk6vXoosSTp5Nz+j15Oru0jl17L68vlf67uolT4/vn+hQrbXl5
/fL8+4SN0enCUQA52lfi2iCHPJ14s//EVQ0XQ8qqxw4GjTD2p/jmakis6mPs
Bp0uHAWQozMnLuVEVDfRCBLHopuhKI3VOBds5y9KZw4xJnq3pWxM21KpnTir
FtVW6NipwDU7ElP9ajev83G76Vtzl0YyzdM2cVa8jlwMGUGslqyGWyWt0pJ7
RKcLRwHk6JyJy0orapDoAkkXNMrCEcqsBZVAMztxKcvWG2ueDI/qx9Uj3xrM
WbvHY2tW34OWJ/U3pq1Dn7rvc1w6ffzACLMljfODnC7cIzpdOAogRxskLlsT
D9TI0cyq5wdHtrGzimtB96Z984xONzZ1P2sNeoA0F1cDmlu38dMbPBbN3GXR
LSUqcZ3uR+AILZBr7FUbj/C6Q3S6cBRAjs54jqssrChWZ4nJFDS5oG/T9sSp
bTnWMTezjeyV8j7cgamJXG2ibKKWEgHlJC7i1kwc7QpEpwtHAeTovInLlRN8
QcJ9Pc6/rRiJa8tzXKOtNLzn4tiewtOfjGw6W+7aq+/4ZKCYhzs6BKLThaMA
cpTsPq76eVl6ryqerhGqN4+PLOjbdE27lnc6yTR9Pk27j8u4Ghh0H5dnzcPk
Idipt6t1V0a1c2L6i6EXKLPgqD2+YLMI31oSiE4XjgLIUbrvKlrhx7gRS48U
Ywv6Nt1QruXVp4wml1W2pN7H3m428LuKvjvtrTenJy5jaW/Y03bJFWay4DpG
M3CyKwi/zCMQnS4cBZCj9L8539vLxTIE4jeTY6ElBaLThaMAckTiQiqMGLHQ
kgLR6cJRADl6QokLwjBixEJLCkSnC0cB5IjEhVQYMWKhJQWi04WjAHJE4kIq
jBix0JIC0enCUQA5InEhFUaMWGhJgeh04SiAHJG4kAojRiy0pEB0unAUQI5W
Ji4AAACEWJO4Up8mQcZGag+z0JIC0enCUQA5InEhFUaMWGhJgeh04SiAHJG4
kAojRiy0pEB0unAUQI5IXEiFESMWWlIgOl04CiBHJC6kwogRCy0pEJ0uHAWQ
o/wSV8J/fpF/+TEqRoxYaEmB6HThKIAcRU5cdiaZSillcTgUpbkOfcrEJs6m
3zTRKwa79l5eXx4GVzdxanz/XJ9ipS0vr1+ef5+wMTpdOAogR8kTlxW5JgIX
iWs3rNqrhothmKjHDgaNMPan+OZqSKzqY+wGnS4cBZCj8yWu5sGx6CJ4n6r0
yKUErvrhoFutL/boT5VljXkck+1Nux+3m3DvF+aaOCteRy6GjCBWS1bDrZJW
ack9otOFowBydN7ENUSrOmZ1M6qRy3eG67S0GnvGEpf2yrDGajvqVHszw6zq
zupTOccVzXjiqo/ROMcVxmxJ4/wgpwv3iE4XjgLI0bnPcWkBSY1fZrpxrTkw
canJqnmhnz56vXJY8rTIsWjmLgv1pBuJKxpP7fW3InCAFso19qqtpx/8Yhfo
dOEogBwlTVz90y4LmYFLv343I3GZ2pUqr7gDUxO52ozWRC0lv5G4opq4qsiN
CME42hWITheOAshR7F+HMM4vuc5N9TMq4ap5pgcufVXLz3G5eCNTnbKOykmx
4cnIprHI1LebOUYLxR0dAtHpwlEAOYr+e1zqDVrq7Vf2zVXa2azTYhcXxi30
rhXp57K0+++d93HVz8uymX+YOKQyxw5rd5gZL4ZeoMQkx4hhDBiMGGH41pJA
dLpwFECOtvgFVO2qXp9LXFcIrYX0qepFwKJwnCtTZqhPRrm/qziEJnXHtKjm
/cqj/T1KJdTxXcV13CPGgPEiFL/MIxCdLhwFkKPz/eY8V+Kg4zeTY6ElBaLT
haMAckTiQiqMGLHQkgLR6cJRADk6X+ICdIwYsdCSAtHpwlEAOSJxIRVGjFho
SYHodOEogByRuJAKI0YstKRAdLpwFECOSFxIhREjFlpSIDpdOAogRyQupMKI
EQstKRCdLhwFkKOViQsAAAAhFicuAAAArETiAgAA2BqJCwAAYGskLgAAgK2R
uAAAALbWZK3Xr1//+uuvqfcFAABgn5rE9f79+4eHh9T7AgAAsEPfv3+/u7ur
Hnz9+vXdu3fV09R7BAAAsCuPj48fPnz48uVL8/Th4aFKX68AAAAQz5s3bz5/
/pw29QEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA0vo/pTYUAg==
    "], {{0, 130.}, {806., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{806., 130.},
  PlotRange->{{0, 806.}, {0, 130.}}]], "Output",
 CellLabel->"Out[101]=",ExpressionUUID->"250a8f25-96ed-4296-9a9e-7d6dc16c975e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re-building the paclet", \
"Section",ExpressionUUID->"b17fd04e-5216-4de6-9df2-053310fbcad6"],

Cell[BoxData[
 RowBox[{"CreatePacletArchive", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\""}], 
    "}"}], "]"}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"40eb1cdb-cbf5-4009-94db-f10d3cd02e26"]
}, Closed]]
},
WindowSize->{1814, 888},
WindowMargins->{{Automatic, 31}, {Automatic, 10}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TaggingRules->{"SaveDialogDataSavesBlog" -> False, "TryRealOnly" -> False},
TrackCellChangeTimes->False,
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9220aa73-8720-4446-a63d-8589ef2eb51f"
]

